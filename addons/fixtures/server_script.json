[
 {
  "_user_tags": ",Web",
  "allow_guest": 1,
  "api_method": "apis.v1.test",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2023-12-23 09:28:51.635560",
  "name": "Test",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "if frappe.form_dict.message == \"ping\":\n\tfrappe.response['message'] = \"pong\"\nelse:\n\tfrappe.response['message'] = \"ok\"",
  "script_type": "API"
 },
 {
  "_user_tags": ",Web",
  "allow_guest": 0,
  "api_method": "apis.v1.check_session",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2023-12-23 09:54:16.677692",
  "name": "Check Session",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "token = frappe.form_dict.token\n\nsession = frappe.get_all(\"API Session User\", pluck=\"name\", filters={\n    \"token\": token,\n    \"expired_on\": [\">\", frappe.utils.today()]\n})\n\nif len(session) > 0:\n    frappe.response['message'] = session[0]\nelse:\n    frappe.throw(\"Session ended\")",
  "script_type": "API"
 },
 {
  "_user_tags": ",Master Data,Web",
  "allow_guest": 1,
  "api_method": "apis.v1.get_province",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2023-12-23 10:09:59.620230",
  "name": "Get Province",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "data = frappe.get_all(\"Territory\", filters=[[\"parent_territory\",\"=\",\"Indonesia\"]], pluck=\"name\", order_by=\"name asc\")\n\nfrappe.response['message'] = data",
  "script_type": "API"
 },
 {
  "_user_tags": ",Web",
  "allow_guest": 0,
  "api_method": "apis.v1.signup",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-18 20:56:25.173885",
  "name": "Signup Customer",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "full_name = frappe.form_dict.full_name\nemail = frappe.form_dict.email\nprovince = frappe.form_dict.province\nphone = frappe.form_dict.phone\npassword = frappe.form_dict.password\n\n\nuser_doc = frappe.get_doc({\n    \"doctype\": \"User\",\n    \"email\": email,\n    \"new_password\": password,\n    \"first_name\": full_name,\n    \"send_welcome_email\": 0,\n    \"role_profile_name\": \"Website User\",\n    \"mobile_no\": phone\n})\nuser_doc.insert(ignore_permissions=True)\n\ndoc = frappe.get_doc({\n    \"customer_name\": full_name,\n    \"email_id\": email,\n    \"provinsi\": province,\n    \"territory\": province,\n    \"customer_group\": \"Consultant\",\n    \"mobile_no\": phone,\n    \"customer_type\": \"Individual\",\n    \"doctype\": \"Customer\"\n})\ndoc.insert(ignore_permissions=True)\n\nuser_perm_doc = frappe.get_doc({\n    \"doctype\": \"User Permission\",\n    \"allow\": \"Customer\",\n    \"user\": user_doc.name,\n    \"for_value\": doc.name\n})\nuser_perm_doc.insert(ignore_permissions=True)\n\n\nfrappe.response['message'] = doc",
  "script_type": "API"
 },
 {
  "_user_tags": ",Onboarding,Web",
  "allow_guest": 0,
  "api_method": "apis.v1.create_session",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-02-06 10:54:15.583944",
  "name": "Create Session",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "try:\n    user = frappe.form_dict.user\n    tokenize = frappe.form_dict.tokenize\n    now = frappe.utils.now()\n    \n    #check tokenize\n    tokenize_components = tokenize.split(\".\")\n    if tokenize_components[0] != \"b1001641fb0ca4c583604b4cec805b11858e43ad\":\n        frappe.throw(\"Forbidden\")\n        \n    user_data = frappe.get_all(\"User\", or_filters=[[\"email\",\"=\",user], [\"mobile_no\", \"=\", user], [\"username\", \"=\", user]])\n    if len(user_data) == 0:\n        customer = frappe.get_all(\"Customer\", filters=[[\"id_drw\", \"=\", user]], pluck=\"name\")\n        if len(customer) > 0:\n            user_permission = frappe.db.get_value(\"User Permission\", {\"allow\": \"Customer\", \"for_value\": customer[0]}, \"user\")\n            if user_permission is not None:\n                frappe.db.set_value(\"User\", user_permission, \"username\", user)\n                user = user_permission\n            else:\n                frappe.throw(\"User invalid\")\n        else:\n            frappe.throw(\"User invalid\")\n    else:\n        user = user_data[0]['name']\n    \n    expired_on = frappe.utils.add_days(now, 3)\n    doc = frappe.get_doc({\n        \"doctype\": \"API Session User\",\n        \"user\": user,\n        \"logged_in_on\": now,\n        \"expired_on\": expired_on,\n        \"token\": tokenize\n    })\n    doc.insert(ignore_permissions=True)\n    \n    frappe.response['message'] = tokenize\nexcept:\n    frappe.log_error(None, \"API Create Session\")\n    frappe.throw(\"error\")",
  "script_type": "API"
 },
 {
  "_user_tags": ",Web",
  "allow_guest": 1,
  "api_method": "apis.v1.get_customer",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2023-12-23 20:17:28.359697",
  "name": "Get Customer",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "token = frappe.form_dict.token\nnow = frappe.utils.now()\n\nuser = frappe.db.get_value(\"API Session User\", {\"token\": token, \"expired_on\": [\">\", now]}, \"user\")\nif user is None:\n    frappe.throw(\"Session not found\")\nelse:\n    customer = frappe.db.get_value(\"User Permission\", {\"user\": user, \"allow\": \"Customer\"}, \"for_value\")\n    if customer is None:\n        frappe.throw(\"Customer not found\")\n    else:\n        doc = frappe.get_doc(\"Customer\", customer)\n        frappe.response['message'] = doc",
  "script_type": "API"
 },
 {
  "_user_tags": ",Dashboard,Web",
  "allow_guest": 1,
  "api_method": "apis.v1.get_customer_card",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2023-12-23 21:29:20.815425",
  "name": "Get Customer Card",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "token = frappe.form_dict.token\n\nsession = frappe.get_all(\"API Session User\", pluck=\"name\", filters={\n    \"token\": token,\n    \"expired_on\": [\">\", frappe.utils.today()]\n})\n\nif len(session) == 0:\n    frappe.throw(\"Session ended\")\n\n\ncustomer = frappe.form_dict.customer\ncustomer_group = frappe.db.get_value(\"Customer\", customer, \"customer_group\")\ndoc = frappe.get_doc(\"Customer Group\", customer_group)\n\nfrappe.response['message'] = doc\n    ",
  "script_type": "API"
 },
 {
  "_user_tags": ",Web",
  "allow_guest": 1,
  "api_method": "apis.v1.get_overview_dashboard",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-02 10:58:41.297143",
  "name": "Overview Dashboard",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "token = frappe.form_dict.token\n\nsession = frappe.get_all(\"API Session User\", pluck=\"name\", filters={\n    \"token\": token,\n    \"expired_on\": [\">\", frappe.utils.today()]\n})\n\nif len(session) == 0:\n    frappe.throw(\"Session ended\")\n\n\ncustomer = frappe.form_dict.customer\ncustomer_doc = frappe.get_doc(\"Customer\", customer)\ncustomer_group = frappe.db.get_value(\"Customer\", customer, \"customer_group\")\ncustomer_group_doc = frappe.get_doc(\"Customer Group\", customer_group)\n\ntimespan_now = \"This Month\"\ntimespan_past = \"Last Month\"\n\nsales_invoice_names_now = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",timespan_now.lower()],[\"docstatus\", \"=\", 1], [\"customer\", \"=\", customer]])\nsales_invoice_names_past = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",timespan_past.lower()],[\"docstatus\", \"=\", 1], [\"customer\", \"=\", customer]])\n\n\n#total order\ntotal_order_now = len(sales_invoice_names_now)\ntotal_order_past = len(sales_invoice_names_past)\ntotal_order_diff = 0\nif total_order_past > 0:\n    total_order_diff = (total_order_now - total_order_past) / total_order_past * 100\n\n#total sales\ntotal_sales_now = 0\ntotal_sales_past = 0\ntotal_sales_diff = 0\nif total_order_now > 0:\n    total_sales_now = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": sales_invoice_names_now})[0][0]\nif total_order_past > 0:\n    total_sales_past = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": sales_invoice_names_past})[0][0]\nif total_sales_past > 0:\n    total_sales_diff = (total_sales_now - total_sales_past) / total_sales_past * 100\n\n#truncate\nif total_sales_diff > 1.0:\n    total_sales_diff = total_sales_diff // 1 - 1\nelif total_sales_diff < -1.0:\n    total_sales_diff = total_sales_diff // 1 + 1\nif total_order_diff > 1.0:\n    total_order_diff = total_order_diff // 1 - 1\nelif total_order_diff < -1.0:\n    total_order_diff = total_order_diff // 1 + 1\n\n#sales analytics\nfiscal_years = frappe.get_all(\"Fiscal Year\", pluck=\"name\", filters={\n    \"website_disabled\": 0  \n}, order_by=\"year_start_date asc\")\nsales_analytics = []\n\nif len(fiscal_years) > 0:\n    year_start_date = frappe.db.get_value(\"Fiscal Year\", fiscal_years[0], \"year_start_date\")\n    data = frappe.db.sql(\"select year(posting_date) as year, month(posting_date) as month, DATE_FORMAT(posting_date, '%%b') as month_label, sum(ifnull(grand_total,0)) as sum from `tabSales Invoice` where posting_date >= %(year_start_date)s and docstatus = 1 and customer = %(customer)s group by year, month order by posting_date asc\",{\n        \"year_start_date\": year_start_date,\n        \"customer\": customer\n    },as_dict=True)\n    fiscal_years.sort(reverse=True)\n    for year in fiscal_years:\n        sales_analytics.append({\n            \"max\": 0,\n            \"labels\": [],\n            \"values\": []\n        })\n    for item in data:\n        idx = fiscal_years.index(str(item['year']))\n        if item['sum'] > sales_analytics[idx]['max']:\n            sales_analytics[idx]['max'] = item['sum']\n        sales_analytics[idx]['labels'].append(item['month_label'])\n        sales_analytics[idx]['values'].append(item['sum'])\n        \n\n\nblogs = frappe.get_all(\"Blog Post\", fields=[\"meta_image\", \"title\", \"name\"], filters=[[\"highlight\",\"=\", 1], [\"published\",\"=\",1]], order_by=\"published_on desc\")\ntop_bc = frappe.db.sql(\"select a.customer_name as label, b.image, sum(a.grand_total) as sum from `tabSales Invoice` a inner join `tabCustomer` b on a.customer = b.name where a.docstatus = 1 group by a.customer order by sum desc limit 20\",as_dict=True)\ntop_product_sales = frappe.db.sql(\"select a.item_name as label, b.image, sum(a.amount) as sum from `tabSales Invoice Item` a inner join `tabItem` b on a.item_code = b.name where a.docstatus = 1 group by a.item_code order by sum desc limit 20\",as_dict=True)\n# remove sum\nfor item in top_bc:\n    del item['sum']\n\nfor item in top_product_sales:\n    del item['sum']\n\nfrappe.response['message'] = {\n    \"customer_card\": {\n        \"card_image\": customer_group_doc.card_image or \"\",\n        \"badge_image\": customer_group_doc.badge_image or \"\",\n        \"customer_name\": customer_doc.customer_name or \"\",\n        \"customer_group\": customer_doc.customer_group or \"\",\n        \"id_drw\": customer_doc.id_drw or \"-\",\n    },\n    \"total_sales_card\": {\n        \"label\": \"Sales \" + timespan_now,\n        \"diff\": total_sales_diff,\n        \"total\": total_sales_now,\n        \"is_currency\": 1,\n        \"icon\": \"/files/total-sales.png\"\n    },\n    \"total_order_card\": {\n        \"label\": \"Order \" + timespan_now,\n        \"diff\": total_order_diff,\n        \"total\": total_order_now,\n        \"is_currency\": 0,\n        \"icon\": \"/files/total-order.png\"\n    },\n    \"fiscal_years\": fiscal_years,\n    \"sales_analytics\": sales_analytics,\n    \"featured_blogs\": blogs,\n    \"top_bc\": top_bc,\n    \"top_product_sales\": top_product_sales\n}\n    ",
  "script_type": "API"
 },
 {
  "_user_tags": ",Web",
  "allow_guest": 1,
  "api_method": "apis.v1.get_doc",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2023-12-24 09:49:48.653518",
  "name": "Get Doc",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "token = frappe.form_dict.token\n\nsession = frappe.get_all(\"API Session User\", pluck=\"name\", filters={\n    \"token\": token,\n    \"expired_on\": [\">\", frappe.utils.today()]\n})\n\nif len(session) == 0:\n    frappe.throw(\"Session ended\")\n\nallowed_doctype = [\"Blog Post\"]\ndoctype = frappe.form_dict.doctype\ndocname = frappe.form_dict.docname\n\nif doctype not in allowed_doctype:\n    frappe.throw(\"Forbidden\")\n\ndoc = frappe.get_doc(doctype, docname)\n\nfrappe.response['message'] = doc\n    ",
  "script_type": "API"
 },
 {
  "_user_tags": ",Web",
  "allow_guest": 1,
  "api_method": "apis.v1.blogs_page",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2023-12-24 10:41:53.532408",
  "name": "Blogs Page",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "token = frappe.form_dict.token\n\nsession = frappe.get_all(\"API Session User\", pluck=\"name\", filters={\n    \"token\": token,\n    \"expired_on\": [\">\", frappe.utils.today()]\n})\n\nif len(session) == 0:\n    frappe.throw(\"Session ended\")\n    \ncategories = frappe.get_all(\"Blog Category\", pluck=\"name\")\nif len(categories) > 0:\n    category = categories[0]\n\nfrappe.response['message'] = {\n    \"categories\": categories,\n    \"category\": category\n}",
  "script_type": "API"
 },
 {
  "_user_tags": ",Web",
  "allow_guest": 1,
  "api_method": "apis.v1.get_list_blog",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2023-12-24 11:18:08.010678",
  "name": "Get List Blog",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "token = frappe.form_dict.token\n\nsession = frappe.get_all(\"API Session User\", pluck=\"name\", filters={\n    \"token\": token,\n    \"expired_on\": [\">\", frappe.utils.today()]\n})\n\nif len(session) == 0:\n    frappe.throw(\"Session ended\")\n\nallowed_doctype = [\"Blog Post\"]\ncategory = frappe.form_dict.category\n\n\ndata = frappe.get_all(\"Blog Post\", fields=[\"*\"], filters={\n    \"blog_category\": category,\n    \"published\": 1\n}, order_by=\"published_on desc\")\n\nfrappe.response['message'] = data\n    ",
  "script_type": "API"
 },
 {
  "_user_tags": ",Web",
  "allow_guest": 1,
  "api_method": "apis.v1.my_profile_dashboard",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-27 15:39:43.630653",
  "name": "My Profile Dashboard",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "token = frappe.form_dict.token\n\nsession = frappe.get_all(\"API Session User\", pluck=\"name\", filters={\n    \"token\": token,\n    \"expired_on\": [\">\", frappe.utils.today()]\n})\n\nif len(session) == 0:\n    frappe.throw(\"Session ended\")\n\ncustomer = frappe.form_dict.customer\ncustomer_doc = frappe.get_doc(\"Customer\", customer)\nmembers = frappe.get_all(\"Customer\", pluck=\"name\", filters=[[\"upline\", \"=\", customer]])\n\nusing_credit_limit = len(customer_doc.credit_limits) > 0\nif using_credit_limit:\n    credit_limit = customer_doc.credit_limits[0].credit_limit\nelse:\n    credit_limit = 0\nunpaid_invoices = frappe.get_all(\"Sales Invoice\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"outstanding_amount\", \">\", 0], [\"customer\", \"=\", customer]], order_by=\"due_date desc\")\ncredit_used = 0\noutstanding_amount = 0\ndue_date = \"\"\nfor invoice in unpaid_invoices:\n    credit_used = credit_used + invoice['outstanding_amount']\n    outstanding_amount = outstanding_amount + invoice['outstanding_amount']\n    due_date = invoice['due_date'] \nkasbon = {\n    \"using_credit_limit\": using_credit_limit,\n    \"has_unpaid_invoice\": len(unpaid_invoices) > 0,\n    \"credit_limit\": credit_limit,\n    \"credit_used\": credit_used,\n    \"credit_use_percentage\": credit_used / credit_limit if using_credit_limit else 0,\n    \"credit_remaining\": credit_limit - credit_used,\n    \"invoice_period\": frappe.utils.today(),\n    \"invoice_outstanding\": outstanding_amount,\n    \"invoice_due_date\": due_date\n}\n\nfrappe.response['message'] = {\n    \n    \"total_points_card\": {\n        \"label\": \"Total Points\",\n        \"diff\": 0,\n        \"total\": customer_doc.total_point,\n        \"is_currency\": 0,\n        \"icon\": \"\"\n    }, \n    \"total_coins_card\": {\n        \"label\": \"Total Coins\",\n        \"diff\": 0,\n        \"total\": customer_doc.total_coins,\n        \"is_currency\": 0,\n        \"icon\": \"\"\n    },\n    \"my_member_card\": {\n        \"label\": \"My Members\",\n        \"diff\": 0,\n        \"total\": len(members),\n        \"is_currency\": 0,\n        \"icon\": \"\"\n    },\n    \"kasbon\": kasbon,\n    \"filter_transaction_date\": [\n        {\"label\": \"Today\", \"value\": \"today\"},\n        {\"label\": \"This Month\", \"value\": \"this month\"},\n        {\"label\": \"Last Month\", \"value\": \"last month\"}]\n}",
  "script_type": "API"
 },
 {
  "_user_tags": ",Web",
  "allow_guest": 1,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2023-12-25 10:26:20.197782",
  "name": "Cek ID DRW",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "id_drw = frappe.form_dict.id_drw\n\n\ncustomer_migration = frappe.get_value(\"customer_migration\")",
  "script_type": "API"
 },
 {
  "_user_tags": ",Web",
  "allow_guest": 1,
  "api_method": "apis.v1.check_user",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-02-08 10:54:48.315770",
  "name": "Check User",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "usr = frappe.form_dict.usr\n\nif usr == \"\":\n    frappe.throw(\"Invalid username\")\nuser = frappe.get_all(\"User\", or_filters=[[\"email\",\"=\",usr], [\"mobile_no\", \"=\", usr], [\"username\", \"=\", usr]])\ncustomer = frappe.get_all(\"Customer\", pluck=\"name\", filters=[[\"id_drw\",\"=\",usr]])\nif len(user) == 0 and len(customer) == 0:\n    frappe.throw(\"Invalid username\")\nelse:\n    if len(user) == 1:\n        customer_perm = frappe.get_all(\"User Permission\", filters={\n            \"user\": user[0][\"name\"],\n            \"allow\": \"Customer\"\n        })\n        if len(customer_perm) > 0:\n            frappe.response['message'] = \"ExistUser\"\n        else:\n            frappe.throw(\"User cannot login at this website\")\n    else:\n        if len(customer) > 0:\n            customer_perm = frappe.get_all(\"User Permission\", filters={\n                \"for_value\": customer[0],\n                \"allow\": \"Customer\"\n            }, pluck=\"user\")\n            \n            if len(customer_perm) > 0:\n                frappe.db.set_value(\"User\", customer_perm[0], \"username\", usr)\n                frappe.db.commit()\n                frappe.response['message'] = \"ExistUser\"\n            else:\n                frappe.response['message'] = \"ClaimIDDRW\"\n        else:\n            frappe.throw(\"Invalid username\")",
  "script_type": "API"
 },
 {
  "_user_tags": ",Web",
  "allow_guest": 1,
  "api_method": "apis.v1.claim_id_drw",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-02-06 10:57:13.283196",
  "name": "Claim ID DRW",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "try:\n    id_drw = frappe.form_dict.id_drw\n    full_name = frappe.form_dict.full_name\n    nik = frappe.form_dict.nik\n    email = frappe.form_dict.email\n    mobile_no = frappe.form_dict.mobile_no\n    password = frappe.form_dict.password\n    \n    customer = frappe.db.get_value(\"Customer\", {\n        \"id_drw\": id_drw,\n        \"nik\": nik\n    })\n    \n    \n    if customer is None:\n        frappe.throw(\"Invalid data\")\n    else:\n        user = frappe.db.get_value(\"User\", email)\n        if user is None:\n            user_doc = frappe.get_doc({\n                \"doctype\": \"User\",\n                \"email\": email,\n                \"new_password\": password,\n                \"first_name\": full_name,\n                \"send_welcome_email\": 0,\n                \"role_profile_name\": \"Website User\",\n                \"username\": id_drw,\n                \"mobile_no\": mobile_no\n            })\n            user_doc.insert(ignore_permissions=True)\n        else:\n            user_doc = frappe.get_doc(\"User\", email)\n            frappe.db.set_value(\"User\", user_doc.name, \"username\", id_drw)\n        \n        user_perm = frappe.db.get_value(\"User Permission\", {\"user\": user_doc.name, \"allow\": \"Customer\", \"for_value\": customer})\n        if user_perm is None:\n            user_perm_doc = frappe.get_doc({\n                \"doctype\": \"User Permission\",\n                \"allow\": \"Customer\",\n                \"user\": user_doc.name,\n                \"for_value\": customer\n            })\n            user_perm_doc.insert(ignore_permissions=True)\n    \n        \n        frappe.response['message'] = \"ok\"\nexcept:\n    frappe.log_error(None, \"API Claim ID DRW\")\n    frappe.throw(\"error\")",
  "script_type": "API"
 },
 {
  "_user_tags": ",Web",
  "allow_guest": 1,
  "api_method": "apis.v1.get_history",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-02 10:57:13.470594",
  "name": "Get History",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "token = frappe.form_dict.token\n\nsession = frappe.get_all(\"API Session User\", pluck=\"name\", filters={\n    \"token\": token,\n    \"expired_on\": [\">\", frappe.utils.today()]\n})\n\nif len(session) == 0:\n    frappe.throw(\"Session ended\")\n\ndoctype = frappe.form_dict.doctype\ncustomer = frappe.form_dict.customer\npage = frappe.form_dict.page\n\n\nif doctype == \"Agent Point Log\":\n    remarks = \"agent_order as remarks\"\n    key_total = \"total_point as total\"\n    uom = \"points\"\nelse:\n    remarks = \"sales_order as remarks\"\n    key_total = \"total_coin as total\"\n    uom = \"coins\"\n\ntoday = frappe.utils.today()\npage = int(page)\nstart_date = frappe.utils.add_days(today, (page + 1) * -30)\nend_date = frappe.utils.add_days(today, (page) * -30)\ndata = frappe.get_all(doctype, filters=[[\"customer\", \"=\", customer], [\"posting_date\", \">\", start_date], [\"posting_date\", \"<=\", end_date]], fields=[\"posting_date\", \"total_belanja\", key_total, remarks, '\"' + uom + '\" as uom'], order_by=\"posting_date desc\")\n\nresult = []\nkeys = []\nidx = None\nfor item in data:\n    posting_date = item['posting_date']\n    if posting_date not in keys:\n        idx = len(result)\n        result.append({\n            \"posting_date\": posting_date,\n            \"data\": [item]\n        })\n        keys.append(posting_date)\n    else:\n        result[idx]['data'].append(item)\nfrappe.response['message'] = result",
  "script_type": "API"
 },
 {
  "_user_tags": ",Web",
  "allow_guest": 1,
  "api_method": "apis.v1.update_customer",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2023-12-25 14:10:16.793147",
  "name": "Update Customer",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\ndata = frappe.form_dict.data\n\ndoc = frappe.get_doc(\"Customer\", customer)\ndoc.update(json.loads(data))\ndoc.save(ignore_permissions=True)\n\nfrappe.response['message'] = doc",
  "script_type": "API"
 },
 {
  "_user_tags": ",Web",
  "allow_guest": 1,
  "api_method": "apis.v1.get_downlines",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-02 10:56:47.959784",
  "name": "Get Downlines",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "token = frappe.form_dict.token\n\nsession = frappe.get_all(\"API Session User\", pluck=\"name\", filters={\n    \"token\": token,\n    \"expired_on\": [\">\", frappe.utils.today()]\n})\n\nif len(session) == 0:\n    frappe.throw(\"Session ended\")\n\ncustomer = frappe.form_dict.customer\ncustomer_doc = frappe.get_doc(\"Customer\", customer)\ngeneration = frappe.get_all(\"Customer\", pluck=\"name\", filters=[[\"upline\",\"=\",customer]])\nresult = {\n    \"is_group\": len(generation) > 0,\n    \"name\": customer,\n    \"doctype\": \"Customer\",\n    \"full_name\": customer_doc.customer_name,\n    \"role\": customer_doc.customer_group,\n    \"is_expand\": True,\n    \"depth\": 0,\n    \"total_sales\": customer_doc.total_belanja,\n    \"total_points\": customer_doc.total_point,\n    \"total_coins\": customer_doc.total_coins,\n    \"downlines\": []\n}\ndepth = 0\nparents = [result]\nwhile len(parents) > 0:\n    new_parents = []\n    for parent in parents:\n        children = frappe.get_all(\"Customer\", fields=[\"*\"], filters=[[\"upline\",\"=\",parent['name']]])\n        for child in children:\n            generation = frappe.get_all(\"Customer\", pluck=\"name\", filters=[[\"upline\",\"=\",child['name']]])\n            item_child = {\n                \"is_group\":  len(generation) > 0,\n                \"name\": child['name'],\n                \"doctype\": \"Customer\",\n                \"full_name\": child['customer_name'],\n                \"role\": child['customer_group'],\n                \"is_expand\": False,\n                \"depth\": depth + 1,\n                \"total_sales\": child['total_belanja'],\n                \"total_points\": child['total_point'],\n                \"total_coins\": child['total_coins'],\n                \"downlines\": []\n            }\n            parent['downlines'].append(item_child)\n            if len(generation) > 0:\n                new_parents.append(item_child)\n    parents = new_parents\n    depth = depth + 1\n    \n    \nfrappe.response['message'] = result",
  "script_type": "API"
 },
 {
  "_user_tags": ",Web",
  "allow_guest": 1,
  "api_method": "apis.v1.get_transaction_history",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-02 09:06:35.766980",
  "name": "Get Transaction History",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "token = frappe.form_dict.token\n\nsession = frappe.get_all(\"API Session User\", pluck=\"name\", filters={\n    \"token\": token,\n    \"expired_on\": [\">\", frappe.utils.today()]\n})\n\nif len(session) == 0:\n    frappe.throw(\"Session ended\")\n\ndoctype = \"Sales Order\"\nkey_date = \"transaction_date\"\ncustomer = frappe.form_dict.customer\ndate_range = frappe.form_dict.date_range\nsearch = frappe.form_dict.search\npage = frappe.form_dict.page\n\nfilters = [[\"customer_name\", \"=\", customer], [\"docstatus\", \"=\", 1]]\nif \"~\" in date_range:\n    date_range_components = date_range.split(\"~\")\n    start_date = date_range_components[0]\n    end_date = date_range_components[1]\n    filters.append([key_date, \">\", start_date])\n    filters.append([key_date, \"<=\", end_date])\nelif date_range != \"\":\n    filters.append([key_date, \"timespan\", date_range])\nif search != \"\":\n    filters.append([\"name\",\"like\", \"%\" + search + \"%\"])\ndata = frappe.get_all(doctype, filters=filters, fields=[\"name\", \"grand_total\", key_date + \" as posting_date\", \"application_status as status\"], order_by=key_date + \" desc\")\n\nfrappe.response['message'] = data",
  "script_type": "API"
 },
 {
  "_user_tags": ",Web",
  "allow_guest": 1,
  "api_method": "apis.v1.get_list_reward_item",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-05 14:30:44.943776",
  "name": "Get Reward Item",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "token = frappe.form_dict.token\n\nsession = frappe.get_all(\"API Session User\", pluck=\"name\", filters={\n    \"token\": token,\n    \"expired_on\": [\">\", frappe.utils.today()]\n})\n\nif len(session) == 0:\n    frappe.throw(\"Session ended\")\n\nallowed_doctype = [\"Reward Item\"]\ncategory = frappe.form_dict.category\n\n\ndata = frappe.get_all(\"Reward Item\", fields=[\"*\"], filters={\n    \"reward_group\": category\n}, order_by=\"required_points desc\")\n\nfrappe.response['message'] = data\n    ",
  "script_type": "API"
 },
 {
  "_user_tags": ",Web",
  "allow_guest": 1,
  "api_method": "apis.v1.redeem_reward",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-05 15:05:07.434840",
  "name": "Redeem Reward",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\nreward_item = frappe.form_dict.reward_item\n\ndoc = frappe.get_doc({\n    \"naming_series\": \"WEB-DRW-REW-.YY.-\",\n    \"company\": \"CV. Wahyu Medika Estetitama\",\n    \"bc\": customer,\n    \"reward_item\": reward_item,\n    \"doctype\": \"Redeem Reward\"\n  })\ndoc.save(ignore_permissions=True)\n\nfrappe.response['message'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "apis.v1.user.get",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-11-30 06:17:49.762823",
  "name": "Apps - Get User",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "user = frappe.form_dict.user\n\nif user is None:\n    user = frappe.session.user\n\ncustomer = frappe.db.get_value(\"Customer\", {\"email_id\": user}, \"name\")\nq = frappe.get_doc(\"Customer\", customer)\n\nid_drw = q.id_drw\n\ndoc_poin_old = frappe.make_post_request('https://drwgroup.id/com.drw.skincare/1.0.0/userpointjson.php?id_drw='+id_drw)\nsum_poin_old = 0\nif doc_poin_old[0]['point'] is not None:\n    sum_poin_old = float(doc_poin_old[0]['point'])\n\ndoc_poin = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"get_point\",\">\",0],[\"application_status\",\"!=\",\"Dibatalkan\"],[\"customer\",\"=\",customer],[\"waktu_pemesanan\",\">\",\"2024-10-01 00:00:00\"]])\nsum_poin = 0\ndatapoin = []\nfor docpoin in doc_poin:\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": docpoin.name}, \"parent\")\n    if si is not None:\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\n        if sistat > 0: \n            sum_poin = sum_poin + docpoin.get_point\n            datapoin.append({\n                \"sales_order\": docpoin.name,\n                \"customer_name\": docpoin.customer_name,\n                \"application_status\": docpoin.application_status,\n                \"waktu_pemesanan\": docpoin.waktu_pemesanan,\n                \"waktu_pembayaran\": docpoin.waktu_pembayaran,\n                \"total_poin\": docpoin.get_point\n            })\n\npoin_reward = 0\npoin_reward = frappe.db.get_value(\"Point Reward\", {\"id_drw\": id_drw}, \"point\")\nif poin_reward is None: poin_reward = 0\n\ntotal_poin = sum_poin_old + sum_poin + poin_reward\n\ndoc_coin = frappe.get_all(\"Agent Coin Log\", fields=[\"*\"], filters=[[\"is_cashback\",\"=\",0],[\"customer\",\"=\",customer]])\nsum_coin = 0\ndatacoin = []\nfor doccoin in doc_coin:\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": doccoin.sales_order}, \"parent\")\n    if si is not None:\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\n        sistatus = frappe.db.get_value(\"Sales Invoice\", si, \"status\")\n        bank = frappe.db.get_value(\"Sales Invoice Metode Pembayaran\", {\"parent\": si}, \"nama_bank\")\n        docsi = frappe.get_doc(\"Sales Invoice\", si)\n        if bank is not None and sistat>0: \n            sum_coin = sum_coin + doccoin.total_coin\n            datacoin.append({\n                \"name\": doccoin.name,\n                \"customer_name\": doccoin.nama_agent,\n                \"sales_order\": doccoin.sales_order,\n                \"posting_date\": doccoin.posting_date,\n                \"total_coin\": doccoin.total_coin\n            })\n\ncoin_min = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"coin_type\",\"=\",\"Non Cashback\"],[\"total_coin\",\">\",0],[\"customer\",\"=\",customer]])\nsum_coin_min = 0\ndatacoinmin = []\nfor coinmin in coin_min:\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": coinmin.name}, \"parent\")\n    sistat = 0\n    if si is not None:\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\n        if sistat > 0:\n            sum_coin_min = sum_coin_min + coinmin.total_coin\n            datacoinmin.append({\n                \"sales_order\": coinmin.name,\n                \"customer_name\": coinmin.customer_name,\n                \"application_status\": coinmin.application_status,\n                \"waktu_pemesanan\": coinmin.waktu_pemesanan,\n                \"waktu_pembayaran\": coinmin.waktu_pembayaran,\n                \"coin_type\": coinmin.coin_type,\n                \"total_coin\": coinmin.total_coin\n            })\n\nwithdraw = frappe.get_all(\"Withdraw Coins\", fields=[\"*\"], filters=[[\"customer\",\"=\",customer]])\nsum_with = 0\ndatawith = []\nfor withd in withdraw:\n    sum_with = sum_with + withd.total_withdraw\n    datawith.append({\n        \"name\": withd.name,\n        \"customer_name\": withd.customer_name,\n        \"posting_date\": withd.posting_date,\n        \"status\": withd.status,\n        \"total_coin\": withd.total_withdraw\n    })\n\nsum_coin_total = sum_coin - sum_coin_min - sum_with\ncoin_total = sum_coin_total\nif sum_coin_total < 0: coin_total = 0\n\ncur_date = frappe.utils.today()\nlast_date = frappe.utils.add_to_date(cur_date,days=-30)\ncb_get = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"get_cashback\",\">\",0],[\"waktu_pembayaran\",\"is\",\"set\"],[\"application_status\",\"!=\",\"Dibatalkan\"],[\"customer\",\"=\",customer]])\nsum_cb_get = 0 \ndataget = []\nfor cbget in cb_get:\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": cbget.name}, \"parent\")\n    sistat = 0\n    if si is not None:\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\n        if sistat > 0:\n            sum_cb_get = sum_cb_get + cbget.get_cashback\n            dataget.append({\n                \"sales_order\": cbget.name,\n                \"customer_name\": cbget.customer_name,\n                \"sales_invoice\": sistat,\n                \"application_status\": cbget.application_status,\n                \"waktu_pemesanan\": cbget.waktu_pemesanan,\n                \"waktu_pembayaran\": cbget.waktu_pembayaran,\n                \"get_cashback\": cbget.get_cashback\n            })\n\ncb_min = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"coin_type\",\"=\",\"Cashback\"],[\"total_coin\",\">\",0],[\"application_status\",\"!=\",\"Dibatalkan\"],[\"customer\",\"=\",customer]])\nsum_cb_min = 0\ndatamin = []\nfor cbmin in cb_min:\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": cbmin.name}, \"parent\")\n    sistat = 0\n    if si is not None:\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\n    sum_cb_min = sum_cb_min + cbmin.total_coin\n    datamin.append({\n        \"sales_order\": cbmin.name,\n        \"customer_name\": cbmin.customer_name,\n        \"sales_invoice\": sistat,\n        \"application_status\": cbmin.application_status,\n        \"waktu_pemesanan\": cbmin.waktu_pemesanan,\n        \"waktu_pembayaran\": cbmin.waktu_pembayaran,\n        \"coin_type\": cbmin.coin_type,\n        \"total_coin\": cbmin.total_coin\n    })\n\nsum_cb_total = sum_cb_get-sum_cb_min\ncb_total = sum_cb_total\nif sum_cb_total < 0: cb_total = 0\n\nfrappe.response['data'] = {\n    \"id_drw\": id_drw,\n    \"customer_name\": q.customer_name,\n    \"level\": q.customer_group,\n    \"sum_coin_get\": sum_coin,\n    \"sum_coin_min\": sum_coin_min,\n    \"sum_withdraw\": sum_with,\n    \"sum_total_coin\": sum_coin_total,\n    \"coins\": coin_total,\n    \"sum_cb_get\": sum_cb_get,\n    \"sum_cb_min\": sum_cb_min,\n    \"sum_total_cb\": sum_cb_total,\n    \"cashback\": cb_total,\n    \"point\": total_poin\n}\n\ndoccust = {\n    \"name\": q.name,\n    \"owner\": q.owner,\n    \"creation\": q.creation,\n    \"modified\": q.modified,\n    \"modified_by\": q.modified_by,\n    \"idx\": q.idx,\n    \"docstatus\": q.docstatus,\n    \"naming_series\": q.naming_series,\n    \"customer_name\": q.customer_name,\n    \"nik\": q.nik,\n    \"tanggal_lahir\": q.tanggal_lahir,\n    \"tempat_lahir\": q.tempat_lahir,\n    \"gender\": q.gender,\n    \"customer_type\": q.customer_type,\n    \"id_drw\": q.id_drw,\n    \"photo_profil\": q.photo_profil,\n    \"customer_group\": q.customer_group,\n    \"upline\": q.upline,\n    \"territory_lama\": q.territory_lama,\n    \"territory\": q.territory,\n    \"provinsi\": q.provinsi,\n    \"kabupaten_kota\": q.kabupaten_kota,\n    \"nomor_awalan_pajak\": q.nomor_awalan_pajak,\n    \"so_required\": q.so_required,\n    \"dn_required\": q.dn_required,\n    \"disabled\": q.disabled,\n    \"is_internal_customer\": q.is_internal_customer,\n    \"user_admin\": q.user_admin,\n    \"nama_tim\": q.nama_tim,\n    \"default_price_list\": q.default_price_list,\n    \"customer_primary_contact\": q.customer_primary_contact,\n    \"mobile_no\": q.mobile_no,\n    \"email_id\": q.email_id,\n    \"customer_primary_address\": q.customer_primary_address,\n    \"facebook\": q.facebook,\n    \"instagram\": q.instagram,\n    \"language\": q.language,\n    \"is_frozen\": q.is_frozen,\n    \"total_belanja\": q.total_belanja,\n    \"benlanja_terakhir\": q.benlanja_terakhir,\n    \"total_point\": total_poin,\n    \"remaining_point\": q.remaining_point,\n    \"total_coins\": coin_total,\n    \"total_coin_cashback\": cb_total,\n    \"limit_kasbon\": q.limit_kasbon,\n    \"klaim_kasbon\": q.klaim_kasbon,\n    \"jatuh_tempo\": q.jatuh_tempo,\n    \"percentage_kasbon\": q.percentage_kasbon,\n    \"default_sales_partner\": q.default_sales_partner,\n    \"default_commission_rate\": q.default_commission_rate,\n    \"doctype\": q.doctype,\n    \"companies\": q.companies,\n    \"accounts\": q.accounts,\n    \"credit_limits\": q.credit_limits,\n    \"sales_team\": q.sales_team\n}\n\nupline_mobile = frappe.db.get_value(\"Customer\", customer.upline, \"mobile_no\")\n\nuser = frappe.get_doc(\"User\", user)\n\nfrappe.response['message'] = {\n    \"user\": user,\n    \"customer\": doccust,\n    \"upline_id\": customer.upline,\n    \"upline_mobile\": upline_mobile\n}",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "apis.v1.user.inquiry",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-22 15:52:34.427812",
  "name": "Apps - Inquiry User",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "user = frappe.form_dict.user\n\nif user is None:\n    user = frappe.session.user\n    \nuser_exist = frappe.get_all(\"User\", fields=[\"name\", \"enabled\"], or_filters=[[\"email\",\"=\",user], [\"name\",\"=\",user], [\"username\",\"=\",user], [\"mobile_no\",\"=\",user]])\ncustomer = frappe.db.get_value(\"Customer\", {\"id_drw\": user})\nif customer and len(user_exist) == 0:\n    user_perm = frappe.db.get_value(\"User Permission\", {\"for_value\": customer}, \"user\")\n    if user_perm:\n        frappe.db.set_value(\"User\", user_perm, \"username\", user)\n        frappe.db.commit()\n        frappe.response['message'] = user_perm\nelse:\n    if len(user_exist) == 0:\n        frappe.throw(\"Not Found\")\n    elif user_exist[0][\"enabled\"] == 0:\n        frappe.throw(\"Disabled\")\n    \n    frappe.response['message'] = user_exist[0]['name']",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "apis.v1.drop_center.get",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-11 18:33:51.358676",
  "name": "Get Drop Center",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "data = frappe.get_all(\"Drop Center\", fields=[\"*\"], order_by=\"name asc\")\n\nfrappe.response['message'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "apis.v1.promo.get",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-19 11:20:25.709238",
  "name": "Apps Get Promo",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "data = frappe.get_all(\"Promo\", fields=[\"*\"], filters=[[\"published\", \"=\", 1]], order_by=\"name asc\")\n\nfrappe.response['message'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "apis.v1.product_bundle.get",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-17 10:35:21.952034",
  "name": "Apps - Get Product Bundle",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "names = frappe.get_all(\"Product Bundle\", pluck=\"new_item_code\")\ndata = []\nif len(names) > 0:\n    data = frappe.get_all(\"Item\", fields=[\"*\"], filters=[[\"name\", \"in\", names]], order_by=\"name asc\")\n\nfrappe.response['message'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "apis.v1.product.get",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-17 16:16:49.768564",
  "name": "Apps - Get Item",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "data = frappe.get_all(\"Item\", fields=[\"*\"], filters=[[\"disabled\", \"=\", 0], [\"is_sales_item\", \"=\", 1], [\"is_apps\", \"=\", 1]], order_by=\"name asc\", limit_page_length=20)\n\nfrappe.response['message'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "apis.v1.product.search",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-25 04:20:42.161646",
  "name": "Apps - Search Item",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "query = frappe.form_dict.query\npage = frappe.form_dict.page\nis_grid = frappe.form_dict.is_grid\ncategory = frappe.form_dict.category\n\nif category is None: filters = [[\"disabled\", \"=\", 0], [\"is_sales_item\", \"=\", 1], [\"is_apps\", \"=\", 1]]\nelse: filters = [[\"disabled\", \"=\", 0], [\"is_sales_item\", \"=\", 1], [\"is_apps\", \"=\", 1], [\"item_category\",\"=\",category]]\n\nor_filters=[]\nif (query != \"\"):\n    for word in query.split(\" \"):\n        or_filters.append([\"item_name\", \"like\", \"%\" + word + \"%\"])\ndata = frappe.get_all(\"Item\", fields=[\"name\", \"item_code\", \"stock_uom\",\"item_category\"], or_filters=or_filters, filters=filters, order_by=\"name asc\", limit_start=int(page) * 20, limit_page_length=20)\n\nif is_grid == \"YES\":\n    if len(data) > 0:\n        frappe.response['message'] = [{\n            \"data\": data\n        }]\n    else:\n        frappe.response['message'] = []\nelse:\n    frappe.response['message'] = data\n\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "apis.v1.product.search_autocomplete",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-17 18:48:18.898733",
  "name": "Apps - Search Autocomplete Item",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "query = frappe.form_dict.query\nor_filters=[]\nif (query != \"\"):\n    for word in query.split(\" \"):\n        or_filters.append([\"item_name\", \"like\", \"%\" + word + \"%\"])\ndata = frappe.get_all(\"Item\", fields=[\"*\"], or_filters=or_filters, filters=[[\"disabled\", \"=\", 0], [\"is_apps\",\"=\",1]], order_by=\"name asc\", limit_page_length=8)\n\nfrappe.response['message'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "apis.v1.product_bundle.search",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-16 18:31:14.050093",
  "name": "Apps - Search Product Bundle",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "query = frappe.form_dict.query\npage = frappe.form_dict.page\nis_grid = frappe.form_dict.is_grid\nor_filters = []\nfor word in query.split(\" \"):\n    or_filters.append([\"description\", \"like\", \"%\" + word + \"%\"])\nnames = frappe.get_all(\"Product Bundle\", pluck=\"new_item_code\", or_filters=or_filters, limit_page_length=20, limit_start=int(page) * 20)\ndata = []\nif len(names) > 0:\n    data = frappe.get_all(\"Item\", fields=[\"name\", \"item_code\", \"stock_uom\"], filters=[[\"name\", \"in\", names]], order_by=\"name asc\")\n\nif is_grid == \"YES\":\n    if len(data) > 0:\n        frappe.response['message'] = [{\n        \"data\": data\n    }]\n    else:\n        frappe.response['message'] = []\nelse:\n    frappe.response['message'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "apis.v1.order.search",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-02-05 09:52:53.733876",
  "name": "Apps - Search Order",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "query = frappe.form_dict.query\npage = frappe.form_dict.page\nstatus = frappe.form_dict.status\nor_filters = []\nfor word in query.split(\" \"):\n    or_filters.append([\"name\", \"like\", \"%\" + word + \"%\"])\nnames = frappe.get_list(\"Sales Order\", pluck=\"name\", filters=[[\"naming_series\",\"like\",\"%APP%\"],[\"application_status\", \"=\", status]], or_filters=or_filters, limit_page_length=6, limit_start=int(page) * 6, order_by=\"name desc\")\ndata = []\nfor name in names:\n    data.append(frappe.get_doc(\"Sales Order\", name))\n\nfrappe.response['message'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "apis.v1.address.search",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-22 11:35:34.467758",
  "name": "Apps - Search Address",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\npage = frappe.form_dict.page\ndropshipper = frappe.form_dict.dropshipper or 0\ndata = frappe.get_list(\"Address\", fields=[\"*\"], filters=[[\"dropshipper\", \"=\", int(dropshipper)],[\"address_type\", \"=\", \"Shipping\"],[\"Dynamic Link\", \"link_name\", \"=\", customer]], limit_page_length=20, limit_start=int(page) * 20)\n\nfrappe.response['message'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "apis.v1.order.create",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-17 09:45:08.699849",
  "name": "Apps - Create Order",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "json_param = frappe.form_dict.json\ndata = json.loads(json_param)\ndata['doctype'] = \"Sales Order\"\ndoc = frappe.get_doc(data)\ntry:\n    doc.insert(ignore_permissions=True)\n    frappe.response['message'] = doc\nexcept:\n    frappe.log_error(title=\"Error Create Order\", message=None)\n    frappe.throw(\"Error\")\n\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Submit",
  "event_frequency": "All",
  "modified": "2024-01-16 23:46:09.377686",
  "name": "Update Sales Invoice in Sales Order",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Sales Invoice",
  "script": "if doc.items[0].sales_order is not None and doc.items[0].sales_order != \"\":\n    so = doc.get('items')[0].sales_order\n    frappe.db.set_value(\"Sales Order\", so,{\n        \"application_status\": \"Belum Bayar\",\n        \"application_status_color_code\": \"Warning\",\n        \"sales_invoice\": doc.name,\n        \"additional_tax_and_charges\": doc.total_taxes_and_charges\n    })\n    ",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save (Submitted Document)",
  "event_frequency": "All",
  "modified": "2024-01-16 23:53:44.528582",
  "name": "Update No Resi",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Sales Invoice",
  "script": "if doc.items[0].sales_order is not None and doc.items[0].sales_order != \"\":\n    so = doc.get('items')[0].sales_order\n    frappe.db.set_value(\"Sales Order\", so,{\n        \"nama_kurir\": doc.nama_kurir,\n        \"no_resi\": doc.no_resi\n    })\n    ",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "Daily",
  "modified": "2024-12-02 13:47:29.256100",
  "name": "Auto Cancel Sales Invoice",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "data = frappe.get_all(\"Sales Invoice\", filters=[[\"due_date\", \"<=\", frappe.utils.today()], [\"docstatus\",\"=\", 1]])\nfor item in data:\n    doc = frappe.get_doc(\"Sales Invoice\", item['name'])\n    if doc.items[0].sales_order is not None and doc.items[0].sales_order != \"\":\n        so = doc.items[0].sales_order\n        frappe.db.set_value(\"Sales Order\", so,{\n            \"application_status\": \"Dibatalkan\",\n            \"application_status_color_code\": \"Inverse\"\n        })",
  "script_type": "Scheduler Event"
 },
 {
  "allow_guest": 1,
  "api_method": "apis.v1.check_user_and_get",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-02-13 21:05:36.158681",
  "name": "Apps - Check User",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "usr = frappe.form_dict.usr\n\nif usr == \"\":\n    frappe.throw(\"Invalid username\")\nuser = frappe.get_all(\"User\", or_filters=[[\"email\",\"=\",usr], [\"mobile_no\", \"=\", usr], [\"username\", \"=\", usr]])\nid_drw = frappe.get_all(\"Customer\", filters=[[\"id_drw\",\"=\",usr]])\nif len(user) == 0 and id_drw == 0:\n    frappe.log_error(usr, \"API: Check User Invalid\")\n    frappe.throw(\"Invalid username\")\nelse:\n    if len(user) == 1:\n        customer_perm = frappe.get_all(\"User Permission\", filters={\n            \"user\": user[0][\"name\"],\n            \"allow\": \"Customer\"\n        })\n        if len(customer_perm) > 0:\n            frappe.response['message'] = user[0][\"name\"]\n        else:\n            frappe.throw(\"User cannot login at this website\")\n    else:\n        if len(id_drw) > 0:\n            frappe.response['message'] = \"ClaimIDDRW\"\n        else:\n            frappe.log_error(usr, \"API: Check User Invalid\")\n            frappe.throw(\"Invalid username\")",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "apis.v1.product_bundle_package.get",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-21 04:40:21.827288",
  "name": "Apps - Get Product Bundle Package",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "data = frappe.get_all(\"Product Bundle Package\", fields=[\"*\"], filters=[[\"is_apps\",\"=\",1]], order_by=\"name asc\", limit_page_length=20)\n\nfrappe.response['message'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "apis.v1.product_bundle_package.search",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-17 10:46:10.611476",
  "name": "Apps - Search Product Bundle Package",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "query = frappe.form_dict.query\npage = frappe.form_dict.page\nis_grid = frappe.form_dict.is_grid\n\nor_filters=[]\nif (query != \"\"):\n    for word in query.split(\" \"):\n        or_filters.append([\"display_name\", \"like\", \"%\" + word + \"%\"])\ndata = frappe.get_all(\"Product Bundle Package\", fields=[\"*\"], or_filters=or_filters, order_by=\"name asc\", limit_start=int(page) * 20, limit_page_length=20)\n\nif is_grid == \"YES\":\n    if len(data) > 0:\n        frappe.response['message'] = [{\n            \"data\": data\n        }]\n    else:\n        frappe.response['message'] = []\nelse:\n    frappe.response['message'] = data\n\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "apis.v1.product_bundle_package.detail",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-17 11:49:01.884323",
  "name": "Apps - Product Bundle Package Detail",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\nproduct_bundle = frappe.get_all(\"Product Bundle\", fields=[\"name\", \"description\"], filters=[[\"product_bundle_package\", \"=\", name]])\nresult = {\n    \"item_package\" : [],\n    \"item_packages\": []\n}\nif len(product_bundle) > 0:\n    result['description'] = product_bundle[0]['description']\n    for item in product_bundle:\n        doc = frappe.get_doc(\"Product Bundle\", item['name'])\n        if len(doc.items) > len(result['item_package']):\n            result['item_package'] = doc.items\n        for item_package in doc.items:\n            result['item_packages'].append(item_package)\nfrappe.response['message'] = result",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "apis.v1.whatsapp.settings",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-17 22:13:39.108702",
  "name": "Get Whatsapp Settings",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "frappe.response['message'] = {\n    \"intent_order\": {\n        \"label\": \"Butuh chat dengan Admin kita?\",\n        \"to\": \"628112977717\",\n        \"template\": \"*Order ID:* <name>%0A*Customer:* <customer_name>%0A*Issue:* <message>\"\n    },\n    \"intent_product\": {\n        \"label\": \"Ada pertanyaan tentang produk ini?\",\n        \"to\": \"628112977717\",\n        \"template\": \"*ID Item:* <name>%0A*Customer:* <customer_name>%0A*Question:* <message>\"\n    }\n}",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "event_frequency": "All",
  "modified": "2024-02-24 14:00:22.064581",
  "name": "Update Sales Order when DN Draft",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Delivery Note",
  "script": "if doc.items[0].against_sales_order != None and doc.items[0].against_sales_order != \"\":\n    so = doc.items[0].against_sales_order\n    frappe.db.set_value(\"Sales Order\", so, {\n        \"application_status\": \"Dikemas\",\n        \"application_status_color_code\": \"Warning\"\n    })",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "event_frequency": "All",
  "modified": "2024-01-18 08:57:45.411545",
  "name": "Update Status SO when DN Submit",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Delivery Note",
  "script": "if doc.items[0].against_sales_order != None and doc.items[0].against_sales_order != \"\":\n    so = doc.items[0].against_sales_order\n    frappe.db.set_value(\"Sales Order\", so, {\n        \"application_status\": \"Dikirim\",\n        \"application_status_color_code\": \"Success\",\n        \"waktu_pengiriman\": frappe.utils.now()\n    })",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": "apis.v1.order.done",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-18 20:47:12.775479",
  "name": "Apps - Done Sales Order",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n\nfrappe.db.set_value(\"Sales Order\", name, {\n    \"application_status\": \"Selesai\",\n    \"pesanan_selesai\": 1,\n    \"pesanan_selesai_pada\": frappe.utils.now()\n})",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "apis.v1.cashback.calculate",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-11 14:01:16.765500",
  "name": "Apps - Hitung Cashback",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "grand_total = float(frappe.form_dict.grand_total)\ncompany = frappe.form_dict.company\naturan_cashback = frappe.get_all(\"Aturan Cashback\", pluck=\"name\", filters=[[\"company\", \"=\", company], [\"valid_from\", \"<=\", frappe.utils.today()]], order_by=\"valid_from desc\")\ncashback = 0\n\nif len(aturan_cashback) > 0:\n    doc = frappe.get_doc(\"Aturan Cashback\", aturan_cashback[0])\n    percentage = 0\n    min_cashback = 0\n    for aturan in doc.details:\n        if min_cashback == 0:\n            min_cashback = aturan.from_total\n        if grand_total >= aturan.from_total and grand_total < aturan.to_total:\n            percentage = aturan.percentage\n    cashback = grand_total * percentage / 100000\n    if percentage == 0 and min_cashback > 0:\n        cashback = 0\n    \nfrappe.response['data'] = cashback",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "apis.v1.upline.find",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-18 21:23:12.091322",
  "name": "Apps - Find Upline",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "id = frappe.form_dict.id\n\ncustomer = frappe.get_all(\"Customer\", fields=[\"name\", \"customer_name\", \"customer_group\", \"image\"], filters=[[\"id_drw\",\"=\",id]])\n\nfrappe.response['message'] = {\n    \"valid\": len(customer) > 0,\n    \"data\": customer\n}",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "apis.v1.customer.get_credit_limit",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-26 17:13:55.468086",
  "name": "Apps - Get Customer Credit Limit",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "\ncustomer = frappe.form_dict.customer\ncustomer_doc = frappe.get_doc(\"Customer\", customer)\n\nusing_credit_limit = len(customer_doc.credit_limits) > 0\nif using_credit_limit:\n    credit_limit = customer_doc.credit_limits[0].credit_limit\nelse:\n    credit_limit = 0\nunpaid_invoices = frappe.get_all(\"Sales Invoice\", fields=[\"*\"], filters=[[\"outstanding_amount\", \">\", 0], [\"customer\", \"=\", customer]], order_by=\"due_date desc\")\ncredit_used = 0\noutstanding_amount = 0\ndue_date = \"\"\nfor invoice in unpaid_invoices:\n    credit_used = credit_used + invoice['outstanding_amount']\n    outstanding_amount = outstanding_amount + invoice['outstanding_amount']\n    due_date = invoice['due_date'] \nfrappe.response['message'] = {\n    \"using_credit_limit\": using_credit_limit,\n    \"has_unpaid_invoice\": len(unpaid_invoices) > 0,\n    \"credit_limit\": credit_limit * 1.0,\n    \"credit_used\": credit_used * 1.0,\n    \"credit_remaining\": (credit_limit - credit_used) * 1.0\n}",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "apis.v1.card.get_member_level",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-19 12:02:31.190638",
  "name": "Apps - Get Member Card Level",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\nyear = frappe.utils.today().split(\"-\")[0]\n\n\nmembers = [\n{\n    \"card_image\": \"/files/member_background1.png\",\n    \"badge_image\": \"/files/Gold%20Double%20Badge%20(2).png\",\n    \"customer_group\": \"\",\n    \"role\": \"Supervisor\",\n    \"level\": \"\",\n    \"is_pass\": False,\n    \"is_member_card_level\": False,\n    \"point_expired_date\": year + \"-12-31\",\n    \"is_top_tier\": False\n},\n{\n    \"card_image\": \"/files/member_background2.png\",\n    \"badge_image\": \"/files/Gold%20Double%20Badge%20(2).png\",\n    \"customer_group\": \"\",\n    \"role\": \"Manager\",\n    \"level\": \"\",\n    \"is_pass\": False,\n    \"is_member_card_level\": False,\n    \"point_expired_date\": year + \"-12-31\",\n    \"is_top_tier\": False\n},\n{\n    \"card_image\": \"/files/member_background3.png\",\n    \"badge_image\": \"/files/Gold%20Double%20Badge%20(2).png\",\n    \"customer_group\": \"\",\n    \"role\": \"Director\",\n    \"level\": \"\",\n    \"is_pass\": False,\n    \"is_member_card_level\": False,\n    \"point_expired_date\": year + \"-12-31\",\n    \"is_top_tier\": True\n}\n]\ncustomer_doc = frappe.get_doc(\"Customer\", customer)\nlevels = [\"Supervisor\", \"Manager\", \"Director\"]\nidx = 0\nlevel = \"Junior\"\nif \"Supervisor\" in customer_doc.customer_group or \"Manager\" in customer_doc.customer_group or \"Director\" in customer_doc.customer_group:\n    for level in levels:\n        members[idx]['is_top_tier'] = True\n        members[idx]['is_pass'] = True\n        members[idx]['is_member_card_level'] = True\n        members[idx][\"customer_group\"] = \"Executive \" + level\n        members[idx]['level'] = \"Executive\"\n        if level in customer_doc.customer_group:\n            members[idx]['is_top_tier'] = False\n            members[idx]['is_pass'] = False\n            members[idx]['is_member_card_level'] = True\n            members[idx]['customer_group'] = customer_doc.customer_group\n            components = customer_doc.customer_group.split(\" \")\n            if len(components) > 1:\n                level = components[0]\n            members[idx]['level'] = level\n            break\n        idx = idx + 1\nif idx == 2 and level == \"Executive\":\n    members[idx]['is_top_tier'] = True\nfrappe.response['message'] = members",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "apis.v1.reward.get",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-19 12:07:44.557615",
  "name": "Apps Get Reward",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "category = frappe.form_dict.category\n\n\ndata = frappe.get_all(\"Reward Item\", fields=[\"*\"], filters={\n    \"reward_group\": category\n}, order_by=\"required_points desc\")\n\nfrappe.response['message'] = data\n    ",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "apis.v1.reward.history",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-20 10:09:46.947062",
  "name": "Apps - History Reward",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "data = frappe.get_list(\"Redeem Reward\", fields=[\"*\"], order_by=\"modified desc\", limit_page_length=100)\n\nfrappe.response['message'] = data\n    ",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Cancel",
  "event_frequency": "All",
  "modified": "2024-02-02 13:14:26.493216",
  "name": "Update Status SO when DN Cancel",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Delivery Note",
  "script": "if doc.items[0].against_sales_order != None and doc.items[0].against_sales_order != \"\":\n    so = doc.items[0].against_sales_order\n    frappe.db.set_value(\"Sales Order\", so, {\n        \"application_status\": \"Dikemas\",\n        \"application_status_color_code\": \"Warning\",\n        \"waktu_pengiriman\": \"00:00:00\"\n    })",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": "apis.v1.invoice.proof_of_images",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-19 16:33:44.128159",
  "name": "Apps - Get Proof of Image",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n\ndata = frappe.get_all(\"Sales Invoice Proof of Payment\", filters=[[\"sales_invoice\", \"=\", name]], order_by=\"creation asc\", fields=[\"*\"])\n\nfrappe.response['message'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "apis.v1.dashboard.downline",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-20 09:22:29.822089",
  "name": "Apps - Dashboard Downline",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\ncustomers = frappe.get_all(\"Customer\", pluck=\"name\", filters=[[\"upline\", \"=\", customer]])\n\ntop_bc = []\ntop_product_sales = []\n\nif len(customers) > 0:\n    names = frappe.get_all(\"Sales Invoice\", pluck=\"name\", filters=[[\"customer\", \"in\", customers], [\"docstatus\", \"=\", 1]])\n    if len(names) > 0:\n        top_bc = frappe.db.sql(\"select 'Trx' as uom, a.customer_name as label, b.territory as subtitle, b.image, sum(a.grand_total) as sum, count(a.name) as total from `tabSales Invoice` a inner join `tabCustomer` b on a.customer = b.name where a.name in %(names)s group by a.customer order by sum desc limit 20\", {\n                \"names\": names\n            }, as_dict=True)\n        top_product_sales = frappe.db.sql(\"select 'Pcs' as uom, a.item_name as label, b.item_group as subtitle, b.image, sum(a.amount) as sum, sum(a.qty) as total from `tabSales Invoice Item` a inner join `tabItem` b on a.item_code = b.name where a.parent in %(names)s group by a.item_code order by sum desc limit 20\", {\n                \"names\": names\n            }, as_dict=True)\n\nfrappe.response['message'] = {\n    \"top_bc\": top_bc,\n    \"top_product_sales\": top_product_sales\n}",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "apis.v1.dashboard.top_global",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-20 09:20:33.895137",
  "name": "Apps - Top Global",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "top_bc = frappe.db.sql(\"select 'Trx' as uom, a.customer_name as label, b.territory as subtitle, b.image, sum(a.grand_total) as sum, count(a.name) as total from `tabSales Invoice` a inner join `tabCustomer` b on a.customer = b.name where a.docstatus = 1 group by a.customer order by sum desc limit 20\", as_dict=True)\ntop_product_sales = frappe.db.sql(\"select 'Pcs' as uom, a.item_name as label, b.item_group as subtitle, b.image, sum(a.amount) as sum, sum(a.qty) as total from `tabSales Invoice Item` a inner join `tabItem` b on a.item_code = b.name where a.docstatus = 1 group by a.item_code order by sum desc limit 20\", as_dict=True)\nfrappe.response['message'] = {\n    \"top_bc\": top_bc,\n    \"top_product_sales\": top_product_sales\n}",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "apis.v1.downline.get_by_upline",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-20 09:40:18.041681",
  "name": "Apps - Get Downline",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "upline = frappe.form_dict.upline\n\nupline_doc = frappe.get_doc(\"Customer\", upline)\ndata = frappe.get_all(\"Customer\", fields=[\"name\", \"customer_name\", \"territory\", \"total_belanja\", \"total_point\", \"total_coins\"], filters=[[\"upline\", \"=\", upline]], order_by=\"customer_name asc\")\n\nfrappe.response['message'] = {\n    \"upline_doc\": upline_doc,\n    \"downlines\": data\n}\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "apis.v1.create_doc",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-24 15:18:14.813719",
  "name": "Create Doc",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "token = frappe.form_dict.token\n\nsession = frappe.get_all(\"API Session User\", pluck=\"name\", filters={\n    \"token\": token,\n    \"expired_on\": [\">\", frappe.utils.today()]\n})\n\nif len(session) == 0:\n    frappe.throw(\"Session ended\")\n    \nparam = frappe.form_dict.param\nparam = json.loads(param)\n\ndoc = frappe.get_doc(param)\ndoc.insert(ignore_permissions=True)\n\nfrappe.response['message'] = doc",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "apis.v1.order.cancel",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-25 11:17:39.037146",
  "name": "Apps - Cancel Order",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n        \ntry:\n    doc_so = frappe.get_doc(\"Sales Order\", name)\n    doc_so.application_status = \"Dibatalkan\"\n    doc_so.dibatalkan_pada = frappe.utils.now()\n    doc_so.docstatus = 2\n    doc_so.save(ignore_permissions=True)\nexcept:\n    frappe.log_error(None, \"Cancel Order\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Cancel",
  "event_frequency": "All",
  "modified": "2024-01-24 16:48:07.683055",
  "name": "Update SO when Cancel",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Sales Order",
  "script": "frappe.db.set_value(\"Sales Order\", doc.name, {\n    \"application_status\": \"Dibatalkan\",\n    \"application_status_color_code\": \"Inverse\",\n    \"dibatalkan_pada\": frappe.utils.now()\n})",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Delete",
  "event_frequency": "All",
  "modified": "2024-01-26 11:28:35.059464",
  "name": "Update Sales Order when DN Deleted",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Delivery Note",
  "script": "if doc.items[0].against_sales_order != None and doc.items[0].against_sales_order != \"\":\n    so = doc.items[0].against_sales_order\n    frappe.db.set_value(\"Sales Order\", so, {\n        \"application_status\": \"Belum Bayar\",\n        \"application_status_color_code\": \"Warning\"\n    })",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 1,
  "api_method": "apis.v1.check_double_customer",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-29 11:39:16.922927",
  "name": "Check Double Customer",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "email = frappe.form_dict.email\n\ncustomer = frappe.get_all(\"Customer\", filters={\"owner\": email})\n\nfrappe.response['message'] = customer",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "apis.v1.get_delivery_service",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-01-31 10:41:33.642145",
  "name": "Apps - Get Delivery Service",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "drop_center = frappe.form_dict.drop_center\n\navailable_services = frappe.get_all(\"Ekspedisi\", fields=[\"kurir\", \"name\", \"nama_ekspedisi\"], filters=[[\"drop_center\",\"=\", drop_center]])\nnames_services = [item['kurir'] for item in available_services]\nkurir = []\nif len(names_services) > 0:\n    kurir = frappe.get_all(\"Kurir\", pluck=\"name\", filters=[[\"name\",\"in\",names_services]], order_by=\"priority asc\")\n\nresult = []\n\nfor item in kurir:\n    row = {\n        \"name\": item,\n        \"services\": []\n    }\n    for service in available_services:\n        if service[\"kurir\"] == item:\n            row['services'].append(service)\n    row['is_single'] = len(row['services'])\n    result.append(row)\nfrappe.response['message'] = result",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "event_frequency": "All",
  "modified": "2024-02-24 14:11:27.718513",
  "name": "Update SI from SO Dropship",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Sales Invoice",
  "script": "if doc.items[0].against_sales_order != None and doc.items[0].against_sales_order != \"\":\n    so = doc.items[0].against_sales_order\n    frappe.db.set_value(\"Sales Invoice\", doc.name, {\n        \"dropshipper\":frappe.db.get_value(\"Sales Order\",so,\"dropshipper\"),\n        \"dc\":frappe.db.get_value(\"Sales Order\",so,\"drop_center\")\n    })",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Insert",
  "event_frequency": "All",
  "modified": "2024-02-06 09:52:24.987138",
  "name": "Check proof payment SI",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Sales Invoice Proof of Payment",
  "script": "if doc.sales_invoice != \"\":\n    frappe.db.set_value(\"Sales Invoice\",doc.sales_invoice,{\"status_proof_payment\":\"Sudah Upload\"})",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 1,
  "api_method": "webhooks.receive",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-02-07 16:12:13.439526",
  "name": "Webhooks Receive Message",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "data = json.loads(frappe.request.data)\nemail = data['room']['account_uniq_id']\n\ntry:\n    api_key = frappe.db.get_value(\"User\", email, \"api_key\")\n    if api_key is None:\n        frappe.log_error(\"User not found \" + email, \"API Webhook Receieve Message\")\n    else:\n        doc = frappe.get_doc( {\n            \"docstatus\": 1,\n            \"title\": \"Admin Support\",\n            \"body\": data['text'],\n            \"analytics_label\": \"Support\",\n            \"topic\": api_key,\n            \"publish\": \"Now\",\n            \"doctype\": \"Push Notification Queue\"\n        })\n        doc.insert(ignore_permissions=True)\n        frappe.db.commit()\n        frappe.response['message'] = doc.name\nexcept:\n    frappe.log_error(None, \"API Webhook Log error\")\nfrappe.throw(\"Not found\")",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "apis.v1.get_territory_by_parent",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-02-08 12:16:10.750695",
  "name": "Get Territory By Level",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "search = frappe.form_dict.search\nparent = frappe.form_dict.parent\nor_filters = []\nif search != \"\":\n    for word in search.split(\" \"):\n        or_filters.append([\"name\", \"like\", \"%\" + word + \"%\"])\n\ndata = frappe.get_all(\"Territory\", filters=[[\"parent_territory\",\"=\",parent]], or_filters=or_filters, pluck=\"name\", order_by=\"name asc\")\nfrappe.response['message'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "apis.v1.customer.dashboard",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-02-12 20:45:55.762151",
  "name": "Apps - Tab Member",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\ncustomer_doc = frappe.get_doc(\"Customer\", customer)\nmembers = frappe.get_all(\"Customer\", pluck=\"name\", filters=[[\"upline\", \"=\", customer]])\n\ntimespan_now = \"This Month\"\n# timespan_past = \"Last Month\"\n\nsales_invoice_names_now = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",timespan_now.lower()],[\"docstatus\", \"=\", 1], [\"customer\", \"=\", customer]])\n# sales_invoice_names_past = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",timespan_past.lower()],[\"docstatus\", \"=\", 1], [\"customer\", \"=\", customer]])\n\n\n#total order\ntotal_order_now = len(sales_invoice_names_now)\n# total_order_past = len(sales_invoice_names_past)\n# total_order_diff = 0\n# if total_order_past > 0:\n#     total_order_diff = (total_order_now - total_order_past) / total_order_past * 100\n\n#total sales\ntotal_sales_now = 0\n# total_sales_past = 0\n# total_sales_diff = 0\nif total_order_now > 0:\n    total_sales_now = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": sales_invoice_names_now})[0][0]\n# if total_order_past > 0:\n#     total_sales_past = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": sales_invoice_names_past})[0][0]\n# if total_sales_past > 0:\n#     total_sales_diff = (total_sales_now - total_sales_past) / total_sales_past * 100\n\n\n\nfrappe.response['message'] = {\n    \"customer\": customer_doc,\n    \"total_sales_now\": int(total_sales_now),\n    \"total_order_now\": total_order_now,\n    \"total_members\": len(members)\n}",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "apis.v1.customer.get_history",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-02-12 21:28:52.410675",
  "name": "Apps - Get History",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "doctype = frappe.form_dict.doctype\ncustomer = frappe.form_dict.customer\npage = frappe.form_dict.page\n\n\nif doctype == \"Agent Point Log\":\n    remarks = \"agent_order as remarks\"\n    key_total = \"total_point as total\"\n    uom = \"points\"\nelse:\n    remarks = \"sales_order as remarks\"\n    key_total = \"total_coin as total\"\n    uom = \"coins\"\n\ntoday = frappe.utils.today()\npage = int(page)\nstart_date = frappe.utils.add_days(today, (page + 1) * -30)\nend_date = frappe.utils.add_days(today, (page) * -30)\ndata = frappe.get_all(doctype, filters=[[\"customer\", \"=\", customer], [\"posting_date\", \">\", start_date], [\"posting_date\", \"<=\", end_date]], fields=[\"posting_date\", key_total, remarks, '\"' + uom + '\" as uom'], order_by=\"posting_date desc\")\n\nresult = []\nkeys = []\nidx = None\nfor item in data:\n    posting_date = item['posting_date']\n    if posting_date not in keys:\n        idx = len(result)\n        result.append({\n            \"posting_date\": posting_date,\n            \"data\": [item]\n        })\n        keys.append(posting_date)\n    else:\n        result[idx]['data'].append(item)\nfrappe.response['message'] = result",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Submit",
  "event_frequency": "All",
  "modified": "2024-02-21 14:27:32.735542",
  "name": "Fetch Drop Center by Set Warehouse",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Sales Order",
  "script": "so = doc.name\nso_doc = doc\nif so_doc.set_warehouse and so_doc.set_warehouse != \"\":\n    drop_center = frappe.db.get_value(\"Drop Center\", {\"warehouse\": so_doc.set_warehouse})\n    if drop_center:\n        doc.drop_center = drop_center",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save (Submitted Document)",
  "event_frequency": "All",
  "modified": "2024-02-24 14:02:55.895203",
  "name": "SI update status dikemas",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Sales Invoice",
  "script": "if doc.items[0].against_sales_order != None and doc.items[0].against_sales_order != \"\" and doc.outstanding_amount == 0:\n    so = doc.items[0].against_sales_order\n    frappe.db.set_value(\"Sales Order\", so, {\n        \"application_status\": \"Dikemas\",\n        \"application_status_color_code\": \"Warning\"\n    })",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": "drw.api.join.item.price",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-06-03 15:38:55.105505",
  "name": "DRW API Join Item Price",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "items = frappe.qb.DocType('Item')\r\nitemprices = frappe.qb.DocType('Item Price')\r\n\r\nq = (\r\n    frappe.qb.from_(items)\r\n        .select(items.item_code,items.item_name,items.item_group,items.stock_uom,items.description,items.image,itemprices.price_list,itemprices.price_list_rate,itemprices.currency,itemprices.valid_from,items.id_item_drw,items.is_apps)\r\n        .left_join(itemprices)\r\n        .on(items.item_code == itemprices.item_code)\r\n        .where(items.is_apps == 1)\r\n        .where((itemprices.price_list == 'Director') | (itemprices.price_list == 'Umum'))\r\n).run(as_dict=True)\r\n\r\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "drw.api.join.item.price.adv",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-06-03 02:13:13.077105",
  "name": "DRW API Item Adv",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "isapps_ = frappe.form_dict.is_apps\r\npricelist_ = frappe.form_dict.price_list\r\n\r\nitems = frappe.qb.DocType('Item')\r\nitemprices = frappe.qb.DocType('Item Price')\r\n\r\nif isapps_ is None:\r\n    isapps = 1\r\nelse:\r\n    isapps = isapps_\r\nif pricelist_ is None:\r\n    pricelist = 'Standard Buying'\r\nelse:\r\n    pricelist = pricelist_\r\n\r\nq = (\r\n    frappe.qb.from_(items)\r\n        .select(items.item_code,items.item_name,items.item_group,items.stock_uom,items.description,items.image,itemprices.price_list,itemprices.price_list_rate,itemprices.currency,itemprices.valid_from,items.id_item_drw,items.is_apps)\r\n        .left_join(itemprices)\r\n        .on(items.item_code == itemprices.item_code)\r\n        .where(items.is_apps == isapps)\r\n        .where(itemprices.price_list == pricelist)\r\n).run(as_dict=True)\r\n\r\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "drw.api.join.batch.item.adv",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-07-28 23:42:38.335712",
  "name": "DRW API Batch Item Adv",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "t = frappe.qb.DocType('Batch')\r\ndate1 = frappe.form_dict.date1\r\ndate2 = frappe.form_dict.date2\r\n\r\nq = (\r\n    frappe.qb.from_(t)\r\n        .select(t.name,t.item,t.item_name,t.qty,t.batch_qty,t.warehouse,t.dc,t.so_date)\r\n        .where(t.so_date[date1:date2])\r\n        .orderby(t.dc)\r\n).run(as_dict=True)\r\n\r\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "drw.api.join.warehouse.klinik",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-06-05 07:04:14.236294",
  "name": "DRW API Join Warehouse Klinik",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "t = frappe.qb.DocType('Warehouse')\r\n\r\nq = (\r\n    frappe.qb.from_(t)\r\n        .select(t.name,t.parent,t.warehouse_name,t.company)\r\n        .where((t.parent==\"Beauty Center - ESTK\") | ((t.company==\"Clinic DRW Skincare\") & (t.parent.like(\"Clinic%\"))))\r\n        .where(t.parent!=\"null\")\r\n).run(as_dict=True)\r\n\r\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "drw.api.join.branch.klinik",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-05 11:45:43.658573",
  "name": "DRW API Join Branch Klinik",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "t = frappe.qb.DocType('Branch')\r\n\r\nq = (\r\n    frappe.qb.from_(t)\r\n        .select(t.name,t.branch,t.company,t.abbr,t.no_urut_location)\r\n        .where((t.name.like(\"Beauty Center%\")) | (t.name.like(\"Rumah Cantik%\")) | (t.name.like(\"Klinik%\")))\r\n).run(as_dict=True)\r\n\r\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "drw.api.join.batch.item.adv.2",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-07-10 12:06:06.537992",
  "name": "DRW API Join Batch Item Adv 2",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "t = frappe.qb.DocType('Batch')\r\n\r\nq = (\r\n    frappe.qb.from_(t)\r\n        .select(t.name,t.item,t.item_name,t.qty,t.batch_qty,t.warehouse,t.dc,t.so_date)\r\n        .where(t.so_date[1719705600:1719792000])\r\n        .orderby(t.dc)\r\n).run(as_dict=True)\r\n\r\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "drw.api.join.patient.klinik",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-06-06 15:36:06.296983",
  "name": "DRW API Join Patient Klinik",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "fields = frappe.form_dict.fields\r\nfilters = frappe.form_dict.filters\r\nstart = frappe.form_dict.start\r\nlength = frappe.form_dict.length\r\n\r\nif fields is None:\r\n    fields = [\"*\"]\r\nif filters is None:\r\n    filters = [[\"branch\",\"like\",\"%\"]]\r\nif start is None:\r\n    start = 0\r\nif length is None:\r\n    length = 10\r\n\r\nt = frappe.get_all('Patient',fields=fields,filters=filters,limit_start=start,limit=length)\r\n\r\nfrappe.response['data'] = t",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "drw.api.join.material.request",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-07-06 06:53:03.974717",
  "name": "DRW API Join Material Request",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "filters = frappe.form_dict.filters\r\nreject = frappe.form_dict.reject\r\nemployee = frappe.form_dict.employee\r\nstart = frappe.form_dict.start\r\nlength = frappe.form_dict.length\r\n\r\nfields = [\"name\",\"title\",\"department\",\"workflow_state\",\"transaction_date\",\"dari\",\"nama\",\"approval_1\",\"approval_2\",\"approval_3\",\"approval_4\",\"approval_5\",\"approval_6\",\"approval_7\"]\r\nfieldm = [\"name\",\"perihal\",\"department\",\"workflow_state\",\"tanggal\",\"dari\",\"dari_nama\",\"approval_1\",\"approval_2\",\"approval_3\",\"approval_4\",\"approval_5\",\"approval_6\",\"approval_7\"]\r\n\r\nw = frappe.get_all(\"User Permission\",fields=[\"for_value\"],filters=[[\"user\",\"=\",frappe.session.user],[\"allow\",\"=\",\"Workflow State\"]],limit=1)\r\nif w:\r\n    wstate = w[0].for_value\r\nelse:\r\n    wstate = \"\"\r\n\r\nif filters is None:\r\n    filters = [[\"workflow_state\",\"!=\",\"Rejected\"],[\"workflow_state\",\"!=\",\"Approved\"],[\"workflow_state\",\"=\",wstate]]\r\nif reject is not None:\r\n    filters = [[\"workflow_state\",\"=\",\"Rejected\"]]\r\nif start is None:\r\n    start = 0\r\nif length is None:\r\n    length = 20\r\n\r\nor_filters = [[\"dari\",\"=\",employee],[\"approval_1\",\"=\",employee],[\"approval_2\",\"=\",employee],[\"approval_3\",\"=\",employee],[\"approval_4\",\"=\",employee],[\"approval_5\",\"=\",employee],[\"approval_6\",\"=\",employee],[\"approval_7\",\"=\",employee]]\r\n\r\nt = frappe.get_all('Material Request',fields=fields,filters=filters,or_filters=or_filters,limit_start=start,limit=length)\r\nm = frappe.get_all('Memorandum Internal',fields=fieldm,filters=filters,or_filters=or_filters,limit_start=start,limit=length)\r\n\r\nfrappe.response['data'] = t\r\nfrappe.response['datam'] = m",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "drw.api.join.version.material.request",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-07-07 10:34:58.816442",
  "name": "DRW API Join Version Material Request",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "user = frappe.form_dict.user\r\nversion = frappe.qb.DocType('Version')\r\nmatreq = frappe.qb.DocType('Material Request')\r\nmemint = frappe.qb.DocType('Memorandum Internal')\r\n\r\nq = (\r\n    frappe.qb.from_(version)\r\n        .select(version.modified,version.modified_by,version.ref_doctype,version.docname,version.data,matreq.title,matreq.workflow_state,matreq.department,matreq.transaction_date)\r\n        .left_join(matreq)\r\n        .on(version.docname == matreq.name)\r\n        .where(version.ref_doctype == 'Material Request')\r\n        .where(version.owner == user)\r\n        .groupby(version.docname)\r\n        .limit(100)\r\n).run(as_dict=True)\r\nm = (\r\n    frappe.qb.from_(version)\r\n        .select(version.modified,version.modified_by,version.ref_doctype,version.docname,version.data,memint.perihal,memint.workflow_state,memint.department,memint.tanggal)\r\n        .left_join(memint)\r\n        .on(version.docname == memint.name)\r\n        .where(version.ref_doctype == 'Memorandum Internal')\r\n        .where(version.owner == user)\r\n        .groupby(version.docname)\r\n        .limit(100)\r\n).run(as_dict=True)\r\n\r\nfrappe.response['data'] = q\r\nfrappe.response['datam'] = m",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "drw.api.join.batch.item.masuk",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-07-03 09:03:11.569990",
  "name": "DRW API Join Batch Item Masuk",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "t = frappe.qb.DocType('Batch')\r\nitems = frappe.qb.DocType('Item')\r\n\r\nq = (\r\n    frappe.qb.from_(t)\r\n        .select(items.id_item_drw,t.item_name,t.batch_qty,t.dc,t.manufacturing_date)\r\n        .left_join(items)\r\n        .on(items.item_code == t.item)\r\n).run(as_dict=True)\r\n\r\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "drw.api.join.material.request.rev",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-07-07 09:12:26.391607",
  "name": "DRW API Join Material Request rev",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "filters = frappe.form_dict.filters\r\nreject = frappe.form_dict.reject\r\nemployee = frappe.form_dict.employee\r\nstart = frappe.form_dict.start\r\nlength = frappe.form_dict.length\r\n\r\nfields = [\"name\",\"title\",\"department\",\"workflow_state\",\"transaction_date\"]\r\nfieldm = [\"name\",\"perihal\",\"department\",\"workflow_state\",\"tanggal\"]\r\n\r\nw = frappe.get_all(\"Workflow User\",fields=[\"workflow_state\"],filters=[[\"user_id\",\"=\",frappe.session.user]],limit=1)\r\nif w:\r\n    wstate = w[0].workflow_state\r\nelse:\r\n    wstate = \"\"\r\n\r\nif filters is None:\r\n    filters = [[\"workflow_state\",\"!=\",\"Rejected\"],[\"workflow_state\",\"!=\",\"Approved\"],[\"workflow_state\",\"=\",wstate]]\r\nif reject is not None:\r\n    filters = [[\"workflow_state\",\"=\",\"Rejected\"]]\r\nif start is None:\r\n    start = 0\r\nif length is None:\r\n    length = 20\r\n\r\nor_filters = [[\"dari\",\"=\",employee],[\"approval_1\",\"=\",employee],[\"approval_2\",\"=\",employee],[\"approval_3\",\"=\",employee],[\"approval_4\",\"=\",employee],[\"approval_5\",\"=\",employee],[\"approval_6\",\"=\",employee],[\"approval_7\",\"=\",employee]]\r\n\r\nt = frappe.get_all('Material Request',fields=fields,filters=filters,or_filters=or_filters,limit_start=start,limit=length)\r\nm = frappe.get_all('Memorandum Internal',fields=fieldm,filters=filters,or_filters=or_filters,limit_start=start,limit=length)\r\n\r\nfrappe.response['data'] = t\r\nfrappe.response['datam'] = m",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "drw.api.join.version.material.request.rev",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-07-07 14:18:48.948338",
  "name": "DRW API Join Version Material Request rev",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "user = frappe.session.user\r\n\r\nq = (\r\n    frappe.db.sql(\r\n        f\"\"\"\r\n        SELECT a.modified,a.modified_by,a.ref_doctype,a.docname,a.data,if(a.ref_doctype='Material Request',b.title,c.perihal) as perihal,if(a.ref_doctype='Material Request',b.workflow_state,c.workflow_state) as workflow_state,if(a.ref_doctype='Material Request',b.department,c.department) as department,if(a.ref_doctype='Material Request',b.transaction_date,c.tanggal) as tanggal \r\n        FROM `tabVersion` a \r\n        LEFT JOIN `tabMaterial Request` b ON a.docname=b.name \r\n        LEFT JOIN `tabMemorandum Internal` c ON a.docname=c.name \r\n        WHERE a.owner=%(user)s and (a.ref_doctype='Material Request' or a.ref_doctype='Memorandum Internal')\r\n        GROUP BY a.docname \r\n        ORDER BY a.modified DESC \r\n        LIMIT 20\r\n        \"\"\",{\r\n        \"user\": user\r\n        }, as_dict=True)\r\n    )\r\n    \r\nqcount = (\r\n    frappe.db.sql(\r\n        f\"\"\"\r\n        SELECT count(*) as jml,ifnull(sum(if((b.workflow_state='Rejected' || c.workflow_state='Rejected'),1,0)),0) as reject\r\n        FROM `tabVersion` a \r\n        LEFT JOIN `tabMaterial Request` b ON a.docname=b.name \r\n        LEFT JOIN `tabMemorandum Internal` c ON a.docname=c.name \r\n        WHERE a.owner=%(user)s and (a.ref_doctype='Material Request' or a.ref_doctype='Memorandum Internal')\r\n        \"\"\",{\r\n        \"user\": user\r\n        }, as_dict=True)\r\n    )\r\n    \r\ntmemo = qcount[0].jml\r\ntreject = qcount[0].reject\r\nif tmemo>0:\r\n    trate = ((tmemo - treject)/tmemo)*100\r\nelse:\r\n    trate = 0\r\n\r\nfrappe.response['data'] = q\r\nfrappe.response['tmemo'] = tmemo\r\nfrappe.response['treject'] = treject\r\nfrappe.response['trate'] = trate",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "drw.api.join.memo.detail",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-07-08 14:01:40.785244",
  "name": "DRW API Join Memo Detail",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "doctype = frappe.form_dict.doctype\r\ndocname = frappe.form_dict.docname\r\n\r\nif doctype=='Material Request':\r\n    q = (frappe.db.sql(\"SELECT * FROM `tabMaterial Request` a WHERE a.name=%(docname)s\",{\"docname\": docname}, as_dict=True))\r\nelse:\r\n    q = (frappe.db.sql(\"SELECT * FROM `tabMemorandum Internal` a WHERE a.name=%(docname)s\",{\"docname\": docname}, as_dict=True))\r\n\r\nf = (\r\n    frappe.db.sql(\r\n        f\"\"\"\r\n        SELECT * \r\n        FROM `tabFile` a\r\n        WHERE a.attached_to_doctype=%(doctype)s AND a.attached_to_name=%(docname)s\r\n        \"\"\",{\r\n        \"doctype\": doctype,\r\n        \"docname\": docname\r\n        }, as_dict=True)\r\n    )\r\n    \r\nfrappe.response['data'] = q\r\nfrappe.response['dataf'] = f\r\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "drw.api.join.memo.detail.rev",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-07-08 14:35:38.019619",
  "name": "DRW API Join Memo Detail rev",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "doctype = frappe.form_dict.doctype\r\ndocname = frappe.form_dict.docname\r\n\r\np = frappe.get_doc(doctype, docname)\r\n\r\nif doctype=='Material Request':\r\n    q = (frappe.db.sql(\"SELECT * FROM `tabMaterial Request` a WHERE a.name=%(docname)s\",{\"docname\": docname}, as_dict=True))\r\nelse:\r\n    q = (frappe.db.sql(\"SELECT * FROM `tabMemorandum Internal` a WHERE a.name=%(docname)s\",{\"docname\": docname}, as_dict=True))\r\n\r\nf = (\r\n    frappe.db.sql(\r\n        f\"\"\"\r\n        SELECT * \r\n        FROM `tabFile` a\r\n        WHERE a.attached_to_doctype=%(doctype)s AND a.attached_to_name=%(docname)s\r\n        \"\"\",{\r\n        \"doctype\": doctype,\r\n        \"docname\": docname\r\n        }, as_dict=True)\r\n    )\r\n    \r\nfrappe.response['data'] = p\r\nfrappe.response['dataq'] = q\r\nfrappe.response['dataf'] = f\r\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "drw.api.join.version.batch",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-21 06:36:48.668630",
  "name": "DRW API Join Version Batch",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "tgl = frappe.form_dict.tgl\r\nitem = frappe.form_dict.item\r\n\r\nif item == \"\":\r\n    item = None\r\nif tgl == \"\":\r\n    tgl = None\r\n\r\ndc = frappe.db.get_value(\"User Permission\", {\"user\":frappe.session.user,\"allow\":\"Drop Center\"}, \"for_value\")\r\n\r\nif tgl is not None and item is not None:\r\n    q = (frappe.db.sql(\"SELECT DATE_FORMAT(a.modified,'%%Y-%%m-%%d %%H:%%i') as modified,a.docname,b.item_name,b.qty,b.batch_qty,b.dc,b.warehouse,a.data,a.modified_by,DATE_FORMAT(FROM_UNIXTIME(b.so_date),'%%Y-%%m-%%d') as so_date FROM `tabVersion` a LEFT JOIN `tabBatch` b ON a.docname=b.name WHERE a.ref_doctype='Batch' AND b.dc=%(dc)s AND (a.data like '%%changed%%' and a.data like '%%warehouse%%') AND DATE_FORMAT(a.modified,'%%Y-%%m-%%d')=%(tgl)s AND (b.warehouse like '%%Depan%%' OR b.warehouse like '%%Uraian%%') AND b.item=%(item)s GROUP BY a.docname ORDER BY a.modified DESC\",{\"dc\": dc,\"tgl\": tgl,\"item\": item}, as_dict=True))\r\nelif tgl is not None and item is None:\r\n    q = (frappe.db.sql(\"SELECT DATE_FORMAT(a.modified,'%%Y-%%m-%%d %%H:%%i') as modified,a.docname,b.item_name,b.qty,b.batch_qty,b.dc,b.warehouse,a.data,a.modified_by,DATE_FORMAT(FROM_UNIXTIME(b.so_date),'%%Y-%%m-%%d') as so_date FROM `tabVersion` a LEFT JOIN `tabBatch` b ON a.docname=b.name WHERE a.ref_doctype='Batch' AND b.dc=%(dc)s AND (a.data like '%%changed%%' and a.data like '%%warehouse%%') AND DATE_FORMAT(a.modified,'%%Y-%%m-%%d')=%(tgl)s AND (b.warehouse like '%%Depan%%' OR b.warehouse like '%%Uraian%%') GROUP BY a.docname ORDER BY a.modified DESC\",{\"dc\": dc,\"tgl\": tgl}, as_dict=True))\r\nelif item is not None and tgl is None:\r\n    q = (frappe.db.sql(\"SELECT DATE_FORMAT(a.modified,'%%Y-%%m-%%d %%H:%%i') as modified,a.docname,b.item_name,b.qty,b.batch_qty,b.dc,b.warehouse,a.data,a.modified_by,DATE_FORMAT(FROM_UNIXTIME(b.so_date),'%%Y-%%m-%%d') as so_date FROM `tabVersion` a LEFT JOIN `tabBatch` b ON a.docname=b.name WHERE a.ref_doctype='Batch' AND b.dc=%(dc)s AND (a.data like '%%changed%%' and a.data like '%%warehouse%%') AND (b.warehouse like '%%Depan%%' OR b.warehouse like '%%Uraian%%') AND b.item=%(item)s GROUP BY a.docname ORDER BY a.modified DESC\",{\"dc\": dc,\"item\": item}, as_dict=True))\r\nelse:\r\n   q = (frappe.db.sql(\"SELECT DATE_FORMAT(a.modified,'%%Y-%%m-%%d %%H:%%i') as modified,a.docname,b.item_name,b.qty,b.batch_qty,b.dc,b.warehouse,a.data,a.modified_by,DATE_FORMAT(FROM_UNIXTIME(b.so_date),'%%Y-%%m-%%d') as so_date FROM `tabVersion` a LEFT JOIN `tabBatch` b ON a.docname=b.name WHERE a.ref_doctype='Batch' AND b.dc=%(dc)s AND (a.data like '%%changed%%' and a.data like '%%warehouse%%') AND (b.warehouse like '%%Depan%%' OR b.warehouse like '%%Uraian%%') GROUP BY a.docname ORDER BY a.modified DESC LIMIT 50\",{\"dc\": dc}, as_dict=True))\r\n\r\nfrappe.response['data'] = q\r\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "drw.api.attachment.download",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-07-10 07:16:53.895161",
  "name": "DRW Attachment Download",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "File",
  "script": "def get_qr_file():\n    frappe.local.response.filename = \"Tagihan%20BPJS-TK%20Juli%202024.pdf\"\n    frappe.local.response.filecontent = read_file_content('/private/files/Tagihan%20BPJS-TK%20Juli%202024.pdf') # custom function\n    frappe.local.response.type = \"download\"\n\nfrappe.response['data'] = get_qr_file()",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "drw.api.join.batch.item.box",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-07-29 06:51:36.210595",
  "name": "DRW API Join Batch Item Box",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "boxid = frappe.form_dict.boxid\r\nbatchs = frappe.qb.DocType('Batch')\r\nitems = frappe.qb.DocType('Item')\r\n\r\nif boxid is None:\r\n    q = (\r\n    frappe.qb.from_(batchs)\r\n        .select(batchs.batch_id,batchs.batch_qty,batchs.warehouse,items.item_code,items.item_name,items.id_item_drw)\r\n        .left_join(items)\r\n        .on(batchs.item == items.item_code)\r\n        .limit(1)\r\n    ).run(as_dict=True)\r\nelse:\r\n    q = (\r\n    frappe.qb.from_(batchs)\r\n        .select(batchs.batch_id,batchs.batch_qty,batchs.warehouse,items.item_code,items.item_name,items.id_item_drw)\r\n        .left_join(items)\r\n        .on(batchs.item == items.item_code)\r\n        .where(batchs.batch_id == boxid)\r\n        .limit(1)\r\n    ).run(as_dict=True)\r\n\r\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.user.inquiry",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-04 09:24:55.549238",
  "name": "Super Apps - User Inquiry",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "user = frappe.session.user\n\ncustomer = frappe.db.get_value(\"Customer\", {\"email_id\": user}, \"name\")\nupline = frappe.db.get_value(\"Customer\", {\"email_id\": user}, \"upline\")\nemployee = frappe.db.get_value(\"Employee\", {\"user_id\": user}, \"name\")\nadmin = frappe.db.get_value(\"Admin Order BC\", {\"user\": user},\"name\")\nrole = frappe.db.get_value(\"User\", user, \"role_profile_name\")\n\nfrappe.response['data'] = {\n    \"user\": user,\n    \"customer\": customer,\n    \"upline\": upline,\n    \"employee\": employee,\n    \"admin\": admin,\n    \"role\": role\n}",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.user.detail",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-25 00:55:51.014651",
  "name": "Super Apps - Get User Detail",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "usr = frappe.session.user\r\n\r\nq = frappe.get_doc(\"User\", usr)\r\n\r\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.employee.detail",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-06 00:29:09.115551",
  "name": "Super Apps - Get Employee Detail",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "usr = frappe.session.user\r\n\r\nq = frappe.get_doc(\"Employee\", {\"user_id\":usr})\r\n\r\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.customer.detail",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-09 14:10:46.132239",
  "name": "Super Apps - Get Customer Detail",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "id_drw = frappe.form_dict.id_drw\r\n\r\nif id_drw is None:\r\n    usr = frappe.session.user\r\n    q = frappe.get_doc(\"Customer\", {\"email_id\":usr})\r\nelse:\r\n    usr = id_drw\r\n    q = frappe.get_doc(\"Customer\", {\"id_drw\":usr})\r\n\r\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.get.product",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-06 06:38:18.026093",
  "name": "Super Apps - Get Product",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "length = frappe.form_dict.length\ncategory = frappe.form_dict.category\nkeyword = frappe.form_dict.keyword\n\nif length is None:\n    length = 20\n    \nq = frappe.get_all(\"Item\", fields=[\"*\"], filters=[[\"disabled\", \"=\", 0], [\"is_apps\", \"=\", 1]], order_by=\"item_name asc\", limit_page_length=length)\n\nif category is not None:\n    q = frappe.get_all(\"Item\", fields=[\"*\"], filters=[[\"disabled\", \"=\", 0], [\"is_apps\", \"=\", 1], [\"item_category\", \"=\", category]], order_by=\"item_name asc\", limit_page_length=length)\n\nif keyword is not None:\n    q = frappe.get_all(\"Item\", fields=[\"*\"], filters=[[\"disabled\", \"=\", 0], [\"is_apps\", \"=\", 1], [\"item_name\", \"like\", \"%\"+keyword+\"%\"]], order_by=\"item_name asc\", limit_page_length=length)\n\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.top.product",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-26 14:40:25.363982",
  "name": "Super Apps - Top Product",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "sortby = frappe.form_dict.sortby\r\nlimit = frappe.form_dict.limit\r\n\r\nif sortby is None:\r\n    sortby = \"desc\"\r\n\r\nif limit is None:\r\n    limit = 20\r\n\r\nif sortby == \"desc\":\r\n    q = frappe.db.sql(\"select b.item_code, b.item_name, b.item_group, b.bpom, b.stock_uom, b.item_category, b.supplier, b.description, b.image, b.id_item_drw, b.is_apps, b.description, sum(a.amount) as sum, sum(a.qty) as total from `tabSales Order Item` a inner join `tabItem` b on a.item_code = b.name where a.docstatus = 1 and a.transaction_date>2024-01-01 and b.is_apps=1 group by a.item_code order by sum desc limit %(lim)s\", {\"lim\": limit}, as_dict=True)\r\nelse:\r\n    q = frappe.db.sql(\"select b.item_code, b.item_name, b.item_group, b.bpom, b.stock_uom, b.item_category, b.supplier, b.description, b.image, b.id_item_drw, b.is_apps, b.description, sum(a.amount) as sum, sum(a.qty) as total from `tabSales Order Item` a inner join `tabItem` b on a.item_code = b.name where a.docstatus = 1 and a.transaction_date>2024-01-01 and b.is_apps=1 group by a.item_code order by sum asc limit %(lim)s\", {\"lim\": limit}, as_dict=True)\r\n\r\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.get.territory",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-03 05:08:16.817187",
  "name": "Super Apps - Get Territory",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "parent = frappe.form_dict.parent\n\nif parent is None:\n    parent = \"Indonesia\"\n\nq = frappe.get_all(\"Territory\", filters=[[\"parent_territory\",\"=\",parent]], pluck=\"name\", order_by=\"name asc\")\n\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.sales.order.create",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-07 11:51:25.266192",
  "name": "Super Apps - Sales Order Create",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "json_param = frappe.request.data\ndata = json.loads(json_param)\ndata['doctype'] = \"Sales Order\"\ndoc = frappe.get_doc(data)\ntry:\n    doc.insert(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Create Order\", message=None)\n    frappe.throw(\"Error\")\n\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.sales.order.cancel",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-09 06:53:11.108599",
  "name": "Super Apps - Sales Order Cancel",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n        \ntry:\n    doc = frappe.get_doc(\"Sales Order\", name)\n    doc.application_status = \"Dibatalkan\"\n    doc.dibatalkan_pada = frappe.utils.now()\n    doc.docstatus = 2\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(None, \"Cancel Order\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.sales.order.submit.old",
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-16 17:39:55.418660",
  "name": "Super Apps - Sales Order Submit",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n        \ntry:\n    doc = frappe.get_doc(\"Sales Order\", name)\n    doc.application_status = \"Menunggu Detail Bayar\"\n    doc.waktu_pembayaran = frappe.utils.now()\n    doc.docstatus = 1\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(None, \"Submit Order\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.get.dc",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-24 07:00:09.532420",
  "name": "Super Apps - DC List",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\nfilters = frappe.form_dict.filters\nfields = frappe.form_dict.fields\norder_by = frappe.form_dict.order_by\nlimit = frappe.form_dict.limit\nstart = frappe.form_dict.start\n\nif filters is None: filters = [[\"is_apps\",\"=\",1]]\nif fields is None: fields = [\"name\",\"warehouse\",\"delivery_warehouse\",\"company\"]\nif order_by is None: order_by = \"name asc\"\n\nif name is None: q = frappe.get_all(\"Drop Center\", filters=filters, fields=fields, limit_page_length=limit, limit_start=start, order_by=order_by)\nelse: q = frappe.get_doc(\"Drop Center\", name)\n\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.batch.id",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-09 06:04:51.932796",
  "name": "DRW - Get Batch Id",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n        \nq = frappe.get_doc(\"Batch\", {\"batch_id\":name})\n\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.sales.invoice",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-09 09:01:03.736716",
  "name": "Super Apps - Get Sales Invoice",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n        \ndoc_si = frappe.get_doc(\"Sales Invoice Item\", {\"sales_order\":name})\n\nif doc_si.parent is not None and doc_si.parent != \"\":\n    doc = frappe.get_doc(\"Sales Invoice\", doc_si.parent)\n\nfrappe.response['data'] = doc\n\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.sales.invoice.submit",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-06 11:16:16.199729",
  "name": "Super Apps - Sales Invoice Submit",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n        \ntry:\n    doc = frappe.get_doc(\"Sales Invoice\", name)\n    doc.docstatus = 1\n    doc.save(ignore_permissions=True)\n    if doc.items[0].sales_order != None and doc.items[0].sales_order != \"\":\n        so = doc.items[0].sales_order\n        frappe.db.set_value(\"Sales Order\", so, {\n            \"application_status\": \"Belum Bayar\",\n            \"application_status_color_code\": \"Warning\"\n        })\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(None, \"Submit Invoice\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.sales.invoice.rekening.update",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-17 22:40:14.666437",
  "name": "Super Apps - Rekening Update",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "json_param = frappe.request.data\ndata = json.loads(json_param)\n\nsi = data['parent']\ndocs = frappe.db.get_all(\"Sales Invoice Metode Pembayaran\", {\"parent\": si})\nif len(docs)>0:\n    for doc in docs:\n        docrek = frappe.get_doc(\"Sales Invoice Metode Pembayaran\", doc)\n        try:\n            docrek.delete(ignore_permissions=True)\n            frappe.response['data'] = \"Deleted\"\n        except:\n            frappe.log_error(title=\"Error Delete Rekening\", message=None)\n            frappe.throw(\"Error\")\n\nmetode = data['metode_pembayaran']\nfor met in metode:\n    met['parent'] = si\n    met['parentfield'] = \"metode_pembayaran\"\n    met['parenttype'] = \"Sales Invoice\"\n    met['doctype'] = \"Sales Invoice Metode Pembayaran\"\n    doc = frappe.get_doc(met)\n    try:\n        doc.save(ignore_permissions=True)\n        frappe.response['data'] = doc\n    except:\n        frappe.log_error(title=\"Error Update Rekening\", message=None)\n        frappe.throw(\"Error\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.invoice.proof.payment.image",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-03 16:04:33.225440",
  "name": "Super Apps - Proof Payment Image",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n\ndatas = frappe.get_all(\"Sales Invoice Proof of Payment\", filters=[[\"sales_invoice\", \"=\", name]], order_by=\"creation asc\", fields=[\"*\"])\n\ndatadoc = []\nfor data in datas:\n    doc = frappe.get_all(\"File\",filters=[[\"attached_to_doctype\",\"=\",\"Sales Invoice Proof of Payment\"],[\"attached_to_name\",\"=\",data.name]], fields=[\"*\"])\n    if len(doc)>0:\n        datadoc.append(doc[0])\n\nfrappe.response['data'] = datas\nfrappe.response['attachment'] = datadoc\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.delivery.note.create",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-09 14:34:04.789453",
  "name": "Super Apps - Delivery Note Create",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "json_param = frappe.request.data\ndata = json.loads(json_param)\ndata['doctype'] = \"Delivery Note\"\ndoc = frappe.get_doc(data)\ntry:\n    doc.insert(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Create Order\", message=None)\n    frappe.throw(\"Error\")\n\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.delivery.note.submit",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-10 06:40:37.007708",
  "name": "Super Apps - Delivery Note Submit",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n        \ntry:\n    doc = frappe.get_doc(\"Delivery Note\", name)\n    doc.docstatus = 1\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(None, \"Delivery Note\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.sales.order.done",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-10 06:43:44.905554",
  "name": "Super Apps - Sales Order Done",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n\nfrappe.db.set_value(\"Sales Order\", name, {\n    \"application_status\": \"Selesai\",\n    \"pesanan_selesai\": 1,\n    \"pesanan_selesai_pada\": frappe.utils.now()\n})",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.overview.dashboard",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-22 21:59:57.491350",
  "name": "Super Apps - Overview Dashboard",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "user = frappe.session.user\n\ncustomer = frappe.db.get_value(\"Customer\", {\"email_id\":user}, \"name\")\ncustomer_doc = frappe.get_doc(\"Customer\", customer)\ncustomer_group = frappe.db.get_value(\"Customer\", customer, \"customer_group\")\ncustomer_group_doc = frappe.get_doc(\"Customer Group\", customer_group)\n\ntimespan_now = \"This Month\"\ntimespan_past = \"Last Month\"\n\nsales_invoice_names_now = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",timespan_now.lower()],[\"docstatus\", \"=\", 1], [\"customer\", \"=\", customer]])\nsales_invoice_names_past = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",timespan_past.lower()],[\"docstatus\", \"=\", 1], [\"customer\", \"=\", customer]])\n\n\n#total order\ntotal_order_now = len(sales_invoice_names_now)\ntotal_order_past = len(sales_invoice_names_past)\ntotal_order_diff = 0\nif total_order_past > 0:\n    total_order_diff = (total_order_now - total_order_past) / total_order_past * 100\n\n#total sales\ntotal_sales_now = 0\ntotal_sales_past = 0\ntotal_sales_diff = 0\nif total_order_now > 0:\n    total_sales_now = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": sales_invoice_names_now})[0][0]\nif total_order_past > 0:\n    total_sales_past = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": sales_invoice_names_past})[0][0]\nif total_sales_past > 0:\n    total_sales_diff = (total_sales_now - total_sales_past) / total_sales_past * 100\n\n#truncate\nif total_sales_diff > 1.0:\n    total_sales_diff = total_sales_diff // 1 - 1\nelif total_sales_diff < -1.0:\n    total_sales_diff = total_sales_diff // 1 + 1\nif total_order_diff > 1.0:\n    total_order_diff = total_order_diff // 1 - 1\nelif total_order_diff < -1.0:\n    total_order_diff = total_order_diff // 1 + 1\n\n#sales analytics\nfiscal_years = frappe.get_all(\"Fiscal Year\", pluck=\"name\", filters={\n    \"website_disabled\": 0  \n}, order_by=\"year_start_date asc\")\nsales_analytics = []\n\nif len(fiscal_years) > 0:\n    year_start_date = frappe.db.get_value(\"Fiscal Year\", fiscal_years[0], \"year_start_date\")\n    data = frappe.db.sql(\"select year(posting_date) as year, month(posting_date) as month, DATE_FORMAT(posting_date, '%%b') as month_label, sum(ifnull(grand_total,0)) as sum from `tabSales Invoice` where posting_date >= %(year_start_date)s and docstatus = 1 and customer = %(customer)s group by year, month order by posting_date asc\",{\n        \"year_start_date\": year_start_date,\n        \"customer\": customer\n    },as_dict=True)\n    fiscal_years.sort(reverse=True)\n    for year in fiscal_years:\n        sales_analytics.append({\n            \"max\": 0,\n            \"labels\": [],\n            \"values\": []\n        })\n    for item in data:\n        idx = fiscal_years.index(str(item['year']))\n        if item['sum'] > sales_analytics[idx]['max']:\n            sales_analytics[idx]['max'] = item['sum']\n        sales_analytics[idx]['labels'].append(item['month_label'])\n        sales_analytics[idx]['values'].append(item['sum'])\n        \n\n\nblogs = frappe.get_all(\"Blog Post\", fields=[\"meta_image\", \"title\", \"name\"], filters=[[\"highlight\",\"=\", 1], [\"published\",\"=\",1]], order_by=\"published_on desc\")\ntop_bc = frappe.db.sql(\"select a.customer_name as label, b.image, sum(a.grand_total) as sum from `tabSales Invoice` a inner join `tabCustomer` b on a.customer = b.name where a.docstatus = 1 group by a.customer order by sum desc limit 20\",as_dict=True)\ntop_product_sales = frappe.db.sql(\"select a.item_name as label, b.image, sum(a.amount) as sum from `tabSales Invoice Item` a inner join `tabItem` b on a.item_code = b.name where a.docstatus = 1 group by a.item_code order by sum desc limit 20\",as_dict=True)\n# remove sum\nfor item in top_bc:\n    del item['sum']\n\nfor item in top_product_sales:\n    del item['sum']\n\nfrappe.response['data'] = {\n    \"customer_card\": {\n        \"card_image\": customer_group_doc.card_image or \"\",\n        \"badge_image\": customer_group_doc.badge_image or \"\",\n        \"customer_name\": customer_doc.customer_name or \"\",\n        \"customer_group\": customer_doc.customer_group or \"\",\n        \"id_drw\": customer_doc.id_drw or \"-\",\n    },\n    \"total_sales_card\": {\n        \"label\": \"Sales \" + timespan_now,\n        \"diff\": total_sales_diff,\n        \"total\": total_sales_now,\n        \"is_currency\": 1,\n        \"icon\": \"/files/total-sales.png\"\n    },\n    \"total_order_card\": {\n        \"label\": \"Order \" + timespan_now,\n        \"diff\": total_order_diff,\n        \"total\": total_order_now,\n        \"is_currency\": 0,\n        \"icon\": \"/files/total-order.png\"\n    },\n    \"fiscal_years\": fiscal_years,\n    \"sales_analytics\": sales_analytics,\n    \"featured_blogs\": blogs,\n    \"top_bc\": top_bc,\n    \"top_product_sales\": top_product_sales\n}\n    ",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.profile.dashboard",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-11 21:04:08.236126",
  "name": "Super Apps - Profile Dashboard",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "user = frappe.session.user\n\ncustomer = frappe.db.get_value(\"Customer\", {\"email_id\":user}, \"name\")\ncustomer_doc = frappe.get_doc(\"Customer\", customer)\nmembers = frappe.get_all(\"Customer\", pluck=\"name\", filters=[[\"upline\", \"=\", customer]])\n\nusing_credit_limit = len(customer_doc.credit_limits) > 0\nif using_credit_limit:\n    credit_limit = customer_doc.credit_limits[0].credit_limit\nelse:\n    credit_limit = 0\nunpaid_invoices = frappe.get_all(\"Sales Invoice\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"outstanding_amount\", \">\", 0], [\"customer\", \"=\", customer]], order_by=\"due_date desc\")\ncredit_used = 0\noutstanding_amount = 0\ndue_date = \"\"\nfor invoice in unpaid_invoices:\n    credit_used = credit_used + invoice['outstanding_amount']\n    outstanding_amount = outstanding_amount + invoice['outstanding_amount']\n    due_date = invoice['due_date'] \nkasbon = {\n    \"using_credit_limit\": using_credit_limit,\n    \"has_unpaid_invoice\": len(unpaid_invoices) > 0,\n    \"credit_limit\": credit_limit,\n    \"credit_used\": credit_used,\n    \"credit_use_percentage\": credit_used / credit_limit if using_credit_limit else 0,\n    \"credit_remaining\": credit_limit - credit_used,\n    \"invoice_period\": frappe.utils.today(),\n    \"invoice_outstanding\": outstanding_amount,\n    \"invoice_due_date\": due_date\n}\n\nfrappe.response['data'] = {\n    \"total_points_card\": {\n        \"label\": \"Total Points\",\n        \"diff\": 0,\n        \"total\": customer_doc.total_point,\n        \"is_currency\": 0,\n        \"icon\": \"\"\n    }, \n    \"total_coins_card\": {\n        \"label\": \"Total Coins\",\n        \"diff\": 0,\n        \"total\": customer_doc.total_coins,\n        \"is_currency\": 0,\n        \"icon\": \"\"\n    },\n    \"my_member_card\": {\n        \"label\": \"My Members\",\n        \"diff\": 0,\n        \"total\": len(members),\n        \"is_currency\": 0,\n        \"icon\": \"\"\n    },\n    \"kasbon\": kasbon,\n    \"filter_transaction_date\": [\n        {\"label\": \"Today\", \"value\": \"today\"},\n        {\"label\": \"This Month\", \"value\": \"this month\"},\n        {\"label\": \"Last Month\", \"value\": \"last month\"}]\n}",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.transaction.history",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-02 09:12:06.176607",
  "name": "Super Apps - Transaction History",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "user = frappe.session.user\ncustomer = frappe.db.get_value(\"Customer\", {\"email_id\":user}, \"name\")\n\nlimit = frappe.form_dict.limit\nstart = frappe.form_dict.start\nfilters = frappe.form_dict.filters\nfields = frappe.form_dict.fields\norder_by = frappe.form_dict.order_by\nname = frappe.form_dict.name\n\nif limit is None:\n    limit = 20\n\nif start is None:\n    start = 0\n\nif filters is None:\n    filters = [[\"customer\",\"=\",customer]]\n\nif fields is None:\n    fields = [\"*\"]\n\nif order_by is None:\n    order_by = \"transaction_date desc\"\n\nif name is None:\n    q = frappe.get_all(\"Sales Order\", filters=filters, fields=fields,limit_page_length=limit,limit_start=start,order_by=order_by)\n\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.get.downlines",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-11-20 11:05:33.691405",
  "name": "Super Apps - Get Downlines",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "id_drw = frappe.form_dict.id_drw\n\ncustomer = frappe.db.get_value(\"Customer\", {\"id_drw\":id_drw}, \"name\")\ncustomer_doc = frappe.get_doc(\"Customer\", customer)\ngeneration = frappe.get_all(\"Customer\", pluck=\"name\", filters=[[\"upline\",\"=\",customer]])\nresult = {\n    \"is_group\": len(generation) > 0,\n    \"name\": customer,\n    \"doctype\": \"Customer\",\n    \"full_name\": customer_doc.customer_name,\n    \"role\": customer_doc.customer_group,\n    \"photo_profil\": customer_doc.photo_profil,\n    \"is_expand\": True,\n    \"depth\": 0,\n    \"total_sales\": customer_doc.total_belanja,\n    \"total_points\": customer_doc.total_point,\n    \"total_coins\": customer_doc.total_coins,\n    \"downlines\": []\n}\ndepth = 0\nparents = [result]\nwhile len(parents) > 0:\n    new_parents = []\n    for parent in parents:\n        children = frappe.get_all(\"Customer\", fields=[\"*\"], filters=[[\"upline\",\"=\",parent['name']]])\n        for child in children:\n            generation = frappe.get_all(\"Customer\", pluck=\"name\", filters=[[\"upline\",\"=\",child['name']]])\n            item_child = {\n                \"is_group\":  len(generation) > 0,\n                \"name\": child['name'],\n                \"doctype\": \"Customer\",\n                \"full_name\": child['customer_name'],\n                \"role\": child['customer_group'],\n                \"photo_profil\": child['photo_profil'],\n                \"is_expand\": False,\n                \"depth\": depth + 1,\n                \"total_sales\": child['total_belanja'],\n                \"total_points\": child['total_point'],\n                \"total_coins\": child['total_coins'],\n                \"downlines\": []\n            }\n            parent['downlines'].append(item_child)\n            if len(generation) > 0:\n                new_parents.append(item_child)\n    parents = new_parents\n    depth = depth + 1\n    \nfrappe.response['data'] = result",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.get.product.item.price",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-25 23:29:03.315261",
  "name": "Super Apps - Product Item Price",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "user = frappe.session.user\r\n\r\nlength = frappe.form_dict.length\r\npricelist = frappe.form_dict.pricelist\r\nitem = frappe.form_dict.item\r\nitem = \"%\"+item+\"%\"\r\n\r\nif pricelist is None: pricelist = frappe.db.get_value(\"Customer\", {\"email_id\":user}, \"default_price_list\")\r\n\r\nitems = frappe.qb.DocType('Item')\r\nitemprices = frappe.qb.DocType('Item Price')\r\n\r\nif length is None:\r\n    length = 20\r\n\r\nif item is None:\r\n    q = (\r\n    frappe.qb.from_(items)\r\n        .select(items.item_code,items.item_name,items.item_group,items.bpom,items.stock_uom,items.item_category,items.supplier,items.description,items.image,itemprices.price_list,itemprices.price_list_rate,itemprices.currency,itemprices.valid_from,items.id_item_drw,items.is_apps)\r\n        .left_join(itemprices)\r\n        .on(items.item_code == itemprices.item_code)\r\n        .where(items.is_apps == 1)\r\n        .where(items.disabled == 0)\r\n        .where(itemprices.price_list == pricelist)\r\n        .limit(length)\r\n    ).run(as_dict=True)\r\nelse:\r\n    q = (\r\n    frappe.qb.from_(items)\r\n        .select(items.item_code,items.item_name,items.item_group,items.bpom,items.stock_uom,items.item_category,items.supplier,items.description,items.image,itemprices.price_list,itemprices.price_list_rate,itemprices.currency,itemprices.valid_from,items.id_item_drw,items.is_apps)\r\n        .left_join(itemprices)\r\n        .on(items.item_code == itemprices.item_code)\r\n        .where(items.is_apps == 1)\r\n        .where(items.disabled == 0)\r\n        .where(itemprices.price_list == pricelist)\r\n        .where(items.item_code.like(item))\r\n        .limit(length)\r\n    ).run(as_dict=True)\r\n\r\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.product.bundle.package",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-21 04:02:44.234712",
  "name": "Super Apps - Product Bundle Package",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "length = frappe.form_dict.length\nname = frappe.form_dict.name\n\nif length is None:\n    length = 20\n\nif name is not None:\n    data = frappe.get_doc(\"Product Bundle Package\", name)\nelse:\n    data = frappe.get_all(\"Product Bundle Package\", fields=[\"*\"], filters=[[\"is_apps\",\"=\",1]], order_by=\"name asc\", limit_page_length=length)\n\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.reward",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-13 15:06:21.657582",
  "name": "Super Apps - Get Reward",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "category = frappe.form_dict.category\n\ndata = frappe.get_all(\"Reward Item\", fields=[\"name\",\"reward_name\",\"reward_group\",\"required_points\",\"company\",\"detail_reward\",\"image\"], filters={\n    \"reward_group\": category\n}, order_by=\"required_points desc\")\n\nfrappe.response['data'] = data\n    ",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.reward.category",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-13 15:04:41.920305",
  "name": "Super Apps - Reward Category",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "data = frappe.get_all(\"Reward Group\", fields=[\"name\",\"nama_group\"], order_by=\"name asc\")\n\nfrappe.response['data'] = data\n    ",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.redeem.reward",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-13 15:32:09.993008",
  "name": "Super Apps - Redeem Reward",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\nreward = frappe.form_dict.reward\nuser = frappe.session.user\n\nif customer is None:\n    customer = frappe.db.get_value(\"Customer\", {\"email_id\":user}, \"name\")\n\ndoc = frappe.get_doc({\n    \"naming_series\": \"WEB-DRW-REW-.YY.-\",\n    \"company\": \"PT. DRW Estetika Indonesia\",\n    \"bc\": customer,\n    \"reward_item\": reward,\n    \"doctype\": \"Redeem Reward\"\n  })\ndoc.save(ignore_permissions=True)\n\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.reward.history",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-13 15:37:36.594119",
  "name": "Super Apps - Reward History",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "length = frappe.form_dict.length\n\nif length is None:\n    length = 20\n\ndata = frappe.get_list(\"Redeem Reward\", fields=[\"*\"], order_by=\"modified desc\", limit_page_length=length)\n\nfrappe.response['data'] = data\n    ",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.warehouse",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-15 11:35:50.444602",
  "name": "Super Apps - Warehouse List",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n\nif name is None:\n    q = frappe.get_all(\"Drop Center\", filters=[[\"is_apps\",\"=\",1]], fields=[\"name\",\"warehouse\",\"company\"], order_by=\"name asc\")\nelse:\n    q = frappe.get_doc(\"Drop Center\", name)\n\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.agen",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-05 15:49:44.627787",
  "name": "Super Apps - Agen List",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "limit = frappe.form_dict.limit\nstart = frappe.form_dict.start\nfilters = frappe.form_dict.filters\nfields = frappe.form_dict.fields\norder_by = frappe.form_dict.order_by\nname = frappe.form_dict.name\n\nif limit is None:\n    limit = 20\n\nif start is None:\n    start = 0\n\nif filters is None:\n    filters = [[\"customer_group\",\"=\",\"Director\"]]\n\nif fields is None:\n    fields = [\"name\",\"customer_name\",\"id_drw\",\"customer_group\",\"default_price_list\",\"mobile_no\",\"email_id\",\"territory\",\"upline\"]\n\nif order_by is None:\n    order_by = \"customer_name asc\"\n\nif name is None:\n    q = frappe.get_all(\"Customer\", filters=filters, fields=fields,limit_page_length=limit,limit_start=start,order_by=order_by)\nelse:\n    lastyear = \"Last Year\"\n    thisyear = \"This Year\"\n    thismonth = \"This Month\"\n    get_order_lastyear = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",lastyear.lower()],[\"docstatus\", \"=\", 1],[\"customer\",\"=\",name]])\n    count_order_lastyear = len(get_order_lastyear)\n    sum_order_lastyear = 0\n    if count_order_lastyear>0:\n        sum_order_lastyear = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": get_order_lastyear})[0][0]\n    sum_order_lastmonth = sum_order_lastyear/12\n    get_order = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",thisyear.lower()],[\"docstatus\", \"=\", 1],[\"customer\",\"=\",name]])\n    count_order = len(get_order)\n    sum_order = 0\n    if count_order>0:\n        sum_order = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": get_order})[0][0]\n    get_order_month = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",thismonth.lower()],[\"docstatus\", \"=\", 1],[\"customer\",\"=\",name]])\n    count_order_month = len(get_order_month)\n    sum_order_month = 0\n    if count_order_month>0:\n        sum_order_month = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": get_order_month})[0][0]\n    get_order_downline = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"transaction_date\",\"timespan\",thisyear.lower()],[\"docstatus\", \"=\", 1],[\"upline\",\"=\",name]])\n    count_order_downline = len(get_order_downline)\n    sum_order_downline = 0\n    if count_order_downline>0:\n        sum_order_downline = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Order` where name in %(names)s\", {\"names\": get_order_downline})[0][0]\n    get_downline = frappe.get_all(\"Customer\", pluck=\"name\",filters=[[\"upline\",\"=\",name]])\n    get_downline_thismonth = frappe.get_all(\"Customer\", pluck=\"name\",filters=[[\"upline\",\"=\",name],[\"creation\",\"timespan\",thismonth.lower()]])\n    count_downline = len(get_downline)\n    count_downline_thismonth = len(get_downline_thismonth)\n    target_downline = 10\n    percent_downline = count_downline_thismonth/target_downline*100\n    q = frappe.get_doc(\"Customer\", name)\n    g = frappe.get_doc(\"Customer Group\", q.customer_group)\n    limit_target = 0\n    for t in g.target:\n        if limit_target == 0:\n            limit_target = t.limit_target\n            max_target = t.max_target\n            nama_target = t.nama_target\n        if sum_order_month >= t.limit_target:\n            limit_target = t.limit_target\n            max_target = t.max_target\n            nama_target = t.nama_target\n    limit_target_percent_thismonth = sum_order_month/max_target*100\n    sum_order_lastmonth_30 = sum_order_lastmonth + (sum_order_lastmonth*(30/100))\n    limit_target_thisyear = 12*limit_target \n    limit_target_percent_thisyear = sum_order/limit_target_thisyear*100\n    sum_order_lastyear_30 = sum_order_lastyear + (sum_order_lastyear*(30/100))\n    if sum_order_lastmonth_30 > 0: limit_target_percent_lastmonth = sum_order_month/sum_order_lastmonth_30*100\n    else: limit_target_percent_lastmonth = 0\n    if sum_order_lastyear_30 > 0: limit_target_percent_lastyear = sum_order/sum_order_lastyear_30*100\n    else: limit_target_percent_lastyear = 0\n    grafik = {}\n    today = frappe.utils.today()\n    start_year = str(int(today[0:4])-1)\n    start_date = start_year+'-1-1'\n    start_date = frappe.utils.getdate(start_date)\n    sum_order_bymonth = frappe.db.sql(\"select month(posting_date) as month, DATE_FORMAT(posting_date, '%%M') as month_label, sum(if(year(posting_date)=2023,ifnull(grand_total,0),0)) as sum_2023,sum(if(year(posting_date)=2024,ifnull(grand_total,0),0)) as sum_2024 from `tabSales Invoice` where posting_date >= %(start_date)s and docstatus = 1 and customer = %(customer)s group by month order by month asc\",{\n        \"start_date\": start_date,\n        \"customer\": name\n    },as_dict=True)\n    grafik = sum_order_bymonth\n\nconditions = {}\nconditions[\"customer_group\"] = frappe.form_dict.customer_group\ncount = frappe.db.count(\"Customer\", filters=conditions)\n    \nfrappe.response['data'] = q\nfrappe.response['count'] = count\n\nif name :\n    frappe.response['details'] = {\n        \"total_order_thisyear\": sum_order,\n        \"count_order_thisyear\": count_order,\n        \"total_order_lastyear\": sum_order_lastyear_30,\n        \"count_order_lastyear\": count_order_lastyear,\n        \"total_order_lastmonth\": sum_order_lastmonth_30,\n        \"total_order_month\": sum_order_month,\n        \"count_order_month\": count_order_month,\n        \"total_order_downline\": sum_order_downline,\n        \"count_order_downline\": count_order_downline,\n        \"total_downline\": count_downline,\n        \"limit_target\": limit_target,\n        \"max_target\": max_target,\n        \"nama_target\": nama_target,\n        \"limit_target_percent_thismonth\": limit_target_percent_thismonth,\n        \"limit_target_percent_lastmonth\": limit_target_percent_lastmonth,\n        \"limit_target_thisyear\": limit_target_thisyear,\n        \"limit_target_percent_thisyear\": limit_target_percent_thisyear,\n        \"limit_target_percent_lastyear\": limit_target_percent_lastyear,\n        \"count_downline\": count_downline_thismonth,\n        \"target_downline\": target_downline,\n        \"percent_downline\": percent_downline,\n        \"grafik\": grafik\n}\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.product.price.list",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-15 14:32:13.326577",
  "name": "Super Apps - Price List",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "item = frappe.form_dict.item\n\nq = frappe.get_all(\"Item Price\", filters=[[\"item_code\",\"=\",item]], or_filters=[[\"price_list\",\"=\",\"Director\"],[\"price_list\",\"=\",\"Manager\"],[\"price_list\",\"=\",\"Supervisor\"],[\"price_list\",\"=\",\"Consultant\"],[\"price_list\",\"=\",\"Umum\"]], fields=[\"item_code\",\"item_name\",\"price_list\",\"price_list_rate\",\"valid_from\"],order_by=\"price_list asc\")\n\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.ekspedisi.list",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-11-12 10:06:50.746064",
  "name": "Super Apps - Ekspedisi List",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "dc = frappe.form_dict.dc\n\nif dc is None:\n    dc = \"DC Purworejo\"\n\nq = frappe.get_all(\"Ekspedisi\", filters=[[\"drop_center\",\"=\",dc],[\"disabled\",\"=\",0]], fields=[\"name\",\"nama_ekspedisi\",\"kurir\",\"drop_center\",\"warehouse\"],order_by=\"nama_ekspedisi ASC\")\n\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.change.status.order",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-19 23:19:02.248967",
  "name": "Super Apps - Change Status Order",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\nstatus = frappe.form_dict.status\n\nif status is not None:\n    frappe.db.set_value(\"Sales Order\", name, {\n        \"application_status\": status\n    })\n    q = frappe.db.get_value(\"Sales Order\", name, \"application_status\")\nelse:\n    q = frappe.db.get_value(\"Sales Order\", name, \"application_status\")\n\nfrappe.response['data'] = {\n    \"name\": name,\n    \"application_status\": q\n}",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.admin.order",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-21 13:17:22.631323",
  "name": "Super Apps - Get Admin Order",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "q = frappe.get_all(\"Admin Order BC\", filters=[[\"is_apps\",\"=\",1]], fields=[\"nama_admin\"],order_by=\"nama_admin ASC\")\n\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.sales.order",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-02 11:09:17.222942",
  "name": "Super Apps - Get Sales Order",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "admin = frappe.form_dict.admin\nstatus = frappe.form_dict.status\nlimit = frappe.form_dict.limit\nstart = frappe.form_dict.start\nfilters = frappe.form_dict.filters\nsort = frappe.form_dict.sort\nbank = frappe.form_dict.bank\n\nif sort is None: sort = \"modified DESC\"\nif limit is None: limit = 20\nif start is None: start = 0\n\nconditions = {}\n\nq = frappe.get_all(\"Sales Order\", filters=filters, fields=[\"*\"], limit_start=start, limit_page_length=limit,order_by=sort)\n\ndata = []\nfor doc in q:\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": doc.name}, \"parent\")\n    nama_bank = frappe.db.get_value(\"Sales Invoice Metode Pembayaran\", {\"parent\": si}, \"nama_bank\")\n    proofid = frappe.db.get_value(\"Sales Invoice Proof of Payment\", {\"sales_invoice\": si}, \"name\")\n    proof = \"Belum Upload\"\n    if proofid is not None:\n        proof = \"Sudah Upload\"\n    if bank is not None:\n        if bank == nama_bank:\n            data.append({\n                \"name\": doc.name,\n                \"owner\": doc.owner,\n                \"modified\": doc.modified,\n                \"customer_name\": doc.customer_name,\n                \"contact_email\": doc.contact_email,\n                \"customer_group\": doc.customer_group,\n                \"waktu_pemesanan\": doc.waktu_pemesanan,\n                \"checkout_date\": doc.checkout_date,\n                \"application_status\": doc.application_status,\n                \"company\": doc.company,\n                \"admin_order\": doc.admin_order,\n                \"drop_center\": doc.drop_center,\n                \"grand_total\": doc.grand_total,\n                \"coin_type\": doc.coin_type,\n                \"total_coin\": doc.total_coin,\n                \"total\": doc.total,\n                \"discount_amount\": doc.discount_amount,\n                \"transaction_date\": doc.transaction_date,\n                \"sales_invoice\": si,\n                \"proofid\": proofid,\n                \"proof\": proof,\n                \"bank\": nama_bank\n            })\n    else:\n        data.append({\n            \"name\": doc.name,\n            \"owner\": doc.owner,\n            \"modified\": doc.modified,\n            \"customer_name\": doc.customer_name,\n            \"contact_email\": doc.contact_email,\n            \"customer_group\": doc.customer_group,\n            \"waktu_pemesanan\": doc.waktu_pemesanan,\n            \"checkout_date\": doc.checkout_date,\n            \"application_status\": doc.application_status,\n            \"company\": doc.company,\n            \"admin_order\": doc.admin_order,\n            \"drop_center\": doc.drop_center,\n            \"grand_total\": doc.grand_total,\n            \"coin_type\": doc.coin_type,\n            \"total_coin\": doc.total_coin,\n            \"total\": doc.total,\n            \"discount_amount\": doc.discount_amount,\n            \"transaction_date\": doc.transaction_date,\n            \"sales_invoice\": si,\n            \"proofid\": proofid,\n            \"proof\": proof,\n            \"bank\": nama_bank\n        })\n\nif admin:\n    conditions[\"admin_order\"] = admin\n    \nif status:\n    conditions[\"application_status\"] = status\n\ncount = frappe.db.count(\"Sales Order\", filters=conditions)\n\nfrappe.response['data'] = data\nfrappe.response['count'] = count",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.supplier",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-21 16:44:14.862061",
  "name": "Super Apps - Get Supplier",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "limit = frappe.form_dict.limit\nstart = frappe.form_dict.start\nfilters = frappe.form_dict.filters\nfields = frappe.form_dict.fields\n\nif limit is None:\n    limit = 20\nif start is None: \n    start = 0 \nif filters is None:\n    filters = [[\"supplier_group\",\"=\",\"Distributor\"]]\nif fields is None:\n    fields = [\"name\",\"supplier_name\",\"supplier_group\",\"supplier_type\",\"npwp\",\"alamat\",\"provinsi\",\"kabupaten_atau_kota\",\"kode_pos\",\"country\"]\n\nq = frappe.get_all(\"Supplier\", filters=filters, fields=fields, limit_start=start, limit_page_length=limit,order_by=\"name ASC\")\n\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.company",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-21 16:49:29.895545",
  "name": "Super Apps - Get Company",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "limit = frappe.form_dict.limit\nstart = frappe.form_dict.start\nfilters = frappe.form_dict.filters\nfields = frappe.form_dict.fields\n\nif limit is None:\n    limit = 20\nif start is None: \n    start = 0 \nif filters is None:\n    filters = [[\"default_warehouse\",\"not like\",\"All Warehouse%\"]]\nif fields is None:\n    fields = [\"name\",\"company_name\",\"abbr\",\"default_warehouse\",\"parent_company\"]\n\nq = frappe.get_all(\"Company\", filters=filters, fields=fields, limit_start=start, limit_page_length=limit,order_by=\"name ASC\")\n\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.comment",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-09 12:42:42.094180",
  "name": "Super Apps - Get Comment",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "filters = frappe.form_dict.filters\norder_by = frappe.form_dict.order_by\nlimit = frappe.form_dict.limit\nstart = frappe.form_dict.start\n\nif limit is None: limit = 20\nif start is None: start = 0\nif order_by is None: order_by = \"modified DESC\"\n\nq = frappe.get_all(\"Comment\", filters=filters, fields=[\"*\"], limit_start=start, limit_page_length=limit,order_by=order_by)\n\ndata = []\nfor doc in q:\n    data.append({\n        \"name\": doc.name,\n        \"modified\": doc.modified,\n        \"comment_type\": doc.comment_type,\n        \"comment_email\": doc.comment_email,\n        \"comment_by\": doc.comment_by,\n        \"seen\": doc.seen,\n        \"reference_doctype\": doc.reference_doctype,\n        \"reference_name\": doc.reference_name,\n        \"content\": doc.content\n    })\n\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.add.comment",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-22 06:00:23.191531",
  "name": "Super Apps - Create Comment",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "json_param = frappe.request.data\ndata = json.loads(json_param)\ndata['doctype'] = \"Comment\"\ndoc = frappe.get_doc(data)\ntry:\n    doc.insert(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Create Order\", message=None)\n    frappe.throw(\"Error\")\n\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.edit.comment",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-22 06:30:30.110070",
  "name": "Super Apps - Edit Comment",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\ndoc = frappe.get_doc(\"Comment\",name)\n\n\n\ntry:\n    \n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Edit Comment\", message=None)\n    frappe.throw(\"Error\")\n\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.order.search",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-22 09:56:29.968224",
  "name": "Super Apps - Search Order",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "limit = frappe.form_dict.limit\nstart = frappe.form_dict.start\nfields = frappe.form_dict.fields\nfilters = frappe.form_dict.filters\n\nif limit is None:\n    limit = 20\nif start is None: \n    start = 0 \nif filters is None:\n    filters = [[\"application_status\",\"=\",\"Menunggu Detail Bayar\"]]\nif fields is None:\n    fields = [\"name\"]\n\nnames = frappe.get_all(\"Sales Order\", filters=filters, fields=fields, limit_start=start, limit_page_length=limit,order_by=\"transaction_date DESC\")\n\ndata = []\nfor name in names:\n    data.append(frappe.get_doc(\"Sales Order\", name))\n\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.stock.status",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-22 14:07:13.870347",
  "name": "Super Apps - Stock Status",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "item = frappe.form_dict.item\nqty = frappe.form_dict.qty\n\npreorder = frappe.db.get_value(\"Item\",item,\"discontinued\")\n\nqty = int(qty)\n\nif qty < 100:\n    if preorder > 0:\n        status = \"Stok Habis\"\n    else:\n        status = \"Preorder\"\nelif qty < 1000:\n    status = \"Stok Limit\"\nelse:\n    status = \"Stok Tersedia\"\n\nfrappe.response['data'] = status\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "apis.v1.user.get.old",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-22 17:04:06.058520",
  "name": "Apps - Get User Old",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "user = frappe.form_dict.user\n\nif user is None:\n    user = frappe.session.user\n    \nuser = frappe.get_list(\"User\", fields=[\"*\"], filters=[[\"name\",\"=\",user]])\ncustomer = frappe.get_all(\"User Permission\", fields=[\"for_value\"], filters=[[\"allow\",\"=\",\"Customer\"], [\"user\",\"=\",user[0]['name']]], order_by=\"is_default desc\")\ncustomer = frappe.get_doc(\"Customer\", customer[0][\"for_value\"])\n\ncustomer.total_coin_cashback = float(str(customer.total_coin_cashback).split(\".\")[0])\n\nfrappe.response['message'] = {\n    \"user\": user[0],\n    \"customer\": customer\n}",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "apis.v1.cashback.calculate.old",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-22 19:57:34.784844",
  "name": "Apps - Hitung Cashback Old",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "grand_total = float(frappe.form_dict.grand_total)\ncompany = frappe.form_dict.company\naturan_cashback = frappe.get_all(\"Aturan Cashback\", pluck=\"name\", filters=[[\"company\", \"=\", company], [\"valid_from\", \"<=\", frappe.utils.today()]], order_by=\"valid_from desc\")\ncashback = 0\n\nif len(aturan_cashback) > 0:\n    doc = frappe.get_doc(\"Aturan Cashback\", aturan_cashback[0])\n    percentage = 0\n    min_cashback = 0\n    for aturan in doc.details:\n        if min_cashback == 0:\n            min_cashback = aturan.from_total\n        if grand_total >= aturan.from_total and grand_total < aturan.to_total:\n            percentage = aturan.percentage\n    cashback = grand_total * percentage / 100000\n    if percentage == 0 and min_cashback > 0:\n        cashback = -1 * min_cashback\n    \nfrappe.response['message'] = cashback",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.admin.dashboard",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-22 22:14:50.522643",
  "name": "Super Apps - Admin Dashboard",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "user = frappe.form_dict.user\nif user is None:\n    user = frappe.session.user\n\ncustomer = frappe.db.get_value(\"Customer\", {\"email_id\":user}, \"name\")\n\nthisyear = \"This Year\"\nthismonth = \"This Month\"\nthisweek = \"This Week\"\n\nget_order = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",thisyear.lower()],[\"docstatus\", \"=\", 1]])\nsum_order = len(get_order)\nget_dc = frappe.get_all(\"Drop Center\", pluck=\"name\",filters=[[\"is_apps\",\"=\",1],[\"name\",\"like\",\"DC%\"]])\nsum_dc = len(get_dc)\nget_item = frappe.get_all(\"Item\", pluck=\"name\",filters=[[\"is_apps\",\"=\",1],[\"disabled\",\"=\",0]])\nsum_item = len(get_item)\n\nfrappe.response['data'] = {\n    \"total_order\": sum_order,\n    \"total_dc\": sum_dc,\n    \"total_produk\": sum_item,\n}\n    ",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.total.agen",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-22 22:29:50.471508",
  "name": "Super Apps - Total Agen",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "user = frappe.form_dict.user\nif user is None:\n    user = frappe.session.user\n\ncustomer = frappe.db.get_value(\"Customer\", {\"email_id\":user}, \"name\")\n\nthisyear = \"This Year\"\nthismonth = \"This Month\"\nlastmonth = \"Last Month\"\nthisweek = \"This Week\"\n\nget_director = frappe.get_all(\"Customer\", pluck=\"name\",filters=[[\"customer_group\",\"=\",\"Director\"]])\nsum_director = len(get_director)\nget_director_last = frappe.get_all(\"Customer\", pluck=\"name\",filters=[[\"customer_group\",\"=\",\"Director\"],[\"creation\",\"timespan\",lastmonth.lower()]])\nsum_director_last = len(get_director_last)\nget_manager = frappe.get_all(\"Customer\", pluck=\"name\",filters=[[\"customer_group\",\"=\",\"Manager\"]])\nsum_manager = len(get_manager)\nget_manager_last = frappe.get_all(\"Customer\", pluck=\"name\",filters=[[\"customer_group\",\"=\",\"Manager\"],[\"creation\",\"timespan\",lastmonth.lower()]])\nsum_manager_last = len(get_manager_last)\nget_supervisor = frappe.get_all(\"Customer\", pluck=\"name\",filters=[[\"customer_group\",\"=\",\"Supervisor\"]])\nsum_supervisor = len(get_supervisor)\nget_supervisor_last = frappe.get_all(\"Customer\", pluck=\"name\",filters=[[\"customer_group\",\"=\",\"Supervisor\"],[\"creation\",\"timespan\",lastmonth.lower()]])\nsum_supervisor_last = len(get_supervisor_last)\nget_consultant = frappe.get_all(\"Customer\", pluck=\"name\",filters=[[\"customer_group\",\"=\",\"Consultant\"]])\nsum_consultant = len(get_consultant)\nget_consultant_last = frappe.get_all(\"Customer\", pluck=\"name\",filters=[[\"customer_group\",\"=\",\"Consultant\"],[\"creation\",\"timespan\",lastmonth.lower()]])\nsum_consultant_last = len(get_consultant_last)\n\nfrappe.response['data'] = {\n    \"total_director\": sum_director,\n    \"total_director_last\": sum_director_last,\n    \"total_manager\": sum_manager,\n    \"total_manager_last\": sum_manager_last,\n    \"total_supervisor\": sum_supervisor,\n    \"total_supervisor_last\": sum_supervisor_last,\n    \"total_consultant\": sum_consultant,\n    \"total_consultant_last\": sum_consultant_last,\n}\n    ",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.level.keagenan",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-23 04:43:28.885369",
  "name": "Super Apps - Level Keagenan",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "data = frappe.get_all(\"Customer Group\", fields=[\"name\",\"customer_group_name\",\"parent_customer_group\",\"default_price_list\",\"kelipatan_transaksi_untuk_dapat_point\",\"card_image\",\"badge_image\",\"idx\"], filters=[[\"parent_customer_group\",\"=\",\"Beauty Consultant\"]], order_by=\"idx asc\")\n\nfrappe.response['data'] = data\n    ",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.transaction.history.old",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-23 16:26:39.019574",
  "name": "Super Apps - Transaction History Old",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "user = frappe.session.user\n\ndoctype = \"Sales Order\"\nkey_date = \"transaction_date\"\ncustomer = frappe.db.get_value(\"Customer\", {\"email_id\":user}, \"name\")\ndate_range = \"today\"\nsearch = frappe.form_dict.search\n\nfilters = [[\"customer\", \"=\", customer], [\"docstatus\", \"=\", 1]]\nif \"~\" in date_range:\n    date_range_components = date_range.split(\"~\")\n    start_date = date_range_components[0]\n    end_date = date_range_components[1]\n    filters.append([key_date, \">\", start_date])\n    filters.append([key_date, \"<=\", end_date])\nelif date_range != \"\":\n    filters.append([key_date, \"timespan\", date_range])\nif search is not None:\n    filters.append([\"name\",\"like\", \"%\" + search + \"%\"])\ndata = frappe.get_all(doctype, filters=filters, fields=[\"name\", \"grand_total\", key_date + \" as posting_date\", \"application_status as status\"], order_by=key_date + \" desc\")\n\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.update.biaya.penanganan",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-17 16:22:26.716224",
  "name": "Super Apps - Update Biaya Penanganan",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\ntotal = frappe.form_dict.total\n\ntaxdoc = frappe.db.get_value(\"Sales Taxes and Charges\", {\"parent\": name})\ndocsi = frappe.get_doc(\"Sales Invoice\", name)\n\nif taxdoc is None:\n    coa = frappe.db.get_value(\"Company\",docsi.company,\"default_biaya_penanganan\")\n    tax = {}\n    tax['doctype'] = \"Sales Taxes and Charges\"\n    tax['parent'] = name\n    tax['parentfield'] = \"taxes\"\n    tax['parenttype'] = \"Sales Invoice\"\n    tax['charge_type'] = \"Actual\"\n    tax['account_head'] = coa\n    tax['description'] = \"Biaya Penanganan\"\n    tax['tax_amount'] = total\n    tax['total'] = int(docsi.total) + int(total)\n    doc = frappe.get_doc(tax)\nelse:\n    doc = frappe.get_doc(\"Sales Taxes and Charges\", {\"parent\": name})\n    doc.tax_amount = total\n    doc.total = int(docsi.total) + int(total)\n\ntry:\n    doc.save(ignore_permissions=True)\n    docsi = frappe.get_doc(\"Sales Invoice\", name)\n    docsi.save(ignore_permissions=True)\n    frappe.response['tax'] = doc\n    frappe.response['data'] = docsi\nexcept:\n    frappe.log_error(None, \"Update Biaya Penanganan Error\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.update.ekspedisi",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-24 19:22:02.189413",
  "name": "Super Apps - Update Ekspedisi",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\nekspedisi = frappe.form_dict.ekspedisi\n        \ntry:\n    doc = frappe.get_doc(\"Sales Invoice\", name)\n    doc.ekspedisi = ekspedisi\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(None, \"Update Ekspedisi Error\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.update.estimasi.berat",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-24 19:25:03.208318",
  "name": "Super Apps - Update Estimasi Berat",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\nberat = frappe.form_dict.berat\n        \ntry:\n    doc = frappe.get_doc(\"Sales Invoice\", name)\n    doc.estimasi_berat = berat\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(None, \"Update Estimasi Berat Error\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.add.discount",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-24 19:55:59.264812",
  "name": "Super Apps - Add Discount",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\npercent = frappe.form_dict.percent\namount = frappe.form_dict.amount\n    \nif percent is None: percent = 0\nif amount is None: amount = 0\n\ntry:\n    doc = frappe.get_doc(\"Sales Invoice\", name)\n    doc.apply_discount_on = \"Grand Total\"\n    doc.additional_discount_percentage = int(percent)\n    doc.discount_amount = int(amount)\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(None, \"Add Discount Error\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.update.resi",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-24 19:39:57.760486",
  "name": "Super Apps - Update Resi",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\nresi = frappe.form_dict.resi\n        \ntry:\n    doc = frappe.get_doc(\"Sales Invoice\", name)\n    doc.no_resi = resi\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(None, \"Update Resi Error\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.update.payment.reference",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-24 20:35:44.735256",
  "name": "Super Apps - Update Payment Reference",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\nreference = frappe.form_dict.reference\ndate = frappe.form_dict.date\n        \ntry:\n    doc = frappe.get_doc(\"Sales Invoice\", name)\n    pay = frappe.db.get_value(\"Payment Entry Reference\",{\"reference_name\": name},\"parent\")\n    payment = frappe.get_doc(\"Payment Entry\", pay)\n    payment.reference_no = reference\n    payment.reference_date = date\n    payment.save(ignore_permissions=True)\n    frappe.response['data'] = payment\nexcept:\n    frappe.log_error(None, \"Update Payment Reference Error\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "apis.v1.product.search.old",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-24 23:18:55.715572",
  "name": "Apps - Product Search Old",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "query = frappe.form_dict.query\npage = frappe.form_dict.page\nis_grid = frappe.form_dict.is_grid\n\nor_filters=[]\nif (query != \"\"):\n    for word in query.split(\" \"):\n        or_filters.append([\"item_name\", \"like\", \"%\" + word + \"%\"])\ndata = frappe.get_all(\"Item\", fields=[\"name\", \"item_code\", \"stock_uom\"], or_filters=or_filters, filters=[[\"disabled\", \"=\", 0], [\"is_sales_item\", \"=\", 1], [\"is_apps\", \"=\", 1]], order_by=\"name asc\", limit_start=int(page) * 20, limit_page_length=20)\n\nif is_grid == \"YES\":\n    if len(data) > 0:\n        frappe.response['message'] = [{\n            \"data\": data\n        }]\n    else:\n        frappe.response['message'] = []\nelse:\n    frappe.response['message'] = data\n\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.print.label.pengiriman",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-25 22:02:12.374217",
  "name": "Super Apps - Print Label Pengiriman",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\nprint_format = frappe.form_dict.print_format\n\nsi = frappe.get_doc(\"Sales Invoice\", name)\n\ndata = frappe.call(\"frappe.www.printview.get_html_and_style\", doc=si, print_format=print_format)\n\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.edit.data.agen",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-26 02:10:50.725654",
  "name": "Super Apps - Edit Data Agen",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "json_param = frappe.request.data\ndata = json.loads(json_param)\ndata['doctype'] = \"Customer\"\ndoc = frappe.get_doc(data)\ntry:\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Create Order\", message=None)\n    frappe.throw(\"Error\")\n\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.scan.barcode.order",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 05:19:55.304858",
  "name": "Warehouse - Scan Barcode Order",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n\nif name is None: \n    doc = \"Data tidak ditemukan\"\nelse:\n    so = frappe.get_doc(\"Sales Order\", name)\n    doc = {\n        \"Sales Order\": so.name,\n        \"Sales Invoice\": so.sales_invoice,\n        \"Nama\": so.customer_name,\n        \"Level\": so.customer_group,\n        \"Waktu Pesan\": frappe.utils.format_datetime(so.waktu_pemesanan, \"dd-MM-yyyy HH:mm\"),\n        \"Waktu Bayar\": frappe.utils.format_datetime(so.waktu_pembayaran, \"dd-MM-yyyy HH:mm\"),\n        \"Dikirim Dari\": so.drop_center,\n        \"Gudang\": so.set_warehouse,\n        \"Ekspedisi\": so.nama_ekspedisi,\n        \"Total Order\": frappe.utils.fmt_money(so.grand_total, currency=\"IDR\", precision=0),\n        \"Status\": so.application_status\n    }\n    items = []\n    for item in so.items:\n        stock = frappe.call(\"erpnext.stock.doctype.quick_stock_balance.quick_stock_balance.get_stock_item_details\",warehouse=so.set_warehouse,date=frappe.utils.today(),item=item.item_code)\n        items.append({\n            \"item_name\": item.item_name,\n            \"qty\": item.qty,\n            \"stock\": stock['qty']\n        })\n        \nfrappe.response['data'] = doc\nfrappe.response['items'] = items\nfrappe.response['so'] = so\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.create.delivery.note",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-26 06:01:29.705396",
  "name": "Warehouse - Create Delivery Note",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n\nif name is None: \n    q = \"Data tidak ditemukan\"\nelse:\n    q = frappe.call(\"erpnext.selling.doctype.sales_order.sales_order.make_delivery_note\",source_name=name)\n\ndoc = frappe.get_doc(q)\ntry:\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Delivery Note\", message=None)\n    frappe.throw(\"Error\")\n\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.delete.delivery.note",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-26 06:06:37.999985",
  "name": "Warehouse - Delete Delivery Note",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n\nif name is None: \n    doc = \"Data tidak ditemukan\"\nelse:\n    doc = frappe.get_doc(\"Delivery Note\",name)\n\ntry:\n    doc.delete(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Delete Delivery Note\", message=None)\n    frappe.throw(\"Error\")\n\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.update.batch.delivery",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-26 07:06:17.346134",
  "name": "Warehouse - Update Batch Delivery",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\ndn = frappe.form_dict.dn\n\nif name is None or dn is None: \n    q = \"Data tidak ditemukan\"\nelse:\n    try:\n        q = frappe.db.get_value(\"Delivery Note Item\", {\"parent\": dn}, \"item_code\")\n        frappe.response['data'] = q\n    except:\n        frappe.log_error(title=\"Error Delivery Note\", message=None)\n        frappe.throw(\"Error\")\n\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.limited.product",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-26 14:55:04.516213",
  "name": "Super Apps - Limited Product",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "sortby = frappe.form_dict.sortby\r\nstart = frappe.form_dict.start\r\n\r\nif sortby is None:\r\n    sortby = \"asc\"\r\n\r\nif start is None:\r\n    start = 0\r\n\r\nq = frappe.call(\"erpnext.stock.dashboard.item_dashboard.get_data\", warehouse=\"Gudang Utama PWR - DRW\", start = start, sort_by=\"actual_qty\", sort_order=sortby)\r\n\r\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.list.all.product",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-21 09:50:16.272853",
  "name": "New Apps - List All Product",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "warehouse = frappe.form_dict.warehouse\r\ncustomer_group = frappe.form_dict.customer_group\r\nlimit = int(frappe.form_dict.limit)\r\noffset = int(frappe.form_dict.offset)\r\nsort_order = frappe.form_dict.sort_order\r\nsort_by = frappe.form_dict.sort_by\r\nkeyword = frappe.form_dict.keyword\r\ncategory = frappe.form_dict.category\r\n\r\nnow = frappe.utils.today()\r\n\r\nif warehouse is None: warehouse = \"Gudang Utama PWR - DRW\"\r\nif customer_group is None: customer_group = \"Umum\"\r\nif limit is None: limit = 20\r\nif offset is None: offset = 0\r\nif sort_order is None: sort_order = \"desc\"\r\nif sort_by is None: sort_by = \"actual_qty\"\r\n\r\nitems = frappe.qb.DocType('Item')\r\nitemprices = frappe.qb.DocType('Item Price')\r\n\r\nif keyword is None:\r\n    if category is None:\r\n        docs = frappe.db.sql(\"select * from `tabItem` a left join `tabItem Price` b on a.item_code=b.item_code where a.is_apps=1 and a.disabled=0 and b.price_list=%(price_list)s order by a.item_name \"+sort_order+\" limit %(limit)s\", {\"price_list\": customer_group, \"limit\": limit}, as_dict=True)\r\n    else:\r\n        docs = frappe.db.sql(\"select * from `tabItem` a left join `tabItem Price` b on a.item_code=b.item_code where a.is_apps=1 and a.disabled=0 and b.price_list=%(price_list)s and a.item_category=%(category)s order by a.item_name \"+sort_order+\" limit %(limit)s\", {\"price_list\": customer_group, \"limit\": limit, \"category\": category}, as_dict=True)\r\nelse:\r\n    keyword = \"%\"+keyword+\"%\"\r\n    docs = frappe.db.sql(\"select * from `tabItem` a left join `tabItem Price` b on a.item_code=b.item_code where a.is_apps=1 and a.disabled=0 and b.price_list=%(price_list)s and a.item_name like %(keyword)s order by a.item_name \"+sort_order+\" limit %(limit)s\", {\"price_list\": customer_group, \"limit\": limit, \"keyword\": keyword}, as_dict=True)\r\n    \r\ndata = []\r\nfor doc in docs:\r\n    get = frappe.call(\"erpnext.stock.doctype.quick_stock_balance.quick_stock_balance.get_stock_item_details\", warehouse=warehouse, date=now, item=doc.item_code)\r\n    qty = get['qty']\r\n    if qty < 100:\r\n        if doc.preorder > 0:\r\n            stock = \"Stok Habis\"\r\n        else:\r\n            stock = \"Preorder\"\r\n    elif qty < 1000:\r\n        stock = \"Stok Limit\"\r\n    else:\r\n        stock = \"Stok Tersedia\"\r\n    data.append({\r\n        \"item_code\": doc.item_code,\r\n        \"item_name\": doc.item_name,\r\n        \"item_category\": doc.item_category,\r\n        \"bpom\": doc.bpom,\r\n        \"image\": doc.image,\r\n        \"description\": doc.description,\r\n        \"uom\": \"Pcs\",\r\n        \"conversion_factor\": 1.0,\r\n        \"price_list\": doc.price_list,\r\n        \"price_list_rate\": doc.price_list_rate,\r\n        \"qty\": get['qty'],\r\n        \"stock\": stock\r\n    })\r\n\r\nfrappe.response['data'] = data\r\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v2.list.top.product",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-21 09:43:18.056067",
  "name": "New Apps - List Top Product",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "warehouse = frappe.form_dict.warehouse\r\ncustomer_group = frappe.form_dict.customer_group\r\nlimit = int(frappe.form_dict.limit)\r\noffset = int(frappe.form_dict.offset)\r\nsort_order = frappe.form_dict.sort_order\r\nsort_by = frappe.form_dict.sort_by\r\n\r\nnow = frappe.utils.today()\r\n\r\nif warehouse is None: warehouse = \"Gudang Utama PWR - DRW\"\r\nif customer_group is None: customer_group = \"Umum\"\r\nif limit is None: limit = 20\r\nif offset is None: offset = 0\r\nif sort_order is None: sort_order = \"desc\"\r\nif sort_by is None: sort_by = \"actual_qty\"\r\n\r\nitems = frappe.qb.DocType('Item')\r\nitemprices = frappe.qb.DocType('Item Price')\r\n\r\ndocs = frappe.db.sql(\"select * from `tabItem` a left join `tabItem Price` b on a.item_code=b.item_code where a.is_apps=1 and a.disabled=0 and b.price_list=%(price_list)s order by a.item_name \"+sort_order+\" limit %(limit)s\", {\"price_list\": customer_group, \"limit\": limit}, as_dict=True)\r\n\r\ndata = []\r\nfor doc in docs:\r\n    get = frappe.call(\"erpnext.stock.doctype.quick_stock_balance.quick_stock_balance.get_stock_item_details\", warehouse=warehouse, date=now, item=doc.item_code)\r\n    qty = get['qty']\r\n    if qty < 100:\r\n        if doc.preorder > 0:\r\n            stock = \"Stok Habis\"\r\n        else:\r\n            stock = \"Preorder\"\r\n    elif qty < 1000:\r\n        stock = \"Stok Limit\"\r\n    else:\r\n        stock = \"Stok Tersedia\"\r\n    data.append({\r\n        \"item_code\": doc.item_code,\r\n        \"item_name\": doc.item_name,\r\n        \"bpom\": doc.bpom,\r\n        \"image\": doc.image,\r\n        \"description\": doc.description,\r\n        \"uom\": \"Pcs\",\r\n        \"conversion_factor\": 1.0,\r\n        \"price_list\": doc.price_list,\r\n        \"price_list_rate\": doc.price_list_rate,\r\n        \"qty\": get['qty'],\r\n        \"stock\": stock\r\n    })\r\n\r\nfrappe.response['data'] = data\r\n\r\nq = (\r\n    frappe.qb.from_(items)\r\n        .select(\r\n            items.item_code,\r\n            items.item_name,\r\n            items.bpom,\r\n            items.image,\r\n            itemprices.price_list,\r\n            itemprices.price_list_rate,\r\n            )\r\n        .left_join(itemprices)\r\n        .on(items.item_code == itemprices.item_code)\r\n        .where(items.is_apps == 1)\r\n        .where(items.disabled == 0)\r\n        .where(itemprices.price_list == customer_group)\r\n        .limit(limit)\r\n        .offset(offset)\r\n).run(as_dict=True)\r\n\r\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.get.user.profile",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-28 11:57:57.030550",
  "name": "New Apps - Get User Profile",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\r\n\r\ndoc = frappe.get_doc(\"Customer\", customer)\r\nid_drw = doc.id_drw\r\n\r\ndoc_poin_old = frappe.make_post_request('https://drwgroup.id/com.drw.skincare/1.0.0/userpointjson.php?id_drw='+id_drw)\r\nsum_poin_old = 0\r\nif doc_poin_old[0]['point'] is not None:\r\n    sum_poin_old = float(doc_poin_old[0]['point'])\r\n\r\ndoc_poin = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"get_point\",\">\",0],[\"application_status\",\"=\",\"Selesai\"],[\"customer\",\"=\",customer],[\"waktu_pemesanan\",\">\",\"2024-10-01 00:00:00\"]])\r\nsum_poin = 0\r\ndatapoin = []\r\nfor docpoin in doc_poin:\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": docpoin.name}, \"parent\")\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n        sum_poin = sum_poin + docpoin.get_point\r\n        datapoin.append({\r\n            \"sales_order\": docpoin.name,\r\n            \"customer_name\": docpoin.customer_name,\r\n            \"application_status\": docpoin.application_status,\r\n            \"waktu_pemesanan\": docpoin.waktu_pemesanan,\r\n            \"waktu_pembayaran\": docpoin.waktu_pembayaran,\r\n            \"total_poin\": docpoin.get_point\r\n        })\r\n\r\npoin_reward = 0\r\npoin_reward = frappe.db.get_value(\"Point Reward\", {\"id_drw\": id_drw}, \"point\")\r\nif poin_reward is None: poin_reward = 0\r\n\r\ntotal_poin = sum_poin_old + sum_poin + poin_reward\r\ndatapoinget = {\r\n    \"id_drw\": id_drw,\r\n    \"customer_name\": doc.customer_name,\r\n    \"level\": doc.customer_group,\r\n    \"sum_poin_old\": sum_poin_old,\r\n    \"sum_poin_new\": sum_poin,\r\n    \"sum_poin_reward\": poin_reward,\r\n    \"total_poin\": total_poin\r\n}\r\n\r\ndoc_coin = frappe.get_all(\"Agent Coin Log\", fields=[\"*\"], filters=[[\"is_cashback\",\"=\",0],[\"customer\",\"=\",customer]])\r\nsum_coin = 0\r\ndatacoin = []\r\nfor doccoin in doc_coin:\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": doccoin.sales_order}, \"parent\")\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n        sistatus = frappe.db.get_value(\"Sales Invoice\", si, \"status\")\r\n        bank = frappe.db.get_value(\"Sales Invoice Metode Pembayaran\", {\"parent\": si}, \"nama_bank\")\r\n        docsi = frappe.get_doc(\"Sales Invoice\", si)\r\n        if bank is not None and sistat>0: \r\n            sum_coin = sum_coin + doccoin.total_coin\r\n            datacoin.append({\r\n                \"name\": doccoin.name,\r\n                \"customer_name\": doccoin.nama_agent,\r\n                \"sales_order\": doccoin.sales_order,\r\n                \"posting_date\": doccoin.posting_date,\r\n                \"total_coin\": doccoin.total_coin\r\n            })\r\n\r\ncoin_min = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"coin_type\",\"=\",\"Non Cashback\"],[\"total_coin\",\">\",0],[\"application_status\",\"!=\",\"Dibatalkan\"],[\"customer\",\"=\",customer]])\r\nsum_coin_min = 0\r\ndatacoinmin = []\r\nfor coinmin in coin_min:\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": coinmin.name}, \"parent\")\r\n    sistat = 0\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n        sum_coin_min = sum_coin_min + coinmin.total_coin\r\n        datacoinmin.append({\r\n            \"sales_order\": coinmin.name,\r\n            \"customer_name\": coinmin.customer_name,\r\n            \"application_status\": coinmin.application_status,\r\n            \"waktu_pemesanan\": coinmin.waktu_pemesanan,\r\n            \"waktu_pembayaran\": coinmin.waktu_pembayaran,\r\n            \"coin_type\": coinmin.coin_type,\r\n            \"total_coin\": coinmin.total_coin\r\n        })\r\n\r\nwithdraw = frappe.get_all(\"Withdraw Coins\", fields=[\"*\"], filters=[[\"customer\",\"=\",customer]])\r\nsum_with = 0\r\ndatawith = []\r\nfor withd in withdraw:\r\n    sum_with = sum_with + withd.total_withdraw\r\n    datawith.append({\r\n        \"name\": withd.name,\r\n        \"customer_name\": withd.customer_name,\r\n        \"posting_date\": withd.posting_date,\r\n        \"status\": withd.status,\r\n        \"total_coin\": withd.total_withdraw\r\n    })\r\n\r\nsum_coin_total = sum_coin - sum_coin_min - sum_with\r\ncoin_total = sum_coin_total\r\nif sum_coin_total < 0: coin_total = 0\r\n\r\ncur_date = frappe.utils.today()\r\nlast_date = frappe.utils.add_to_date(cur_date,days=-30)\r\ncb_get = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"get_cashback\",\">\",0],[\"waktu_pembayaran\",\"is\",\"set\"],[\"application_status\",\"!=\",\"Dibatalkan\"],[\"customer\",\"=\",customer]])\r\nsum_cb_get = 0 \r\ndataget = []\r\nfor cbget in cb_get:\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": cbget.name}, \"parent\")\r\n    sistat = 0\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n        if sistat > 0:\r\n            sum_cb_get = sum_cb_get + cbget.get_cashback\r\n            dataget.append({\r\n                \"sales_order\": cbget.name,\r\n                \"customer_name\": cbget.customer_name,\r\n                \"sales_invoice\": sistat,\r\n                \"application_status\": cbget.application_status,\r\n                \"waktu_pemesanan\": cbget.waktu_pemesanan,\r\n                \"waktu_pembayaran\": cbget.waktu_pembayaran,\r\n                \"get_cashback\": cbget.get_cashback\r\n            })\r\n\r\ncb_min = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"coin_type\",\"=\",\"Cashback\"],[\"total_coin\",\">\",0],[\"application_status\",\"!=\",\"Dibatalkan\"],[\"customer\",\"=\",customer]])\r\nsum_cb_min = 0\r\ndatamin = []\r\nfor cbmin in cb_min:\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": cbmin.name}, \"parent\")\r\n    sistat = 0\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n    sum_cb_min = sum_cb_min + cbmin.total_coin\r\n    datamin.append({\r\n        \"sales_order\": cbmin.name,\r\n        \"customer_name\": cbmin.customer_name,\r\n        \"sales_invoice\": sistat,\r\n        \"application_status\": cbmin.application_status,\r\n        \"waktu_pemesanan\": cbmin.waktu_pemesanan,\r\n        \"waktu_pembayaran\": cbmin.waktu_pembayaran,\r\n        \"coin_type\": cbmin.coin_type,\r\n        \"total_coin\": cbmin.total_coin\r\n    })\r\n\r\nsum_cb_total = sum_cb_get-sum_cb_min\r\ncb_total = sum_cb_total\r\nif sum_cb_total < 0: cb_total = 0\r\n\r\nfrappe.response['data'] = {\r\n    \"id_drw\": id_drw,\r\n    \"customer_name\": doc.customer_name,\r\n    \"level\": doc.customer_group,\r\n    \"sum_coin_get\": sum_coin,\r\n    \"sum_coin_min\": sum_coin_min,\r\n    \"sum_withdraw\": sum_with,\r\n    \"sum_total_coin\": sum_coin_total,\r\n    \"coins\": coin_total,\r\n    \"sum_cb_get\": sum_cb_get,\r\n    \"sum_cb_min\": sum_cb_min,\r\n    \"sum_total_cb\": sum_cb_total,\r\n    \"cashback\": cb_total,\r\n    \"point\": total_poin\r\n}\r\nfrappe.response['datapoin'] = datapoinget\r\nfrappe.response['poinget'] = datapoin\r\nfrappe.response['coinget'] = datacoin\r\nfrappe.response['coinmin'] = datacoinmin\r\nfrappe.response['withdraw'] = datawith\r\nfrappe.response['cbget'] = dataget\r\nfrappe.response['cbmin'] = datamin\r\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.list.history.coins.old",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 10:59:38.524651",
  "name": "New Apps - List History Cashback",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\r\ncashback = 0\r\nlimit = frappe.form_dict.limit\r\nstart = frappe.form_dict.start\r\n\r\nif limit is None: limit = 20\r\nif start is None: start = 0\r\n\r\nfields = [\"name\", \"customer\",\"nama_agent\",\"posting_date\",\"sales_order\",\"kelipatan\",\"total_margin\",\"total_coin\"]\r\nfilters = [[\"is_cashback\",\"=\",cashback],[\"customer\",\"=\",customer]]\r\n\r\ndoc = frappe.db.get_all(\"Agent Coin Log\", fields=fields, filters=filters, limit_start=start, limit_page_length=limit, order_by=\"modified desc\")\r\n\r\ndata = []\r\nfor docs in doc:\r\n    customer_name = frappe.db.get_value(\"Sales Order\",docs.sales_order,\"customer_name\")\r\n    data.append({\r\n        \"name\": docs.name,\r\n        \"customer\": docs.customer,\r\n        \"nama_agent\": docs.nama_agent,\r\n        \"posting_date\": docs.posting_date,\r\n        \"sales_order\": docs.sales_order,\r\n        \"sales_order_name\": customer_name,\r\n        \"kelipatan\": docs.kelipatan,\r\n        \"total_margin\": docs.total_margin,\r\n        \"total_coin\": docs.total_coin\r\n    })\r\n\r\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.list.history.point",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-26 15:35:03.229998",
  "name": "New Apps - List History Point",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\r\nlimit = frappe.form_dict.limit\r\nstart = frappe.form_dict.start\r\n\r\nif limit is None: limit = 20\r\nif start is None: start = 0\r\n\r\nfields = [\"*\"]\r\nfilters = [[\"customer\",\"=\",customer]]\r\n\r\ndoc = frappe.db.get_all(\"Agent Point Log\", fields=fields, filters=filters, limit_start=start, limit_page_length=limit, order_by=\"modified desc\")\r\n\r\nfrappe.response['data'] = doc",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v2.list.history.order.old",
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-16 17:40:08.701528",
  "name": "New Apps - List History Order",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\r\nstatus = frappe.form_dict.status\r\ntujuan = frappe.form_dict.tujuan\r\nlimit = frappe.form_dict.limit\r\nstart = frappe.form_dict.start\r\n\r\nif limit is None: limit = 20\r\nif start is None: start = 0\r\n\r\nfields = [\"name\",\"transaction_date\",\"docstatus\",\"customer\",\"customer_name\",\"customer_group\",\"application_status\",\"total_qty\",\"total\",\"total_taxes_and_charges\",\"additional_discount_percentage\",\"discount_amount\",\"loyalty_points\",\"loyalty_amount\",\"grand_total\",\"coin_type\",\"total_coin\",\"total_coin_amount\",\"waktu_pemesanan\",\"waktu_pembayaran\",\"waktu_pengiriman\",\"pesanan_selesai\",\"pesanan_selesai_pada\",\"nama_kurir\",\"no_resi\",\"payment_method\",\"dropshipper\",\"dibatalkan_pada\",\"ekspedisi\",\"nama_ekspedisi\",\"drop_center\",\"upline\",\"contact_display\",\"contact_mobile\",\"shipping_address_name\",\"shipping_address\"]\r\n\r\nif status is not None: filters = [[\"application_status\",\"=\",status],[\"customer\",\"=\",customer], [\"docstatus\",\"=\",1]]\r\nif tujuan is not None:\r\n    if tujuan == \"Downline\": filters = [[\"upline\",\"=\",customer], [\"docstatus\",\"=\",1]]\r\n    elif tujuan == \"Upline\": filters = [[\"drop_center\",\"like\",\"Upline\"],[\"customer\",\"=\",customer], [\"docstatus\",\"=\",1]]\r\n    else: filters = [[\"drop_center\",\"like\",\"DC%\"],[\"customer\",\"=\",customer], [\"docstatus\",\"=\",1]]\r\n\r\ndoc = frappe.db.get_all(\"Sales Order\", fields=fields, filters=filters, limit_start=start, limit_page_length=limit, order_by=\"modified desc\")\r\n\r\ndata = []\r\nfor docs in doc:\r\n    doc_si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": docs.name},\"parent\")\r\n    if doc_si is not None:\r\n        detail = frappe.get_doc(\"Sales Order\",docs.name)\r\n        data.append({\r\n            \"name\": docs.name,\r\n            \"transaction_date\": docs.transaction_date,\r\n            \"docstatus\": docs.docstatus,\r\n            \"customer\": docs.customer,\r\n            \"customer_name\": docs.customer_name,\r\n            \"customer_group\": docs.customer_group,\r\n            \"application_status\": docs.application_status,\r\n            \"total_qty\": docs.total_qty,\r\n            \"total\": docs.total,\r\n            \"total_taxes_and_charges\": docs.total_taxes_and_charges,\r\n            \"additional_discount_percentage\": docs.additional_discount_percentage,\r\n            \"discount_amount\": docs.discount_amount,\r\n            \"loyalty_points\": docs.loyalty_points,\r\n            \"loyalty_amount\": docs.loyalty_amount,\r\n            \"grand_total\": docs.grand_total,\r\n            \"coin_type\": docs.coin_type,\r\n            \"total_coin\": docs.total_coin,\r\n            \"total_coin_amount\": docs.total_coin_amount,\r\n            \"waktu_pemesanan\": docs.waktu_pemesanan,\r\n            \"waktu_pembayaran\": docs.waktu_pembayaran,\r\n            \"waktu_pengiriman\": docs.waktu_pengiriman,\r\n            \"pesanan_selesai\": docs.pesanan_selesai,\r\n            \"pesanan_selesai_pada\": docs.pesanan_selesai_pada,\r\n            \"nama_kurir\": docs.nama_kurir,\r\n            \"no_resi\": docs.no_resi,\r\n            \"payment_method\": docs.payment_method,\r\n            \"dropshipper\": docs.dropshipper,\r\n            \"dibatalkan_pada\": docs.dibatalkan_pada,\r\n            \"ekspedisi\": docs.ekspedisi,\r\n            \"nama_ekspedisi\": docs.nama_ekspedisi,\r\n            \"drop_center\": docs.drop_center,\r\n            \"upline\": docs.upline,\r\n            \"contact_display\": docs.contact_display,\r\n            \"contact_mobile\": docs.contact_mobile,\r\n            \"shipping_address_name\": docs.shipping_address_name,\r\n            \"shipping_address\": docs.shipping_address,\r\n            \"total_item\": len(detail.items),\r\n            \"items\": detail.items\r\n        })\r\n\r\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.list.voucher.old",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-10 18:19:46.302673",
  "name": "New Apps - List Voucher",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\nuser = frappe.session.user\n\nif customer is None: customer = frappe.db.get_value(\"Customer\", {\"email_id\": user}, \"name\")\n\ndoc = frappe.db.get_all(\"Coupon Code\",fields=[\"*\"],filters=[[\"customer\",\"=\",customer]])\n\nfrappe.response['data'] = doc",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.list.ekspedisi",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-11-12 09:37:33.796627",
  "name": "New Apps - List Ekspedisi",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "dc = frappe.form_dict.dc\n\nif dc is None:\n    dc = \"DC Purworejo\"\n\nq = frappe.get_all(\"Ekspedisi\", filters=[[\"drop_center\",\"=\",dc],[\"disabled\",\"=\",0]], fields=[\"name\",\"nama_ekspedisi\",\"kurir\",\"drop_center\",\"warehouse\"],order_by=\"nama_ekspedisi ASC\")\n\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.list.alamat",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:01:20.547061",
  "name": "New Apps - List Alamat",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\r\nlimit = frappe.form_dict.limit\r\nstart = frappe.form_dict.start\r\n\r\nif limit is None: limit = 20\r\nif start is None: start = 0\r\n\r\nuser = frappe.db.get_value(\"Customer\",customer,\"email_id\")\r\n\r\nfields = [\"name\",\"address_title\",\"address_type\",\"address_line1\",\"address_line2\",\"city\",\"county\",\"state\",\"country\",\"recipient\",\"phone\",\"territory\",\"dropshipper\"]\r\nfilters = [[\"owner\",\"=\",user]]\r\n\r\ndoc = frappe.db.get_all(\"Address\", fields=fields, filters=filters, limit_start=start, limit_page_length=limit, order_by=\"modified desc\")\r\n\r\nfrappe.response['data'] = doc",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.sales.order.cancel",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:11:44.029322",
  "name": "New Apps - Batal Order",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n\nget = frappe.get_doc(\"Sales Invoice Item\", {\"sales_order\":name})\n\nif get.parent is not None and get.parent != \"\":\n    docsi = frappe.get_doc(\"Sales Invoice\", get.parent)\n        \ntry:\n    if docsi.docstatus == 1:\n        cancel = frappe.call(\"frappe.desk.form.save.cancel\",doctype=\"Sales Invoice\",name=get.parent)\n    else:\n        deldoc = frappe.call(\"frappe.client.delete\",doctype=\"Sales Invoice\",name=get.parent)\n    \n    cancel = frappe.call(\"frappe.desk.form.save.cancel\",doctype=\"Sales Order\", name=name)\n    frappe.response['data'] = cancel\nexcept:\n    frappe.log_error(None, \"Cancel Order\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.add.to.cart",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 10:48:04.183299",
  "name": "New Apps - Add To Cart",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "so = frappe.form_dict.so\nname = frappe.form_dict.item_id\nqty = frappe.form_dict.qty\n\nif name is None:\n    json_param = frappe.request.data\n    data = json.loads(json_param)\n\nif name is None and data['doctype'] == \"Sales Order\":\n    doc = frappe.get_doc(data)\n    try:\n        doc.insert(ignore_permissions=True)\n        frappe.response['data'] = doc\n    except:\n        frappe.log_error(title=\"Error Create Cart Item\", message=None)\n        frappe.throw(\"Error\")\nelif name is None and data['doctype'] == \"Sales Order Item\":\n    data['parentfield'] = \"items\"\n    data['parenttype'] = \"Sales Order\"\n    doc = frappe.get_doc(data)\n    try:\n        doc.save(ignore_permissions=True)\n        doc = frappe.get_doc(\"Sales Order\",doc.parent)\n        doc.save(ignore_permissions=True)\n        frappe.response['data'] = doc\n    except:\n        frappe.log_error(title=\"Error Create Cart Item\", message=None)\n        frappe.throw(\"Error\")\nelse:\n    doc = frappe.get_doc(\"Sales Order Item\", {\"parent\": so, \"name\": name})\n    doc.qty = qty\n    try:\n        doc.save(ignore_permissions=True)\n        doc = frappe.get_doc(\"Sales Order\", so)\n        doc.save(ignore_permissions=True)\n        frappe.response['data'] = doc\n    except:\n        frappe.log_error(title=\"Error Create Cart Item\", message=None)\n        frappe.throw(\"Error\")",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.delete.produk.cart",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 10:39:52.132714",
  "name": "New Apps - Delete Produk Cart",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\nparent = frappe.form_dict.parent\n\nif name is None: \n    doc = \"Nama tidak ditemukan\"\n    frappe.response['data'] = doc\nelse:\n    doc = frappe.get_doc(\"Sales Order Item\",{\"parent\": parent, \"name\": name})\n    so = frappe.get_doc(\"Sales Order\", parent)\n    solen = len(so.items)\n    try:\n        if solen > 1:\n            doc.delete(ignore_permissions=True)\n            docs = frappe.get_doc(\"Sales Order\",parent)\n            docs.save(ignore_permissions=True)\n            frappe.response['data'] = docs\n        else:\n            so.delete(ignore_permissions=True)\n            frappe.response['data'] = so\n    except:\n        frappe.log_error(title=\"Error Delete Produk Cart\", message=None)\n        frappe.throw(\"Error\")\n\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.add.alamat",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:14:34.095123",
  "name": "New Apps - Add Alamat",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "json_param = frappe.request.data\ndata = json.loads(json_param)\n\ndata['doctype'] = \"Address\"\ndoc = frappe.get_doc(data)\n\ntry:\n    doc.insert(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Create Alamat\", message=None)\n    frappe.throw(\"Error\")",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.edit.alamat",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:14:25.673686",
  "name": "New Apps - Edit Alamat",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "json_param = frappe.request.data\ndata = json.loads(json_param)\ndata['doctype'] = \"Address\"\ndoc = frappe.get_doc(data)\n\ntry:\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Edit Alamat\", message=None)\n    frappe.throw(\"Error\")",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.delete.alamat",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:16:38.766281",
  "name": "New Apps - Delete Alamat",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n\ndoc = frappe.get_doc(\"Address\", name)\n\ntry:\n    doc.delete(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Delete Alamat\", message=None)\n    frappe.throw(\"Error\")",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.list.all.package",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-27 23:05:42.398024",
  "name": "New Apps - List All Package",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer_group = frappe.form_dict.customer_group\r\nlimit = int(frappe.form_dict.limit)\r\noffset = int(frappe.form_dict.offset)\r\nsort_order = frappe.form_dict.sort_order\r\nsort_by = frappe.form_dict.sort_by\r\n\r\nif customer_group is None: customer_group = \"Umum\"\r\nif limit is None: limit = 20\r\nif offset is None: offset = 0\r\nif sort_order is None: sort_order = \"desc\"\r\nif sort_by is None: sort_by = \"name\"\r\n\r\ndocs = frappe.db.sql(\"select * from `tabProduct Bundle Package` a left join `tabItem Price` b on a.name=b.item_code where a.is_apps=1 and b.price_list=%(price_list)s order by a.name \"+sort_order+\" limit %(limit)s\", {\"price_list\": customer_group, \"limit\": limit}, as_dict=True)\r\n\r\ndata = []\r\nfor doc in docs:\r\n    data.append({\r\n        \"name\": doc.name,\r\n        \"display_name\": doc.display_name,\r\n        \"item_group\": doc.item_group,\r\n        \"image\": doc.image,\r\n        \"description\": doc.description,\r\n        \"stock_uom\": doc.stock_uom,\r\n        \"item_packages\": doc.item_packages,\r\n        \"price_list\": doc.price_list,\r\n        \"price_list_rate\": doc.price_list_rate,\r\n    })\r\n\r\nfrappe.response['data'] = data\r\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.product.detail.old",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-06 22:54:02.565301",
  "name": "New Apps - Produk Detail",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "warehouse = frappe.form_dict.warehouse\r\ncustomer_group = frappe.form_dict.customer_group\r\nitem = frappe.form_dict.item\r\n\r\nnow = frappe.utils.today()\r\n\r\nif warehouse is None: warehouse = \"Gudang Utama PWR - DRW\"\r\nif customer_group is None: customer_group = \"Umum\"\r\n\r\ndoc = frappe.db.sql(\"select * from `tabItem` a left join `tabItem Price` b on a.item_code=b.item_code where a.is_apps=1 and a.disabled=0 and b.price_list=%(price_list)s and a.item_code=%(item)s\", {\"item\": item, \"price_list\": customer_group}, as_dict=True)\r\n\r\nget = frappe.call(\"erpnext.stock.doctype.quick_stock_balance.quick_stock_balance.get_stock_item_details\", warehouse=warehouse, date=now, item=doc[0].item_code)\r\n\r\ndata = []\r\n\r\nqty = get['qty']\r\nif qty < 100:\r\n    if doc.preorder > 0:\r\n        stock = \"Stok Habis\"\r\n    else:\r\n        stock = \"Preorder\"\r\nelif qty < 1000:\r\n    stock = \"Stok Limit\"\r\nelse:\r\n    stock = \"Stok Tersedia\"\r\n    \r\ndata.append({\r\n    \"item_code\": doc[0].item_code,\r\n    \"item_name\": doc[0].item_name,\r\n    \"bpom\": doc[0].bpom,\r\n    \"image\": doc[0].image,\r\n    \"description\": doc[0].description,\r\n    \"uom\": \"Pcs\",\r\n    \"conversion_factor\": 1.0,\r\n    \"price_list\": doc[0].price_list,\r\n    \"price_list_rate\": doc[0].price_list_rate,\r\n    \"qty\": get['qty'],\r\n    \"stock\": stock\r\n})\r\n\r\nfrappe.response['data'] = data\r\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.update.dc",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 10:51:15.878498",
  "name": "New Apps - Update DC",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\ncompany = frappe.form_dict.company\ndc = frappe.form_dict.dc\nwarehouse = frappe.form_dict.warehouse\n\ndoc = frappe.get_doc(\"Sales Order\",name)\n\ntry:\n    doc.drop_center = dc\n    doc.company = company\n    doc.set_warehouse = warehouse\n    for item in doc.items:\n        item.warehouse = warehouse\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Update DC\", message=None)\n    frappe.throw(\"Error\")",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.update.alamat.order",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 10:57:36.343195",
  "name": "New Apps - Update Alamat Order",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\naddr_name = frappe.form_dict.addr_name\n\ndoc = frappe.get_doc(\"Sales Order\",name)\n\ntry:\n    doc.shipping_address_name = addr_name\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Alamat Order\", message=None)\n    frappe.throw(\"Error\")",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.update.biaya.penanganan.old",
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-17 16:05:35.020100",
  "name": "Super Apps - Update Biaya Penanganan Old",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\ntotal = frappe.form_dict.total\n        \ntry:\n    doc = frappe.get_doc(\"Sales Invoice\", name)\n    coa = frappe.db.get_value(\"Company\",doc.company,\"default_biaya_penanganan\")\n    tax = {}\n    tax['doctype'] = \"Sales Taxes and Charges\"\n    tax['parent'] = name\n    tax['parentfield'] = \"taxes\"\n    tax['parenttype'] = \"Sales Invoice\"\n    tax['charge_type'] = \"Actual\"\n    tax['account_head'] = coa\n    tax['description'] = \"Biaya Penanganan\"\n    tax['tax_amount'] = total\n    tax['total'] = int(doc.total) + int(total)\n    taxes = frappe.get_doc(tax)\n    taxes.save(ignore_permissions=True)\n    doc = frappe.get_doc(\"Sales Invoice\", name)\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = taxes\nexcept:\n    frappe.log_error(None, \"Update Biaya Penanganan Error\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.get.user.role",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-27 18:31:40.658121",
  "name": "Super Apps - Get User Role",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "user = frappe.session.user\n\ncustomer = frappe.db.get_value(\"Customer\", {\"email_id\":user}, \"customer_group\")\nemployee = frappe.db.get_value(\"Employee\", {\"user_id\": user}, \"name\")\n\nfrappe.response['data'] = customer",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v2.list.voucher",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-11 14:16:13.898962",
  "name": "Super Apps - Voucher List",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\nuser = frappe.session.user\n\nif customer is None: customer = frappe.db.get_value(\"Customer\", {\"email_id\": user}, \"name\")\nlevel = frappe.db.get_value(\"Customer\", customer, \"customer_group\")\n\nfields = [\"*\"]\nfilters = [[\"valid_upto\",\">\",frappe.utils.today()]]\ndoccoupon = frappe.db.get_all(\"Coupon Code\",fields=fields,filters=filters)\n\ndata = []\nfor doc in doccoupon:\n    pricing = frappe.get_doc(\"Pricing Rule\", doc.pricing_rule)\n    cust = doc.customer\n    if doc.maximum_use > doc.used:\n        if pricing.applicable_for != \"\":\n            if level==pricing.customer_group:\n                data.append({\n                    \"name\": doc.name,\n                    \"coupon_name\": doc.coupon_name,\n                    \"coupon_type\": doc.coupon_type,\n                    \"customer\": doc.customer,\n                    \"coupon_code\": doc.coupon_code,\n                    \"pricing_rule\": doc.pricing_rule,\n                    \"valid_from\": doc.valid_from,\n                    \"valid_upto\": doc.valid_upto,\n                    \"maximum_use\": doc.maximum_use,\n                    \"used\": doc.used,\n                    \"description\": doc.description,\n                    \"pricing_rule_detail\": pricing\n                })\n            if customer==pricing.customer:\n                data.append({\n                    \"name\": doc.name,\n                    \"coupon_name\": doc.coupon_name,\n                    \"coupon_type\": doc.coupon_type,\n                    \"customer\": doc.customer,\n                    \"coupon_code\": doc.coupon_code,\n                    \"pricing_rule\": doc.pricing_rule,\n                    \"valid_from\": doc.valid_from,\n                    \"valid_upto\": doc.valid_upto,\n                    \"maximum_use\": doc.maximum_use,\n                    \"used\": doc.used,\n                    \"description\": doc.description,\n                    \"pricing_rule_detail\": pricing\n                })\n\nfrappe.response['data'] = data\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.kupon.list",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-27 19:21:35.845447",
  "name": "Super Apps - Get Kupon List",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\nuser = frappe.session.user\n\nif customer is None: customer = frappe.db.get_value(\"Customer\", {\"email_id\": user}, \"name\")\n\ndoc = frappe.db.get_all(\"Kupon\",fields=[\"*\"],filters=[[\"customer\",\"=\",customer]])\n\nfrappe.response['data'] = doc",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.activity.log",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-27 19:31:49.835778",
  "name": "Super Apps - Activity Log",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "user = frappe.form_dict.user\n\nif user is None: user = user = frappe.session.user\n\ndoc = frappe.db.get_all(\"Activity Log\",fields=[\"name\",\"subject\",\"communication_date\",\"operation\",\"status\",\"user\",\"full_name\"],filters=[[\"user\",\"=\",user]])\n\nfrappe.response['data'] = doc",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.list.history.order.details",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:00:09.873199",
  "name": "New Apps - List History Order Details",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\r\n\r\ndocs = frappe.get_doc(\"Sales Order\",name)\r\n\r\ndata = {\r\n        \"name\": docs.name,\r\n        \"transaction_date\": docs.transaction_date,\r\n        \"docstatus\": docs.docstatus,\r\n        \"customer\": docs.customer,\r\n        \"customer_name\": docs.customer_name,\r\n        \"customer_group\": docs.customer_group,\r\n        \"application_status\": docs.application_status,\r\n        \"total_qty\": docs.total_qty,\r\n        \"total\": docs.total,\r\n        \"total_taxes_and_charges\": docs.total_taxes_and_charges,\r\n        \"additional_discount_percentage\": docs.additional_discount_percentage,\r\n        \"discount_amount\": docs.discount_amount,\r\n        \"loyalty_points\": docs.loyalty_points,\r\n        \"loyalty_amount\": docs.loyalty_amount,\r\n        \"grand_total\": docs.grand_total,\r\n        \"coin_type\": docs.coin_type,\r\n        \"total_coin\": docs.total_coin,\r\n        \"total_coin_amount\": docs.total_coin_amount,\r\n        \"waktu_pemesanan\": docs.waktu_pemesanan,\r\n        \"waktu_pembayaran\": docs.waktu_pembayaran,\r\n        \"waktu_pengiriman\": docs.waktu_pengiriman,\r\n        \"pesanan_selesai\": docs.pesanan_selesai,\r\n        \"pesanan_selesai_pada\": docs.pesanan_selesai_pada,\r\n        \"nama_kurir\": docs.nama_kurir,\r\n        \"no_resi\": docs.no_resi,\r\n        \"payment_method\": docs.payment_method,\r\n        \"dropshipper\": docs.dropshipper,\r\n        \"dibatalkan_pada\": docs.dibatalkan_pada,\r\n        \"ekspedisi\": docs.ekspedisi,\r\n        \"nama_ekspedisi\": docs.nama_ekspedisi,\r\n        \"drop_center\": docs.drop_center,\r\n        \"upline\": docs.upline,\r\n        \"contact_display\": docs.contact_display,\r\n        \"contact_mobile\": docs.contact_mobile,\r\n        \"shipping_address_name\": docs.shipping_address_name,\r\n        \"shipping_address\": docs.shipping_address,\r\n        \"total_item\": len(docs.items),\r\n        \"items\": docs.items,\r\n        \"item_paket\": docs.item_paket\r\n    }\r\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v2.sales.order.submit.old",
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-16 17:39:37.449733",
  "name": "New Apps - Sales Order Submit",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n        \ntry:\n    doc = frappe.get_doc(\"Sales Order\", name)\n    doc.application_status = \"Menunggu Detail Bayar\"\n    doc.waktu_pembayaran = frappe.utils.now()\n    doc.docstatus = 1\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(None, \"Submit Order\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.update.payment.method",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:13:09.327765",
  "name": "New Apps - Update Payment Method",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\npayment = frappe.form_dict.payment\n\ndoc = frappe.get_doc(\"Sales Order\",name)\n\ntry:\n    doc.payment_method = payment\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Update Payment\", message=None)\n    frappe.throw(\"Error\")",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.package.detail",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-06 23:01:28.356728",
  "name": "New Apps - Package Detail",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "warehouse = frappe.form_dict.warehouse\r\ncustomer_group = frappe.form_dict.customer_group\r\nname = frappe.form_dict.name\r\n\r\nnow = frappe.utils.today()\r\n\r\nif warehouse is None: warehouse = \"Gudang Utama PWR - DRW\"\r\nif customer_group is None: customer_group = \"Umum\"\r\n\r\npricelist = 'b.price_list=\"'+customer_group+'\"'\r\nif customer_group == \"Consultant\":\r\n    pricelist = pricelist + ' or b.price_list=\"Umum\"'\r\nif customer_group == \"Supervisor\":\r\n    pricelist = pricelist + ' or b.price_list=\"Consultant\" or b.price_list=\"Umum\"'\r\nif customer_group == \"Manager\":\r\n    pricelist = pricelist + ' or b.price_list=\"Supervisor\" or b.price_list=\"Consultant\" or b.price_list=\"Umum\"'\r\nif customer_group == \"Director\":\r\n    pricelist = pricelist + ' or b.price_list=\"Manager\" or b.price_list=\"Supervisor\" or b.price_list=\"Consultant\" or b.price_list=\"Umum\"'\r\n\r\ndoc = frappe.db.sql(\"select * from `tabProduct Bundle Package` a left join `tabItem Price` b on a.name=b.item_code where a.is_apps=1 and (\"+pricelist+\") and a.name=%(name)s order by b.price_list_rate asc\", {\"name\": name}, as_dict=True)\r\n\r\ndocs = frappe.get_doc(\"Product Bundle Package\",name)\r\n\r\nprice = []\r\nfor prices in doc:\r\n    if prices.price_list==customer_group:\r\n        continue\r\n    price.append({\r\n        \"price_list\": prices.price_list,\r\n        \"price_list_rate\": prices.price_list_rate\r\n    })\r\n\r\ndata = {\r\n    \"name\": doc[0].name,\r\n    \"display_name\": doc[0].display_name,\r\n    \"item_group\": doc[0].item_group,\r\n    \"image\": doc[0].image,\r\n    \"description\": doc[0].description,\r\n    \"stock_uom\": doc[0].stock_uom,\r\n    \"item_packages\": doc[0].item_packages,\r\n    \"price_list\": doc[0].price_list,\r\n    \"price_list_rate\": doc[0].price_list_rate,\r\n    \"price_list_downline\": price,\r\n    \"item_packages\": docs.item_packages\r\n}\r\n\r\nfrappe.response['data'] = data\r\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v2.update.coin.used",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-24 10:49:54.180331",
  "name": "New App - Update Coin Used",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\ncoin = frappe.form_dict.coin\ncancel = frappe.form_dict.cancel\n\nif cancel is None: cancel = 0\nelse: cancel = int(cancel)\n\ndoc = frappe.get_doc(\"Sales Order\",name)\ngrand_total = doc.grand_total\n\ntry:\n    if cancel > 0:\n        doc.coin_type = \"\"\n        doc.total_coin = 0\n        doc.total_coin_amount = 0\n    else:\n        doc.coin_type = \"Non Cashback\"\n        coin_used = int(coin)\n        coin_amount = coin_used*1000\n        if coin_amount > grand_total:\n            coin_amount = grand_total-(grand_total-1000)\n            coin_used = coin_amount/1000\n        doc.total_coin = coin_used\n        doc.total_coin_amount = coin_amount\n        \n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Update Coin Used\", message=None)\n    frappe.throw(\"Error\")",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.update.cashback.used",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 10:59:14.916026",
  "name": "New Apps - Update Cashback Used",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\ncoin = frappe.form_dict.coin\ncancel = frappe.form_dict.cancel\n\nif cancel is None: cancel = 0\nelse: cancel = int(cancel)\n\ndoc = frappe.get_doc(\"Sales Order\",name)\ngrand_total = doc.grand_total\n\ntry:\n    if cancel > 0:\n        doc.coin_type = \"\"\n        doc.total_coin = 0\n        doc.total_coin_amount = 0\n    else:\n        doc.coin_type = \"Cashback\"\n        coin_used = int(coin)\n        coin_amount = coin_used*1000\n        if coin_amount > grand_total:\n            coin_amount = grand_total-(grand_total-1000)\n            coin_used = coin_amount/1000\n        doc.total_coin = coin_used\n        doc.total_coin_amount = coin_amount\n        \n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Update Cashback Used\", message=None)\n    frappe.throw(\"Error\")",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.update.point.used",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:17:58.287373",
  "name": "New Apps - Update Point Used",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\npoint = frappe.form_dict.point\namount = frappe.form_dict.amount\ncancel = frappe.form_dict.cancel\n\nif cancel is None: cancel = 0\nelse: cancel = int(cancel)\n\ndoc = frappe.get_doc(\"Sales Order\",name)\n\ntry:\n    if cancel > 0:\n        doc.loyalty_points = 0\n        doc.loyalty_amount = 0\n    else:\n        doc.loyalty_points = int(point)\n        doc.loyalty_amount = int(amount)\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Update Point Used\", message=None)\n    frappe.throw(\"Error\")",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.update.voucher.used",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:12:48.149525",
  "name": "New Apps - Update Voucher User",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\nvoucher = frappe.form_dict.voucher\ncancel = frappe.form_dict.cancel\n\nif cancel is None: cancel = 0\nelse: cancel = int(cancel)\n\ndoc = frappe.get_doc(\"Sales Order\",name)\n\ntry:\n    if cancel > 0:\n        doc.coupon_code = \"\"\n        doc.additional_discount_percentage = 0\n        doc.discount_amount = 0\n    else:\n        doc.coupon_code = voucher\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Update Voucher\", message=None)\n    frappe.throw(\"Error\")",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.update.ekspedisi.order",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:12:27.946646",
  "name": "New Apps - Update Ekspedisi Order",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\nekspedisi = frappe.form_dict.ekspedisi\nnama_ekspedisi = frappe.form_dict.nama_ekspedisi\nkurir = frappe.form_dict.kurir\n\ndoc = frappe.get_doc(\"Sales Order\",name)\n\ntry:\n    doc.ekspedisi = ekspedisi\n    doc.nama_ekspedisi = nama_ekspedisi\n    doc.kurir = kurir\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Update Ekspedisi\", message=None)\n    frappe.throw(\"Error\")",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.get.reward",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 10:58:48.582809",
  "name": "New Apps - Get Reward Tahunan",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "type = frappe.form_dict.type\nlevel = frappe.form_dict.level\nmypoint = int(frappe.form_dict.mypoint)\n\nkelipatan = 20000\nif level == \"Director\": kelipatan = 10000\nif level == \"Manager\": kelipatan = 12500\nif level == \"Supervisor\": kelipatan = 15000\n\ndocs = frappe.get_all(\"Reward Tahunan\", fields=[\"*\"], filters={\"type\": type}, order_by=\"point desc\")\n\ndata = []\nfor doc in docs:\n    point = doc.point\n    amount = point*kelipatan\n    myamount = mypoint*kelipatan\n    remainingpoint = 0 \n    remainingamount = 0 \n    if point > mypoint:\n        remainingpoint = point - mypoint\n        remainingamount = amount - myamount\n    data.append({\n        \"name\": doc.name,\n        \"reward\": doc.reward,\n        \"type\": doc.type,\n        \"point\": point,\n        \"amount\": amount,\n        \"level\": level,\n        \"kelipatan\": kelipatan,\n        \"mypoint\": mypoint,\n        \"myamount\": myamount,\n        \"remaining_point\": remainingpoint,\n        \"remaining_amount\": remainingamount,\n        \"file\": doc.file\n    })\n\nfrappe.response['data'] = data\n    ",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.get.data.ongkir",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:00:03.030692",
  "name": "New Apps - Get Data Ongkir",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\ncustomer_group = frappe.form_dict.customer_group\nlimit = frappe.form_dict.limit\nstart = frappe.form_dict.start\nfields = frappe.form_dict.fields\nfilters = frappe.form_dict.filters\n\nif limit is None: limit = 20\nif start is None: start = 0 \nif fields is None: fields = [\"*\"]\nif filters is None: filters = [[\"sales_invoice\",\"is\",\"set\"],[\"ekspedisi\",\"is\",\"set\"]]\nif customer is not None: filters = [[\"sales_invoice\",\"is\",\"set\"],[\"ekspedisi\",\"is\",\"set\"],[\"customer\",\"=\",customer]]\nif customer_group is not None: filters = [[\"sales_invoice\",\"is\",\"set\"],[\"ekspedisi\",\"is\",\"set\"],[\"customer_group\",\"=\",customer_group]]\n\nor_filters = [[\"application_status\",\"=\",\"Dikirim\"], [\"application_status\",\"=\",\"Selesai\"]]\n\ndocs = frappe.get_all(\"Sales Order\", filters=filters, or_filters=or_filters, fields=fields, limit_start=start, limit_page_length=limit,order_by=\"transaction_date DESC\")\n\ndata = []\nfor doc in docs:\n    pm = frappe.db.get_value(\"Sales Invoice Metode Pembayaran\",{\"parent\": doc.sales_invoice},\"nama_bank\")\n    tag = frappe.db.get_value(\"Data Ongkir\",{\"sales_order\": doc.name},\"name\")\n    doctag = {}\n    if tag is not None:\n        doctag = frappe.get_doc(\"Data Ongkir\", tag)\n    pms = {\n        \"sales_order\": doc.name,\n        \"sales_invoice\": doc.sales_invoice,\n        \"customer\": doc.customer,\n        \"customer_name\": doc.customer_name,\n        \"contact_mobile\": doc.contact_mobile,\n        \"grand_total\": doc.grand_total,\n        \"shipping_address_name\": doc.shipping_address_name,\n        \"shipping_address\": doc.shipping_address,\n        \"transaction_date\": doc.transaction_date,\n        \"application_status\": doc.application_status,\n        \"waktu_pengiriman\": doc.waktu_pengiriman,\n        \"drop_center\": doc.drop_center,\n        \"ekspedisi\": doc.ekspedisi,\n        \"nama_bank\": pm,\n        \"tagihan\": doctag\n    }\n    data.append(pms)\n\nfrappe.response['data'] = data\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.create.data.ongkir",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-22 14:18:26.998381",
  "name": "New Apps - Create Data Ongkir",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\nresi = frappe.form_dict.resi\nongkir = frappe.form_dict.ongkir\njatuh_tempo = frappe.form_dict.jatuh_tempo\n\ndata = {}\ndata['doctype'] = \"Data Ongkir\"\ndata['sales_order'] = name\ndata['resi'] = resi\ndata['total_ongkir'] = ongkir\ndata['jatuh_tempo'] = jatuh_tempo\n\nso = frappe.db.get_value(\"Sales Order\", name, \"transaction_date\")\nafter_30_days = frappe.utils.add_to_date(so, days=30)\ndata['jatuh_tempo'] = after_30_days\n\nsi = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": name}, \"parent\")\nbank = frappe.db.get_value(\"Sales Invoice Metode Pembayaran\", {\"parent\": si}, \"nama_bank\")\ndata['nama_bank'] = bank\n\ndoc = frappe.get_doc(data)\n\ntry:\n    doc.insert(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(None, \"Create Data Ongkir\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.update.data.ongkir",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:19:54.934361",
  "name": "New Apps - Edit Data Ongkir",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\ntanggal_lunas = frappe.form_dict.tanggal_lunas\nlunas = frappe.form_dict.lunas\nnama_bank = frappe.form_dict.nama_bank\nno_reference = frappe.form_dict.no_reference\n\ndoc = frappe.get_doc(\"Data Ongkir\",{\"sales_order\":name})\n\ntry:\n    doc.tanggal_lunas = tanggal_lunas\n    doc.lunas = lunas\n    doc.nama_bank = nama_bank\n    doc.no_reference = no_reference\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(None, \"Update Data Ongkir\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.list.history.order.draft",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:10:54.361792",
  "name": "New Apps - List History Order Draft",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\r\nstatus = frappe.form_dict.status\r\ntujuan = frappe.form_dict.tujuan\r\nlimit = frappe.form_dict.limit\r\nstart = frappe.form_dict.start\r\n\r\nif limit is None: limit = 20\r\nif start is None: start = 0\r\n\r\nfields = [\"name\",\"transaction_date\",\"docstatus\", \"customer\",\"customer_name\",\"customer_group\",\"application_status\",\"total_qty\",\"total\",\"total_taxes_and_charges\",\"additional_discount_percentage\",\"discount_amount\",\"loyalty_points\",\"loyalty_amount\",\"grand_total\",\"coin_type\",\"total_coin\",\"total_coin_amount\",\"waktu_pemesanan\",\"waktu_pembayaran\",\"waktu_pengiriman\",\"pesanan_selesai\",\"pesanan_selesai_pada\",\"nama_kurir\",\"no_resi\",\"payment_method\",\"dropshipper\",\"dibatalkan_pada\",\"ekspedisi\",\"nama_ekspedisi\",\"drop_center\",\"upline\",\"contact_display\",\"contact_mobile\",\"shipping_address_name\",\"shipping_address\"]\r\n\r\nif status is not None: filters = [[\"application_status\",\"=\",status],[\"customer\",\"=\",customer], [\"docstatus\",\"=\",0]]\r\nif tujuan is not None:\r\n    if tujuan == \"Downline\": filters = [[\"upline\",\"=\",customer], [\"docstatus\",\"=\",0]]\r\n    elif tujuan == \"Upline\": filters = [[\"drop_center\",\"like\",\"Upline\"],[\"customer\",\"=\",customer], [\"docstatus\",\"=\",0]]\r\n    else: filters = [[\"drop_center\",\"like\",\"DC%\"],[\"customer\",\"=\",customer], [\"docstatus\",\"=\",0]]\r\n\r\ndoc = frappe.db.get_all(\"Sales Order\", fields=fields, filters=filters, limit_start=start, limit_page_length=limit, order_by=\"transaction_date desc\")\r\n\r\ndata = []\r\nfor docs in doc:\r\n    detail = frappe.get_doc(\"Sales Order\",docs.name)\r\n    data.append(detail)\r\n\r\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.push.notification",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-08 16:45:31.884895",
  "name": "New Apps - Push Notification",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "json_param = frappe.request.data\ndata = json.loads(json_param)\nuser = data['user']\n\nfrappe.response['data'] = data\n\ndocname = frappe.db.get_value(\"Push Notification\",{\"user\": user})\n\nif docname is None: \n    data['doctype'] = \"Push Notification\"\n    doc = frappe.get_doc(data)\nelse:\n    doc = frappe.get_doc(\"Push Notification\",{\"user\": user})\n    doc.token = data['token']\n    doc.last_login = data['last_login']\n    doc.device = data['device']\n\ntry:\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Push Notification\", message=None)\n    frappe.throw(\"Error\")",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.get.push.notification",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-28 19:15:07.601165",
  "name": "New Apps - Get Push Notification",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "user = frappe.form_dict.user\n\nif user is None:\n    doc = frappe.db.get_all(\"Push Notification\",fields=[\"name\",\"user\",\"full_name\",\"token\",\"last_login\",\"device\"])\nelse:\n    doc = frappe.get_doc(\"Push Notification\",{\"user\": user})\n\nfrappe.response['data'] = doc\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.get.data.kasbon",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 10:59:01.144863",
  "name": "New Apps - Get Data Kasbon",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\nlimit = frappe.form_dict.limit\nstart = frappe.form_dict.start\nfields = frappe.form_dict.fields\nfilters = frappe.form_dict.filters\n\nif limit is None: limit = 20\nif start is None: start = 0 \nif fields is None: fields = [\"*\"]\nif filters is None: filters = [[\"sales_invoice\",\"is\",\"set\"],[\"docstatus\",\"=\",1],[\"klaim_kasbon\",\">\",0]]\nif customer is not None: filters = [[\"docstatus\",\"=\",1],[\"sales_invoice\",\"is\",\"set\"],[\"klaim_kasbon\",\">\",0],[\"customer\",\"=\",customer]]\n\nor_filters = []\n\ndocs = frappe.get_all(\"Sales Order\", filters=filters, or_filters=or_filters, fields=fields, limit_start=start, limit_page_length=limit,order_by=\"transaction_date DESC\")\n\ndata = []\nfor doc in docs:\n    pm = frappe.db.get_value(\"Sales Invoice Metode Pembayaran\",{\"parent\": doc.sales_invoice},\"nama_bank\")\n    tag = frappe.db.get_value(\"Data Kasbon\",{\"sales_order\": doc.name},\"name\")\n    doctag = {}\n    if tag is not None:\n        doctag = frappe.get_doc(\"Data Kasbon\", tag)\n    pms = {\n        \"sales_order\": doc.name,\n        \"sales_invoice\": doc.sales_invoice,\n        \"customer\": doc.customer,\n        \"customer_name\": doc.customer_name,\n        \"contact_mobile\": doc.contact_mobile,\n        \"grand_total\": doc.grand_total,\n        \"application_status\": doc.application_status,\n        \"waktu_pengiriman\": doc.waktu_pengiriman,\n        \"transaction_date\": doc.transaction_date,\n        \"drop_center\": doc.drop_center,\n        \"limit_kasbon\": doc.limit_kasbon,\n        \"klaim_kasbon\": doc.klaim_kasbon,\n        \"jatuh_tempo\": doc.jatuh_tempo,\n        \"nama_bank\": pm,\n        \"tagihan\": doctag\n    }\n    data.append(pms)\n\nfrappe.response['data'] = data\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.update.kasbon.used",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:00:44.766566",
  "name": "New Apps - Update Kasbon Used",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\nklaim_kasbon = frappe.form_dict.klaim_kasbon\njatuh_tempo = frappe.form_dict.jatuh_tempo\ncancel = frappe.form_dict.cancel\n\nif cancel is None: cancel = 0\nelse: cancel = int(cancel)\n\ndoc = frappe.get_doc(\"Sales Order\",name)\n\ntry:\n    if cancel > 0:\n        doc.klaim_kasbon = 0\n        doc.jatuh_tempo = \"\"\n        doc.discount_amount = 0\n    else:\n        doc.klaim_kasbon = int(klaim_kasbon)\n        doc.jatuh_tempo = jatuh_tempo\n        doc.discount_amount = int(klaim_kasbon)\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Update Kasbon\", message=None)\n    frappe.throw(\"Error\")",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.create.data.kasbon",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-22 14:15:31.265673",
  "name": "New Apps - Create Data Kasbon",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n\ndata = {}\ndata['doctype'] = \"Data Kasbon\"\ndata['sales_order'] = name\n\nso = frappe.db.get_value(\"Sales Order\", name, \"transaction_date\")\nafter_30_days = frappe.utils.add_to_date(so, days=30)\ndata['jatuh_tempo'] = after_30_days\n\nsi = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": name}, \"parent\")\nbank = frappe.db.get_value(\"Sales Invoice Metode Pembayaran\", {\"parent\": si}, \"nama_bank\")\ndata['nama_bank'] = bank\n\ndoc = frappe.get_doc(data)\n\ntry:\n    doc.insert(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(None, \"Create Data Kasbon\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.update.data.kasbon",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 10:41:30.773243",
  "name": "New Apps - Edit Data Kasbon",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\ntanggal_lunas = frappe.form_dict.tanggal_lunas\nlunas = int(frappe.form_dict.lunas)\nnama_bank = frappe.form_dict.nama_bank\nno_reference = frappe.form_dict.no_reference\ndoc = frappe.get_doc(\"Data Kasbon\",{\"sales_order\":name})\n\ntry:\n    doc.tanggal_lunas = tanggal_lunas\n    doc.lunas = lunas\n    doc.nama_bank = nama_bank\n    doc.no_reference = no_reference\n    doc.save(ignore_permissions=True)\n    cust = doc.customer\n    if lunas > 0:\n        frappe.db.set_value(\"Customer\", cust, {\n            \"klaim_kasbon\": 0\n        })\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(None, \"Update Data Kasbon\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.push.notification.old",
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-07 12:00:48.592351",
  "name": "New Apps - Push Notification Old",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "user = frappe.form_dict.user\ntoken = frappe.form_dict.token\nlast_login = frappe.form_dict.last_login\ndevice = frappe.form_dict.device\n\ndocname = frappe.db.get_value(\"Push Notification\",{\"user\": user})\n\nif docname is None: \n    data = {}\n    data['doctype'] = \"Push Notification\"\n    data['user'] = user\n    data['token'] = token\n    data['last_login'] = last_login\n    data['device'] = device\n    doc = frappe.get_doc(data)\nelse:\n    doc = frappe.get_doc(\"Push Notification\",{\"user\": user})\n    doc.token = token\n    doc.last_login = last_login\n    doc.device = device\n\ntry:\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Push Notification\", message=None)\n    frappe.throw(\"Error\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.ae.list",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-29 23:05:41.844652",
  "name": "Super Apps - Daftar AE",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "limit = frappe.form_dict.limit\nstart = frappe.form_dict.start\nfilters = frappe.form_dict.filters\nfields = frappe.form_dict.fields\norder_by = frappe.form_dict.order_by\nname = frappe.form_dict.name\n\nif name is None:\n    if limit is None: limit = 20\n    if start is None: start = 0\n    if filters is None: filters = [[\"designation\",\"=\",\"Account Executive\"]]\n    if fields is None: fields = [\"*\"]\n    if order_by is None: order_by = \"first_name asc\"\n    doc = frappe.db.get_all(\"Employee\", filters=filters, fields=fields,limit_page_length=limit,limit_start=start,order_by=order_by)\n    count = len(doc)\n    frappe.response['count'] = count\n    frappe.response['data'] = doc\nelse:\n    doc = frappe.get_doc(\"Employee\", name)\n    if limit is None: limit = 20\n    if start is None: start = 0\n    if filters is None: filters = [[\"nama_tim\",\"=\",doc.nama_tim]]\n    if fields is None: fields = [\"*\"]\n    if order_by is None: order_by = \"customer_name asc\"\n    docagen = frappe.db.get_all(\"Customer\", filters=filters, fields=fields,limit_page_length=limit,limit_start=start,order_by=order_by)\n    count = len(docagen)\n    frappe.response['count'] = count\n    frappe.response['data'] = doc\n    frappe.response['agen'] = docagen",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.nama.tim",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-29 23:03:14.654864",
  "name": "Super Apps - Get Nama Tim List",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "doc = frappe.db.get_all(\"Tim AE\", pluck=\"name\", order_by=\"modified asc\")\n\nfrappe.response['data'] = doc\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.get.agen",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-28 11:59:14.261230",
  "name": "New Apps - Get Agen Detail",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "limit = frappe.form_dict.limit\nstart = frappe.form_dict.start\nfilters = frappe.form_dict.filters\nfields = frappe.form_dict.fields\norder_by = frappe.form_dict.order_by\nname = frappe.form_dict.name\n\nif limit is None:\n    limit = 20\n\nif start is None:\n    start = 0\n\nif filters is None:\n    filters = [[\"customer_group\",\"=\",\"Director\"]]\n\nif fields is None:\n    fields = [\"*\"]\n\nif order_by is None:\n    order_by = \"customer_name asc\"\n\nif name is None:\n    q = frappe.get_all(\"Customer\", filters=filters, fields=fields,limit_page_length=limit,limit_start=start,order_by=order_by)\nelse:\n    lastyear = \"Last Year\"\n    thisyear = \"This Year\"\n    thismonth = \"This Month\"\n    get_order_lastyear = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",lastyear.lower()],[\"docstatus\", \"=\", 1],[\"customer\",\"=\",name]])\n    count_order_lastyear = len(get_order_lastyear)\n    sum_order_lastyear = 0\n    if count_order_lastyear>0:\n        sum_order_lastyear = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": get_order_lastyear})[0][0]\n    sum_order_lastmonth = sum_order_lastyear/12\n    get_order = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",thisyear.lower()],[\"docstatus\", \"=\", 1],[\"customer\",\"=\",name]])\n    count_order = len(get_order)\n    sum_order = 0\n    if count_order>0:\n        sum_order = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": get_order})[0][0]\n    get_order_month = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",thismonth.lower()],[\"docstatus\", \"=\", 1],[\"customer\",\"=\",name]])\n    count_order_month = len(get_order_month)\n    sum_order_month = 0\n    if count_order_month>0:\n        sum_order_month = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": get_order_month})[0][0]\n    get_order_downline = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"transaction_date\",\"timespan\",thisyear.lower()],[\"docstatus\", \"=\", 1],[\"upline\",\"=\",name]])\n    count_order_downline = len(get_order_downline)\n    sum_order_downline = 0\n    if count_order_downline>0:\n        sum_order_downline = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Order` where name in %(names)s\", {\"names\": get_order_downline})[0][0]\n    get_downline = frappe.get_all(\"Customer\", pluck=\"name\",filters=[[\"upline\",\"=\",name]])\n    get_downline_thismonth = frappe.get_all(\"Customer\", pluck=\"name\",filters=[[\"upline\",\"=\",name],[\"creation\",\"timespan\",thismonth.lower()]])\n    count_downline = len(get_downline)\n    count_downline_thismonth = len(get_downline_thismonth)\n    target_downline = 10\n    percent_downline = count_downline_thismonth/target_downline*100\n    q = frappe.get_doc(\"Customer\", name)\n    g = frappe.get_doc(\"Customer Group\", q.customer_group)\n    upline_contact = frappe.db.get_value(\"Customer\", q.upline, \"mobile_no\")\n        \n    limit_target = 0\n    max_target = 0\n    for t in g.target:\n        if limit_target == 0:\n            limit_target = t.limit_target\n            max_target = t.max_target\n            nama_target = t.nama_target\n        if sum_order_month >= t.limit_target:\n            limit_target = t.limit_target\n            max_target = t.max_target\n            nama_target = t.nama_target\n    limit_target_percent_thismonth = sum_order_month/max_target*100\n    sum_order_lastmonth_30 = sum_order_lastmonth + (sum_order_lastmonth*(30/100))\n    limit_target_thisyear = 12*limit_target \n    limit_target_percent_thisyear = sum_order/limit_target_thisyear*100\n    sum_order_lastyear_30 = sum_order_lastyear + (sum_order_lastyear*(30/100))\n    if sum_order_lastmonth_30 > 0: limit_target_percent_lastmonth = sum_order_month/sum_order_lastmonth_30*100\n    else: limit_target_percent_lastmonth = 0\n    if sum_order_lastyear_30 > 0: limit_target_percent_lastyear = sum_order/sum_order_lastyear_30*100\n    else: limit_target_percent_lastyear = 0\n    grafik = {}\n    today = frappe.utils.today()\n    start_year = str(int(today[0:4])-1)\n    start_date = start_year+'-1-1'\n    start_date = frappe.utils.getdate(start_date)\n    sum_order_bymonth = frappe.db.sql(\"select month(posting_date) as month, DATE_FORMAT(posting_date, '%%M') as month_label, sum(if(year(posting_date)=2023,ifnull(grand_total,0),0)) as prev_year,sum(if(year(posting_date)=2024,ifnull(grand_total,0),0)) as current_year from `tabSales Invoice` where posting_date >= %(start_date)s and docstatus = 1 and customer = %(customer)s group by month order by month asc\",{\n        \"start_date\": start_date,\n        \"customer\": name\n    },as_dict=True)\n    grafik = sum_order_bymonth\n\nconditions = {}\nconditions[\"customer_group\"] = frappe.form_dict.customer_group\ncount = frappe.db.count(\"Customer\", filters=conditions)\ncustomer = name\nid_drw = q.id_drw\n\ndoc_poin_old = frappe.make_post_request('https://drwgroup.id/com.drw.skincare/1.0.0/userpointjson.php?id_drw='+id_drw)\nsum_poin_old = 0\nif doc_poin_old[0]['point'] is not None:\n    sum_poin_old = float(doc_poin_old[0]['point'])\n\ndoc_poin = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"get_point\",\">\",0],[\"application_status\",\"!=\",\"Dibatalkan\"],[\"customer\",\"=\",customer],[\"waktu_pemesanan\",\">\",\"2024-10-01 00:00:00\"]])\nsum_poin = 0\ndatapoin = []\nfor docpoin in doc_poin:\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": docpoin.name}, \"parent\")\n    if si is not None:\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\n        if sistat > 0: \n            sum_poin = sum_poin + docpoin.get_point\n            datapoin.append({\n                \"sales_order\": docpoin.name,\n                \"customer_name\": docpoin.customer_name,\n                \"application_status\": docpoin.application_status,\n                \"waktu_pemesanan\": docpoin.waktu_pemesanan,\n                \"waktu_pembayaran\": docpoin.waktu_pembayaran,\n                \"total_poin\": docpoin.get_point\n            })\n\npoin_reward = 0\npoin_reward = frappe.db.get_value(\"Point Reward\", {\"id_drw\": id_drw}, \"point\")\nif poin_reward is None: poin_reward = 0\n\ntotal_poin = sum_poin_old + sum_poin + poin_reward\n\ndoc_coin = frappe.get_all(\"Agent Coin Log\", fields=[\"*\"], filters=[[\"is_cashback\",\"=\",0],[\"customer\",\"=\",customer]])\nsum_coin = 0\ndatacoin = []\nfor doccoin in doc_coin:\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": doccoin.sales_order}, \"parent\")\n    if si is not None:\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\n        sistatus = frappe.db.get_value(\"Sales Invoice\", si, \"status\")\n        bank = frappe.db.get_value(\"Sales Invoice Metode Pembayaran\", {\"parent\": si}, \"nama_bank\")\n        docsi = frappe.get_doc(\"Sales Invoice\", si)\n        if bank is not None and sistat>0: \n            sum_coin = sum_coin + doccoin.total_coin\n            datacoin.append({\n                \"name\": doccoin.name,\n                \"customer_name\": doccoin.nama_agent,\n                \"sales_order\": doccoin.sales_order,\n                \"posting_date\": doccoin.posting_date,\n                \"total_coin\": doccoin.total_coin\n            })\n\ncoin_min = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"coin_type\",\"=\",\"Non Cashback\"],[\"total_coin\",\">\",0],[\"customer\",\"=\",customer]])\nsum_coin_min = 0\ndatacoinmin = []\nfor coinmin in coin_min:\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": coinmin.name}, \"parent\")\n    sistat = 0\n    if si is not None:\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\n        if sistat > 0:\n            sum_coin_min = sum_coin_min + coinmin.total_coin\n            datacoinmin.append({\n                \"sales_order\": coinmin.name,\n                \"customer_name\": coinmin.customer_name,\n                \"application_status\": coinmin.application_status,\n                \"waktu_pemesanan\": coinmin.waktu_pemesanan,\n                \"waktu_pembayaran\": coinmin.waktu_pembayaran,\n                \"coin_type\": coinmin.coin_type,\n                \"total_coin\": coinmin.total_coin\n            })\n\nwithdraw = frappe.get_all(\"Withdraw Coins\", fields=[\"*\"], filters=[[\"customer\",\"=\",customer]])\nsum_with = 0\ndatawith = []\nfor withd in withdraw:\n    sum_with = sum_with + withd.total_withdraw\n    datawith.append({\n        \"name\": withd.name,\n        \"customer_name\": withd.customer_name,\n        \"posting_date\": withd.posting_date,\n        \"status\": withd.status,\n        \"total_coin\": withd.total_withdraw\n    })\n\nsum_coin_total = sum_coin - sum_coin_min - sum_with\ncoin_total = sum_coin_total\nif sum_coin_total < 0: coin_total = 0\n\ncur_date = frappe.utils.today()\nlast_date = frappe.utils.add_to_date(cur_date,days=-30)\ncb_get = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"get_cashback\",\">\",0],[\"waktu_pembayaran\",\"is\",\"set\"],[\"application_status\",\"!=\",\"Dibatalkan\"],[\"customer\",\"=\",customer]])\nsum_cb_get = 0 \ndataget = []\nfor cbget in cb_get:\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": cbget.name}, \"parent\")\n    sistat = 0\n    if si is not None:\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\n        if sistat > 0:\n            sum_cb_get = sum_cb_get + cbget.get_cashback\n            dataget.append({\n                \"sales_order\": cbget.name,\n                \"customer_name\": cbget.customer_name,\n                \"sales_invoice\": sistat,\n                \"application_status\": cbget.application_status,\n                \"waktu_pemesanan\": cbget.waktu_pemesanan,\n                \"waktu_pembayaran\": cbget.waktu_pembayaran,\n                \"get_cashback\": cbget.get_cashback\n            })\n\ncb_min = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"coin_type\",\"=\",\"Cashback\"],[\"total_coin\",\">\",0],[\"application_status\",\"!=\",\"Dibatalkan\"],[\"customer\",\"=\",customer]])\nsum_cb_min = 0\ndatamin = []\nfor cbmin in cb_min:\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": cbmin.name}, \"parent\")\n    sistat = 0\n    if si is not None:\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\n    sum_cb_min = sum_cb_min + cbmin.total_coin\n    datamin.append({\n        \"sales_order\": cbmin.name,\n        \"customer_name\": cbmin.customer_name,\n        \"sales_invoice\": sistat,\n        \"application_status\": cbmin.application_status,\n        \"waktu_pemesanan\": cbmin.waktu_pemesanan,\n        \"waktu_pembayaran\": cbmin.waktu_pembayaran,\n        \"coin_type\": cbmin.coin_type,\n        \"total_coin\": cbmin.total_coin\n    })\n\nsum_cb_total = sum_cb_get-sum_cb_min\ncb_total = sum_cb_total\nif sum_cb_total < 0: cb_total = 0\n\nfrappe.response['datapoin'] = {\n    \"id_drw\": id_drw,\n    \"customer_name\": q.customer_name,\n    \"level\": q.customer_group,\n    \"sum_coin_get\": sum_coin,\n    \"sum_coin_min\": sum_coin_min,\n    \"sum_withdraw\": sum_with,\n    \"sum_total_coin\": sum_coin_total,\n    \"coins\": coin_total,\n    \"sum_cb_get\": sum_cb_get,\n    \"sum_cb_min\": sum_cb_min,\n    \"sum_total_cb\": sum_cb_total,\n    \"cashback\": cb_total,\n    \"point\": total_poin\n}\nfrappe.response['data'] = {\n    \"name\": q.name,\n    \"owner\": q.owner,\n    \"creation\": q.creation,\n    \"modified\": q.modified,\n    \"modified_by\": q.modified_by,\n    \"idx\": q.idx,\n    \"docstatus\": q.docstatus,\n    \"naming_series\": q.naming_series,\n    \"customer_name\": q.customer_name,\n    \"nik\": q.nik,\n    \"tanggal_lahir\": q.tanggal_lahir,\n    \"tempat_lahir\": q.tempat_lahir,\n    \"gender\": q.gender,\n    \"customer_type\": q.customer_type,\n    \"id_drw\": q.id_drw,\n    \"photo_profil\": q.photo_profil,\n    \"customer_group\": q.customer_group,\n    \"upline\": q.upline,\n    \"territory_lama\": q.territory_lama,\n    \"territory\": q.territory,\n    \"provinsi\": q.provinsi,\n    \"kabupaten_kota\": q.kabupaten_kota,\n    \"nomor_awalan_pajak\": q.nomor_awalan_pajak,\n    \"so_required\": q.so_required,\n    \"dn_required\": q.dn_required,\n    \"disabled\": q.disabled,\n    \"is_internal_customer\": q.is_internal_customer,\n    \"user_admin\": q.user_admin,\n    \"nama_tim\": q.nama_tim,\n    \"default_price_list\": q.default_price_list,\n    \"customer_primary_contact\": q.customer_primary_contact,\n    \"mobile_no\": q.mobile_no,\n    \"email_id\": q.email_id,\n    \"customer_primary_address\": q.customer_primary_address,\n    \"facebook\": q.facebook,\n    \"instagram\": q.instagram,\n    \"language\": q.language,\n    \"is_frozen\": q.is_frozen,\n    \"total_belanja\": q.total_belanja,\n    \"benlanja_terakhir\": q.benlanja_terakhir,\n    \"total_point\": total_poin,\n    \"remaining_point\": q.remaining_point,\n    \"total_coins\": coin_total,\n    \"total_coin_cashback\": cb_total,\n    \"limit_kasbon\": q.limit_kasbon,\n    \"klaim_kasbon\": q.klaim_kasbon,\n    \"jatuh_tempo\": q.jatuh_tempo,\n    \"percentage_kasbon\": q.percentage_kasbon,\n    \"default_sales_partner\": q.default_sales_partner,\n    \"default_commission_rate\": q.default_commission_rate,\n    \"doctype\": q.doctype,\n    \"companies\": q.companies,\n    \"accounts\": q.accounts,\n    \"credit_limits\": q.credit_limits,\n    \"sales_team\": q.sales_team,\n    \"is_verified\": q.is_verified\n}\nfrappe.response['count'] = count\nfrappe.response['details'] = {\n    \"upline_contact\": upline_contact,\n    \"total_order_thisyear\": sum_order,\n    \"count_order_thisyear\": count_order,\n    \"total_order_lastyear\": sum_order_lastyear_30,\n    \"count_order_lastyear\": count_order_lastyear,\n    \"total_order_lastmonth\": sum_order_lastmonth_30,\n    \"total_order_month\": sum_order_month,\n    \"count_order_month\": count_order_month,\n    \"total_order_downline\": sum_order_downline,\n    \"count_order_downline\": count_order_downline,\n    \"total_downline\": count_downline,\n    \"limit_target\": limit_target,\n    \"max_target\": max_target,\n    \"nama_target\": nama_target,\n    \"limit_target_percent_thismonth\": limit_target_percent_thismonth,\n    \"limit_target_percent_lastmonth\": limit_target_percent_lastmonth,\n    \"limit_target_thisyear\": limit_target_thisyear,\n    \"limit_target_percent_thisyear\": limit_target_percent_thisyear,\n    \"limit_target_percent_lastyear\": limit_target_percent_lastyear,\n    \"count_downline\": count_downline_thismonth,\n    \"target_downline\": target_downline,\n    \"percent_downline\": percent_downline,\n    \"grafik\": grafik\n}\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.all.agen.list",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-29 23:32:14.852485",
  "name": "Super Apps - Get All Agen List",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "limit = frappe.form_dict.limit\nstart = frappe.form_dict.start\nfilters = frappe.form_dict.filters\nfields = frappe.form_dict.fields\norder_by = frappe.form_dict.order_by\nname = frappe.form_dict.name\n\nif name is None:\n    if limit is None: limit = 20\n    if start is None: start = 0\n    if filters is None: filters = [[\"customer_group\",\"=\",\"Director\"]]\n    if fields is None: fields = [\"*\"]\n    if order_by is None: order_by = \"customer_name asc\"\n    doc = frappe.db.get_all(\"Customer\", filters=filters, fields=fields,limit_page_length=limit,limit_start=start,order_by=order_by)\n    count = len(doc)\n    frappe.response['count'] = count\n    frappe.response['data'] = doc\nelse:\n    doc = frappe.get_doc(\"Customer\", name)\n    frappe.response['data'] = doc\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.edit.nama.tim",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-08-29 23:35:14.335087",
  "name": "Super Apps - Edit Nama Tim",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\nnama_tim = frappe.form_dict.nama_tim\n\ndoc = frappe.get_doc(\"Customer\",customer)\n\ntry:\n    doc.nama_tim = nama_tim\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(None, \"Edit Nama Tim\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.add.payment",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-06 14:47:51.377448",
  "name": "Super Apps - Payment Add",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\nreference = frappe.form_dict.reference\ndate = frappe.form_dict.date\n\ndoc = frappe.call(\"erpnext.accounts.doctype.payment_entry.payment_entry.get_payment_entry\",dt=\"Sales Invoice\",dn=name)\n\ntry:\n    doc.reference_no = reference\n    doc.reference_date = date\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(None, \"Update Payment Reference Error\")",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.get.data.kasbon",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:10:00.448440",
  "name": "New Apps - Get Data Kasbon Mobile",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\nlimit = frappe.form_dict.limit\nstart = frappe.form_dict.start\nfields = frappe.form_dict.fields\nfilters = frappe.form_dict.filters\n\nif limit is None: limit = 20\nif start is None: start = 0 \nif fields is None: fields = [\"name\",\"sales_order\",\"sales_invoice\",\"customer\",\"customer_name\",\"contact_no\",\"grand_total\",\"limit_kasbon\",\"klaim_kasbon\",\"tanggal_klaim\",\"jatuh_tempo\",\"tanggal_lunas\",\"lunas\",\"nama_bank\",\"no_rekening\",\"atas_nama_rekening\",\"no_reference\"]\nif filters is None: filters = []\nif customer is not None: filters = [[\"customer\",\"=\",customer]]\n\nor_filters = []\n\nq = frappe.get_all(\"Data Kasbon\", filters=filters, or_filters=or_filters, fields=fields, limit_start=start, limit_page_length=limit,order_by=\"modified DESC\")\n\nfrappe.response['data'] = q\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.get.data.ongkir",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:02:35.632461",
  "name": "New Apps - Get Data Ongkir Mobile",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\nlimit = frappe.form_dict.limit\nstart = frappe.form_dict.start\nfields = frappe.form_dict.fields\nfilters = frappe.form_dict.filters\n\nif limit is None: limit = 20\nif start is None: start = 0 \nif fields is None: fields = [\"name\",\"sales_order\",\"sales_invoice\",\"customer\",\"customer_name\",\"contact_no\",\"total_belanja\",\"ekspedisi\",\"resi\",\"total_ongkir\",\"jatuh_tempo\",\"tanggal_lunas\",\"lunas\",\"nama_bank\",\"no_rekening\",\"atas_nama_rekening\",\"no_reference\"]\nif filters is None: filters = []\nif customer is not None: filters = [[\"customer\",\"=\",customer]]\n\nor_filters = []\n\nq = frappe.get_all(\"Data Ongkir\", filters=filters, or_filters=or_filters, fields=fields, limit_start=start, limit_page_length=limit,order_by=\"modified DESC\")\n\nfrappe.response['data'] = q\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.dashboard.admin.old",
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-14 05:45:54.128236",
  "name": "Super Apps - Get Dashboard Admin",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "daily = \"Today\"\nthisweek = \"This Week\"\nthismonth = \"This Month\"\nthisyear = \"This Year\"\n\nget_order_daily = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",daily.lower()],[\"docstatus\", \"=\", 1],[\"customer_group\",\"=\",\"Director\"]])\ncount_order_daily = len(get_order_daily)\nsum_order_daily = 0\nif count_order_daily>0:\n    sum_order_daily = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": get_order_daily})[0][0]\n\nget_order_thisweek = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",thisweek.lower()],[\"docstatus\", \"=\", 1],[\"customer_group\",\"=\",\"Director\"]])\ncount_order_thisweek = len(get_order_thisweek)\nsum_order_thisweek = 0\nif count_order_thisweek>0:\n    sum_order_thisweek = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": get_order_thisweek})[0][0]\n\nget_order_thismonth = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",thismonth.lower()],[\"docstatus\", \"=\", 1],[\"customer_group\",\"=\",\"Director\"]])\ncount_order_thismonth = len(get_order_thismonth)\nsum_order_thismonth = 0\nif count_order_thismonth>0:\n    sum_order_thismonth = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": get_order_thismonth})[0][0]\n\nget_order_thisyear = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",thisyear.lower()],[\"docstatus\", \"=\", 1],[\"customer_group\",\"=\",\"Director\"]])\ncount_order_thisyear = len(get_order_thisyear)\nsum_order_thisyear = 0\nif count_order_thisyear>0:\n    sum_order_thisyear = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": get_order_thisyear})[0][0]\n\nget_menunggu_detail = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"docstatus\", \"=\", 1],[\"application_status\",\"=\",\"Menunggu Detail Bayar\"],[\"transaction_date\",\"timespan\",thisyear.lower()]])\ncount_menunggu_detail = len(get_menunggu_detail)\nget_belum_bayar = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"docstatus\", \"=\", 1],[\"application_status\",\"=\",\"Belum Bayar\"],[\"transaction_date\",\"timespan\",thisyear.lower()]])\ncount_belum_bayar = len(get_belum_bayar)\nget_dikemas = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"docstatus\", \"=\", 1],[\"application_status\",\"=\",\"Dikemas\"],[\"transaction_date\",\"timespan\",thisyear.lower()]])\ncount_dikemas = len(get_dikemas)\nget_dikirim = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"docstatus\", \"=\", 1],[\"application_status\",\"=\",\"Dikirim\"],[\"transaction_date\",\"timespan\",thisyear.lower()]])\ncount_dikirim = len(get_dikirim)\nget_dibatalkan = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"docstatus\", \"=\", 1],[\"application_status\",\"=\",\"Dibatalkan\"],[\"transaction_date\",\"timespan\",thisyear.lower()]])\ncount_dibatalkan = len(get_dibatalkan)\nget_selesai = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"docstatus\", \"=\", 1],[\"application_status\",\"=\",\"Selesai\"],[\"transaction_date\",\"timespan\",thisyear.lower()]])\ncount_selesai = len(get_selesai)\n\nget_director = frappe.get_all(\"Customer\", pluck=\"name\",filters=[[\"customer_group\",\"=\",\"Director\"]])\ncount_director = len(get_director)\nget_manager = frappe.get_all(\"Customer\", pluck=\"name\",filters=[[\"customer_group\",\"=\",\"Manager\"]])\ncount_manager = len(get_manager)\nget_supervisor = frappe.get_all(\"Customer\", pluck=\"name\",filters=[[\"customer_group\",\"=\",\"Supervisor\"]])\ncount_supervisor = len(get_supervisor)\nget_consultant = frappe.get_all(\"Customer\", pluck=\"name\",filters=[[\"customer_group\",\"=\",\"Consultant\"]])\ncount_consultant = len(get_consultant)\n\ngrafik = {}\ntoday = frappe.utils.today()\nstart_year = str(int(today[0:4])-1)\nstart_date = start_year+'-1-1'\nstart_date = frappe.utils.getdate(start_date)\nsum_order_bymonth = frappe.db.sql(\"select month(posting_date) as month, DATE_FORMAT(posting_date, '%%M') as month_label, sum(if(year(posting_date)=2023,ifnull(grand_total,0),0)) as prev_year,sum(if(year(posting_date)=2024,ifnull(grand_total,0),0)) as current_year from `tabSales Invoice` where posting_date >= %(start_date)s and docstatus = 1 group by month order by month asc\",{\n    \"start_date\": start_date,\n},as_dict=True)\ngrafik = sum_order_bymonth\n\nfrappe.response['data'] = {\n    \"total_order_harian\": sum_order_daily,\n    \"count_order_harian\": count_order_daily,\n    \"total_order_mingguan\": sum_order_thisweek,\n    \"count_order_mingguan\": count_order_thisweek,\n    \"total_order_bulanan\": sum_order_thismonth,\n    \"count_order_bulanan\": count_order_thismonth,\n    \"total_order_tahunan\": sum_order_thisyear,\n    \"count_order_tahunan\": count_order_thisyear,\n    \"count_menunggu_detail\": count_menunggu_detail,\n    \"count_belum_bayar\": count_belum_bayar,\n    \"count_dikemas\":  count_dikemas,\n    \"count_dikirim\": count_dikirim,\n    \"count_dibatalkan\": count_dibatalkan,\n    \"count_selesai\": count_selesai,\n    \"count_director\": count_director,\n    \"count_manager\": count_manager,\n    \"count_supervisor\": count_supervisor,\n    \"count_consultant\": count_consultant,\n    \"grafik\": grafik\n}\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v2.list.voucher.old",
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:10:44.286025",
  "name": "New Apps - List Voucher Old",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\r\nlimit = frappe.form_dict.limit\r\nstart = frappe.form_dict.start\r\n\r\nif limit is None: limit = 20\r\nif start is None: start = 0\r\n\r\nfields = [\"name\",\"nama_voucher\",\"discount_percentage\",\"discount_amount\",\"description\",\"voucher_item\",\"customer\",\"customer_name\",\"claim_sales_order\",\"status\"]\r\nfilters = [[\"customer\",\"=\",customer]]\r\n\r\ndoc = frappe.db.get_all(\"Voucher\", fields=fields, filters=filters, limit_start=start, limit_page_length=limit, order_by=\"modified desc\")\r\n\r\nfrappe.response['data'] = doc",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.add.proof.payment",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:20:56.532613",
  "name": "New Apps - Add Proof Payment",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "si = frappe.form_dict.si\nso = frappe.form_dict.so\n\nif si is None: si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\":so},\"parent\")\n\ndata = {}\ndata['sales_invoice'] = si\ndata['doctype'] = \"Sales Invoice Proof of Payment\"\ndoc = frappe.get_doc(data)\n\ntry:\n    doc.insert(ignore_permissions=True)\n    frappe.response['data'] = {\n        \"name\": doc.name,\n        \"sales_invoice\": doc.sales_invoice,\n        \"customer_name\": doc.customer_name\n    }\nexcept:\n    frappe.log_error(title=\"Error Create Proof\", message=None)\n    frappe.throw(\"Error\")",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.update.proof.payment",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:20:29.833000",
  "name": "New Apps - Update Proof Payment",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "file_url = frappe.form_dict.file_url\nname = frappe.form_dict.name\n\ndoc = frappe.get_doc(\"Sales Invoice Proof of Payment\",name)\ndoc.image = file_url\n\ntry:\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Update Proof\", message=None)\n    frappe.throw(\"Error\")",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.change.status.order",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2025-01-02 15:50:56.139037",
  "name": "New Apps - Change Status Order",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\nstatus = frappe.form_dict.status\n\nif status is not None:\n    frappe.db.set_value(\"Sales Order\", name, {\n        \"application_status\": status\n    })\n    doc = frappe.get_doc(\"Sales Order\", name)\n    cust = doc.customer\n    doccust = frappe.get_doc(\"Customer\", cust)\nelse:\n    doc = frappe.get_doc(\"Sales Order\", name)\n\nfrappe.response['data'] = {\n    \"name\": name,\n    \"drop_center\": doc.drop_center,\n    \"application_status\": doc.application_status\n}",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.get.proof.payment.image",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:02:54.115309",
  "name": "New Apps - Get Proof Payment Image",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "si = frappe.form_dict.si\nso = frappe.form_dict.so\n\nif si is None: si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\":so},\"parent\")\n\ndata = frappe.get_all(\"Sales Invoice Proof of Payment\", filters=[[\"sales_invoice\", \"=\", si],[\"image\",\"is\",\"set\"]], fields=[\"name\",\"image\",\"sales_invoice\",\"customer_name\"], order_by=\"modified asc\")\n\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.get.event.sheila",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-03 13:25:27.676747",
  "name": "DRW Apps - Get Event Sheila",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "id_drw = frappe.form_dict.id_drw\n\nq = frappe.db.get_value(\"Event Sheila\", {\"id_drw\": id_drw}, \"name\")\n\nif q is not None: doc = frappe.get_doc(\"Event Sheila\", {\"id_drw\": id_drw})\nelse: doc = q\n\nfrappe.response['data'] = doc",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.get.data.customer",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-03 05:30:09.064459",
  "name": "DRW Apps - Get Data Customer",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "id_drw = frappe.form_dict.id_drw\n\nq = frappe.db.get_value(\"Data Customer\", {\"id_drw\": id_drw}, \"nama_lengkap\")\n\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.add.event.sheila",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-03 09:19:22.682306",
  "name": "DRW Apps - Add Event Sheila",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "json_param = frappe.request.data\ndata = json.loads(json_param)\ndata['doctype'] = \"Event Sheila\"\ndoc = frappe.get_doc(data)\ntry:\n    doc.insert(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Create Event\", message=None)\n    frappe.throw(\"Error\")\n\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.rekening.list",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-04 15:11:47.948492",
  "name": "Super Apps - Get Rekening List",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "docs = frappe.db.get_all(\"Rekening Order\", fields=[], order_by=\"urut asc\")\n\ndata = []\nfor doc in docs:\n    q = frappe.get_doc(\"Rekening Order\", doc)\n    data.append({\n        \"name\": q.name,\n        \"urut\": q.urut,\n        \"rekening_group\": q.rekening_group,\n        \"rekening_list\": q.rekening_list\n    })\n\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.update.event.sheila",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-05 13:19:49.950945",
  "name": "DRW Apps - Update Event Sheila",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "id_drw = frappe.form_dict.id_drw\nid_order_drw = frappe.form_dict.id_order_drw\nqty_order = frappe.form_dict.qty_order\ntotal_order = frappe.form_dict.total_order\nnama_order = frappe.form_dict.nama_order\nlevel_order = frappe.form_dict.level_order\n\ndoc = frappe.get_doc(\"Event Sheila\",{\"id_drw\": id_drw})\n\ndoc.id_order_drw = id_order_drw\ndoc.qty_order = qty_order\ndoc.total_order = total_order\ndoc.nama_order = nama_order\ndoc.level_order = level_order\n\ntry:\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Create Event\", message=None)\n    frappe.throw(\"Error\")\n\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v2.add.to.cart.paket.old",
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-10 10:15:59.825013",
  "name": "New Apps - Add to Cart Paket",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "json_param = frappe.request.data\ndata = json.loads(json_param)\n\npaket = data['item_paket']\npaket['parentfield'] = \"item_paket\"\npaket['parenttype'] = \"Sales Order\"\npaket['doctype'] = \"Sales Order Item Paket\"\npaket['amount'] = int(paket['price_list_rate']) * int(paket['qty'])\ndocpaket = frappe.get_doc(paket)\ndocpaket.save(ignore_permissions=True)\n\nitems = data['items']\nitemlen = len(items)\nfor item in items:\n    item['parent'] = docpaket.parent\n    item['parentfield'] = \"items\"\n    item['parenttype'] = \"Sales Order\"\n    item['doctype'] = \"Sales Order Item\"\n    item['id_item_paket'] = docpaket.name\n    item['item_paket'] = docpaket.item_paket\n    item['qty'] = docpaket.qty\n    item['price_list_rate'] = int(docpaket.price_list_rate)/itemlen\n    item['conversion_factor'] = 1\n    docitem = frappe.get_doc(item)\n    docitem.save(ignore_permissions=True)\n\ntry:\n    doc = frappe.get_doc(\"Sales Order\", docpaket.parent)\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Add Cart Paket\", message=None)\n    frappe.throw(\"Error\")\n\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.update.cart.paket.qty",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:02:22.205692",
  "name": "New Apps - Update Cart Paket Qty",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "so = frappe.form_dict.so\npaket_id = frappe.form_dict.paket_id\nqty = frappe.form_dict.qty\n\ndocpaket = frappe.get_doc(\"Sales Order Item Paket\",{\"parent\": so, \"name\": paket_id})\ndocpaket.qty = qty\ndocpaket.amount = int(docpaket.price_list_rate) * int(docpaket.qty)\ndocpaket.save(ignore_permissions=True)\n\nitems = frappe.db.get_all(\"Sales Order Item\",{\"parent\": so, \"id_item_paket\": paket_id}, \"name\")\nitemlen = len(items)\nfor item in items:\n    docitem = frappe.get_doc(\"Sales Order Item\", item)\n    docitem.qty = qty\n    docitem.save(ignore_permissions=True)\n\ntry:\n    doc = frappe.get_doc(\"Sales Order\", so)\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Update Qty Cart Paket\", message=None)\n    frappe.throw(\"Error\")\n\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.lupa.password",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-11-22 11:03:22.687780",
  "name": "New Apps - Lupa Password",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "user_id = frappe.form_dict.user_id\n\ncust = frappe.db.get_value(\"Customer\", {\"id_drw\": user_id})\n\ndoc = \"\"\nif cust is not None:\n    doc = frappe.get_doc(\"Customer\", cust)\n\nfrappe.response['data'] = doc",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.delete.paket.cart",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-17 16:34:26.357869",
  "name": "New Apps - Delete Paket Cart",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\nparent = frappe.form_dict.parent\n\nif name is None: \n    doc = \"Nama paket tidak ditemukan\"\n    frappe.response['data'] = name\nelse:\n    docs = frappe.get_doc(\"Sales Order\",parent)\n    itemlen = len(docs.items)\n    paketlen = len(docs.item_paket)\n    getpaket = frappe.db.get_value(\"Sales Order Item Paket\",{\"parent\": parent, \"name\": name})\n    if getpaket is not None:\n        docpaket = frappe.get_doc(\"Sales Order Item Paket\",{\"parent\": parent, \"name\": name})\n        try:\n            docpaket.delete(ignore_permissions=True)\n        except:\n            frappe.log_error(title=\"Error Delete Paket Cart\", message=None)\n    items = frappe.db.get_all(\"Sales Order Item\",{\"parent\": parent, \"id_item_paket\": name}, \"name\")\n    itempaketlen = len(items)\n    if itemlen > itempaketlen:\n        for item in items:\n            docitem = frappe.get_doc(\"Sales Order Item\", item)\n            try:\n                docitem.delete(ignore_permissions=True)\n            except:\n                frappe.log_error(title=\"Error Delete Item Cart\", message=None)\n        try:\n            docs.save(ignore_permissions=True)\n            frappe.response['data'] = docs\n        except:\n            frappe.log_error(title=\"Error Save after delete Paket Cart\", message=None)\n    else:\n        docs.delete(ignore_permissions=True)\n        frappe.response['data'] = docs",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.add.proof.payment.ongkir",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:02:13.317978",
  "name": "New Apps - Add Proof Payment Ongkir",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "ongkir_id = frappe.form_dict.ongkir_id\n\ndata = {}\ndata['ongkir_id'] = ongkir_id\ndata['doctype'] = \"Data Ongkir Proof Payment\"\ndoc = frappe.get_doc(data)\n\ntry:\n    doc.insert(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Create Ongkir Proof Payment\", message=None)\n    frappe.throw(\"Error\")",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.get.proof.payment.ongkir",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:02:06.338375",
  "name": "New Apps - Get Proof Payment Ongkir",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "ongkir_id = frappe.form_dict.ongkir_id\n\ndata = frappe.get_all(\"Data Ongkir Proof Payment\", filters=[[\"ongkir_id\", \"=\", ongkir_id],[\"image\",\"is\",\"set\"]], fields=[\"name\",\"ongkir_id\",\"image\"], order_by=\"modified asc\")\n\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.update.proof.payment.ongkir",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:01:59.003022",
  "name": "New Apps - Update Proof Payment Ongkir",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\nfile_url = frappe.form_dict.file_url\n\ndoc = frappe.get_doc(\"Data Ongkir Proof Payment\", name)\ndoc.image = file_url\n\ntry:\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Create Ongkir Proof Payment\", message=None)\n    frappe.throw(\"Error\")",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.get.proof.payment.kasbon",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:01:51.358726",
  "name": "New Apps - Get Proof Payment Kasbon",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "kasbon_id = frappe.form_dict.kasbon_id\n\ndata = frappe.get_all(\"Data Kasbon Proof Payment\", filters=[[\"kasbon_id\", \"=\", kasbon_id],[\"image\",\"is\",\"set\"]], fields=[\"name\",\"kasbon_id\",\"image\"], order_by=\"modified asc\")\n\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.add.proof.payment.kasbon",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:01:42.906599",
  "name": "New Apps - Add Proof Payment Kasbon",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "kasbon_id = frappe.form_dict.kasbon_id\n\ndata = {}\ndata['kasbon_id'] = kasbon_id\ndata['doctype'] = \"Data Kasbon Proof Payment\"\ndoc = frappe.get_doc(data)\n\ntry:\n    doc.insert(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Create Kasbon Proof Payment\", message=None)\n    frappe.throw(\"Error\")",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.update.proof.payment.kasbon",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:22:28.153970",
  "name": "New Apps - Update Proof Payment Kasbon",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\nfile_url = frappe.form_dict.file_url\n\ndoc = frappe.get_doc(\"Data Kasbon Proof Payment\", name)\ndoc.image = file_url\n\ntry:\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Update Proof Payment Kasbon\", message=None)\n    frappe.throw(\"Error\")",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.reset.password",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-11-22 10:32:37.396890",
  "name": "New Apps - Reset Password",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\nnew_password = frappe.form_dict.new_password\n\nget_cust = frappe.db.get_value(\"Customer\", customer)\n\nif get_cust is not None:\n    doc = frappe.get_doc(\"Customer\", get_cust)\n    try:\n        doc.passkey = new_password\n        doc.save(ignore_permissions=True)\n        status = \"Success\"\n        description = \"Reset v3: Success\"\n        frappe.log_error(title=description, message=doc)\n    except:\n        doc.passkey = new_password\n        doc.save(ignore_permissions=True)\n        status = \"Failed\"\n        description = \"Reset v3: Failed\"\n        frappe.log_error(title=description, message=doc)\n\nfrappe.response['status'] = status\nfrappe.response['description'] = description\nfrappe.response['data'] = doc\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.add.to.cart.paket",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 10:46:47.321769",
  "name": "New Apps - Add to Cart Paket New",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "json_param = frappe.request.data\ndata = json.loads(json_param)\n\nif data.get('doctype') is not None:\n    paket = data['item_paket'][0]\n    paket['amount'] = int(paket['price_list_rate']) * int(paket['qty'])\n    \n    items = data['items']\n    itemlen = len(items)\n    for item in items:\n        item['item_paket'] = paket['item_paket']\n        item['qty'] = paket['qty']\n        item['price_list_rate'] = int(paket['price_list_rate'])/itemlen\n        item['conversion_factor'] = 1\n        \n    doc = frappe.get_doc(data)\n    try:\n        doc.insert(ignore_permissions=True)\n        for item in doc.items:\n            frappe.db.set_value(\"Sales Order Item\",item.name,{\n                \"id_item_paket\": doc.item_paket[0].name\n            })\n        doc = frappe.get_doc(\"Sales Order\",doc.name)\n        doc.save(ignore_permissions=True)\n        frappe.response['data'] = doc\n    except:\n        frappe.log_error(title=\"Error Add Cart Paket\", message=None)\n        frappe.throw(\"Error\")\n    \nelse:\n    paket = data['item_paket']\n    paket['parentfield'] = \"item_paket\"\n    paket['parenttype'] = \"Sales Order\"\n    paket['doctype'] = \"Sales Order Item Paket\"\n    paket['amount'] = int(paket['price_list_rate']) * int(paket['qty'])\n    docpaket = frappe.get_doc(paket)\n    docpaket.save(ignore_permissions=True)\n\n    items = data['items']\n    itemlen = len(items)\n    for item in items:\n        item['parent'] = docpaket.parent\n        item['parentfield'] = \"items\"\n        item['parenttype'] = \"Sales Order\"\n        item['doctype'] = \"Sales Order Item\"\n        item['id_item_paket'] = docpaket.name\n        item['item_paket'] = docpaket.item_paket\n        item['qty'] = docpaket.qty\n        item['price_list_rate'] = int(docpaket.price_list_rate)/itemlen\n        item['conversion_factor'] = 1\n        docitem = frappe.get_doc(item)\n        docitem.save(ignore_permissions=True)\n\n    try:\n        doc = frappe.get_doc(\"Sales Order\", docpaket.parent)\n        doc.save(ignore_permissions=True)\n        frappe.response['data'] = doc\n    except:\n        frappe.log_error(title=\"Error Add Cart Paket\", message=None)\n        frappe.throw(\"Error\")\n\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "event_frequency": "All",
  "modified": "2024-12-27 14:56:43.404522",
  "name": "New Apps - Payment Submit",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Payment Entry",
  "script": "if doc.references[0].reference_doctype==\"Sales Invoice\" and doc.references[0].reference_name != None and doc.references[0].reference_name != \"\":\n    si = doc.references[0].reference_name\n    docsi = frappe.get_doc(\"Sales Invoice\", si)\n    so = docsi.items[0].sales_order\n    frappe.db.set_value(\"Sales Order\", so, {\n        \"application_status\": \"Dikemas\",\n        \"waktu_pembayaran\": frappe.utils.now()\n    })\n    \n    docso = frappe.get_doc(\"Sales Order\", so)\n    cust = docso.customer\n    doccust = frappe.get_doc(\"Customer\", cust)\n    if docso.get(\"klaim_kasbon\") is not None:\n        if docso.klaim_kasbon > 0:\n            klaimkasbon = docso.klaim_kasbon\n            frappe.db.set_value(\"Customer\", cust, {\n                \"klaim_kasbon\": klaimkasbon\n            })",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.sales.order.submit",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-12 10:13:14.366847",
  "name": "New Apps - Sales Order Submit with Calculate",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\ndoc = frappe.get_doc(\"Sales Order\", name)\n\ngrand_total = doc.total\nif doc.coin_type == \"Cashback\": grand_total = doc.grand_total\n\naturan_cashback = frappe.get_all(\"Aturan Cashback\", pluck=\"name\", filters=[[\"company\", \"=\", \"PT. DRW Estetika Indonesia\"], [\"valid_from\", \"<=\", frappe.utils.today()]], order_by=\"valid_from desc\")\ncashback = 0\n\nif len(aturan_cashback) > 0:\n    doccashback = frappe.get_doc(\"Aturan Cashback\", aturan_cashback[0])\n    percentage = 0\n    min_cashback = 0\n    for aturan in doccashback.details:\n        if min_cashback == 0:\n            min_cashback = aturan.from_total\n        if grand_total >= aturan.from_total and grand_total < aturan.to_total:\n            percentage = aturan.percentage\n    cashback = grand_total * percentage / 100000\n    if percentage == 0 and min_cashback > 0:\n        cashback = 0\n\ncust_group = doc.customer_group\nbagi_point = 0\nif cust_group == \"Director\": bagi_point = 10000\nif cust_group == \"Manager\": bagi_point = 12500\nif cust_group == \"Supervisor\": bagi_point = 15000\nif cust_group == \"Consultant\": bagi_point = 17500\nget_point = 0\nif bagi_point > 0: get_point = int(grand_total)/bagi_point\n\nif doc.drop_center is None or doc.drop_center == \"\":\n    doc.drop_center = \"DC Purworejo\"\nif doc.shipping_address is None or doc.shipping_address == \"\":\n    frappe.throw(\"Error\")\nif doc.ekspedisi is None or doc.ekspedisi == \"\":\n    frappe.throw(\"Error\")\n    \ntry:\n    doc.get_cashback = int(cashback)\n    doc.get_point = int(get_point)\n    doc.application_status = \"Menunggu Detail Bayar\"\n    doc.checkout_date = frappe.utils.today()\n    doc.waktu_pemesanan = frappe.utils.now()\n    doc.docstatus = 1\n    doc.save(ignore_permissions=True)\n    frappe.db.set_value(\"Customer\", doc.customer, {\n        \"default_sales_partner\": \"\"\n    })\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(None, \"Submit Order\")\n    frappe.throw(\"Error\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.get.user.byrole",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-11 21:57:20.446552",
  "name": "Super Apps - Get User By Role",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "role = frappe.form_dict.role\n\nuserlist = frappe.db.get_all(\"User\", {\"role_profile_name\":role, \"enabled\": 1})\n\nfrappe.response['data'] = userlist",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.printed",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-12 01:17:11.995905",
  "name": "Super Apps - Get List Printed",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "admin = frappe.form_dict.admin\n\nif admin is None:\n    doc = frappe.db.get_all(\"Sales Order\", filters=[[\"printed_count\",\">\",0],[\"docstatus\",\">\",0]], fields=[\"*\"])\nelse:\n    doc = frappe.db.get_all(\"Sales Order\", filters=[[\"printed_count\",\">\",0],[\"docstatus\",\">\",0],[\"admin_order\",\"=\",admin]], fields=[\"*\"])\n\nfrappe.response['data'] = doc",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.update.printed",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-11 22:39:30.830509",
  "name": "Super Apps - Update Printed",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "so = frappe.form_dict.so\n\ncount = frappe.db.get_value(\"Sales Order\", so, \"printed_count\")\ncount = int(count) + 1\nnow = frappe.utils.now()\n\nfrappe.db.set_value(\"Sales Order\", so, {\n        \"printed_count\": count,\n        \"printed_time\": now\n    })\n\nfrappe.response['data'] = {\n    \"sales_order\": so,\n    \"printed_count\": count,\n    \"printed_time\": now\n}",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.list.history.order",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-24 09:22:28.523193",
  "name": "New Apps - List History Order 1x24 jam",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\r\nstatus = frappe.form_dict.status\r\ntujuan = frappe.form_dict.tujuan\r\nlimit = frappe.form_dict.limit\r\nstart = frappe.form_dict.start\r\n\r\nif limit is None: limit = 20\r\nif start is None: start = 0\r\n\r\nfields = [\"name\",\"transaction_date\",\"docstatus\",\"customer\",\"customer_name\",\"customer_group\",\"application_status\",\"total_qty\",\"total\",\"total_taxes_and_charges\",\"additional_discount_percentage\",\"discount_amount\",\"loyalty_points\",\"loyalty_amount\",\"grand_total\",\"coin_type\",\"total_coin\",\"total_coin_amount\",\"waktu_pemesanan\",\"waktu_pembayaran\",\"waktu_pengiriman\",\"pesanan_selesai\",\"pesanan_selesai_pada\",\"nama_kurir\",\"no_resi\",\"payment_method\",\"dropshipper\",\"dibatalkan_pada\",\"ekspedisi\",\"nama_ekspedisi\",\"drop_center\",\"upline\",\"contact_display\",\"contact_mobile\",\"shipping_address_name\",\"shipping_address\"]\r\n\r\nif status is not None: filters = [[\"application_status\",\"=\",status],[\"customer\",\"=\",customer], [\"docstatus\",\">\",0]]\r\nif tujuan is not None:\r\n    if tujuan == \"Downline\": filters = [[\"upline\",\"=\",customer], [\"docstatus\",\">\",0]]\r\n    elif tujuan == \"Upline\": filters = [[\"drop_center\",\"like\",\"Upline\"],[\"customer\",\"=\",customer], [\"docstatus\",\">\",0]]\r\n    else: filters = [[\"drop_center\",\"like\",\"DC%\"],[\"customer\",\"=\",customer], [\"docstatus\",\">\",0]]\r\n\r\ndoc = frappe.db.get_all(\"Sales Order\", fields=fields, filters=filters, limit_start=start, limit_page_length=limit, order_by=\"modified desc\")\r\n\r\ndata = []\r\nfor docs in doc:\r\n    doc_si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": docs.name},\"parent\")\r\n    proofid = frappe.db.get_value(\"Sales Invoice Proof of Payment\", {\"sales_invoice\": doc_si}, \"name\")\r\n    proof = \"Belum Upload\"\r\n    if proofid is not None:\r\n        proof = \"Sudah Upload\"\r\n    if doc_si is not None:\r\n        detail = frappe.get_doc(\"Sales Order\",docs.name)\r\n        detail_si = frappe.get_doc(\"Sales Invoice\", doc_si)\r\n        limit_waktu = frappe.utils.get_datetime(frappe.utils.now())-detail.modified\r\n        is_expired = 0\r\n        if limit_waktu>frappe.utils.get_timedelta(\"23:59:0\") and docs.application_status == \"Belum Bayar\": is_expired = 1\r\n        if is_expired == 0:\r\n            data.append({\r\n                \"modified\": detail.modified,\r\n                \"checkout_date\": detail.checkout_date,\r\n                \"remaining_time\": limit_waktu,\r\n                \"is_expired\": is_expired,\r\n                \"proofid\": proofid,\r\n                \"proof\": proof,\r\n                \"name\": docs.name,\r\n                \"transaction_date\": docs.transaction_date,\r\n                \"docstatus\": docs.docstatus,\r\n                \"customer\": docs.customer,\r\n                \"customer_name\": docs.customer_name,\r\n                \"customer_group\": docs.customer_group,\r\n                \"application_status\": docs.application_status,\r\n                \"total_qty\": docs.total_qty,\r\n                \"total\": docs.total,\r\n                \"total_taxes_and_charges\": docs.total_taxes_and_charges,\r\n                \"additional_discount_percentage\": docs.additional_discount_percentage,\r\n                \"discount_amount\": docs.discount_amount,\r\n                \"loyalty_points\": docs.loyalty_points,\r\n                \"loyalty_amount\": docs.loyalty_amount,\r\n                \"grand_total\": docs.grand_total,\r\n                \"coin_type\": docs.coin_type,\r\n                \"total_coin\": docs.total_coin,\r\n                \"total_coin_amount\": docs.total_coin_amount,\r\n                \"waktu_pemesanan\": docs.waktu_pemesanan,\r\n                \"waktu_pembayaran\": docs.waktu_pembayaran,\r\n                \"waktu_pengiriman\": docs.waktu_pengiriman,\r\n                \"pesanan_selesai\": docs.pesanan_selesai,\r\n                \"pesanan_selesai_pada\": docs.pesanan_selesai_pada,\r\n                \"nama_kurir\": docs.nama_kurir,\r\n                \"no_resi\": docs.no_resi,\r\n                \"payment_method\": docs.payment_method,\r\n                \"dropshipper\": docs.dropshipper,\r\n                \"dibatalkan_pada\": docs.dibatalkan_pada,\r\n                \"ekspedisi\": docs.ekspedisi,\r\n                \"nama_ekspedisi\": docs.nama_ekspedisi,\r\n                \"drop_center\": docs.drop_center,\r\n                \"upline\": docs.upline,\r\n                \"contact_display\": docs.contact_display,\r\n                \"contact_mobile\": docs.contact_mobile,\r\n                \"shipping_address_name\": docs.shipping_address_name,\r\n                \"shipping_address\": docs.shipping_address,\r\n                \"klaim_kasbon\": docs.klaim_kasbon,\r\n                \"total_item\": len(detail.items),\r\n                \"items\": detail.items,\r\n                \"item_paket\": detail.item_paket,\r\n                \"si\": detail_si\r\n            })\r\n\r\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.dashboard.admin",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-15 06:30:49.819710",
  "name": "Super Apps - Get Dashboard Admin by Role Admin",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "admin = frappe.form_dict.admin\n\ndaily = \"Today\"\nthisweek = \"This Week\"\nthismonth = \"This Month\"\nthisyear = \"This Year\"\n\nif admin is not None:\n    get_order_daily = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"transaction_date\",\"timespan\",daily.lower()],[\"docstatus\", \"=\", 1],[\"customer_group\",\"=\",\"Director\"],[\"admin_order\",\"=\",admin]])\n    count_order_daily = len(get_order_daily)\n    sum_order_daily = 0\n    if count_order_daily>0:\n        sum_order_daily = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Order` where name in %(names)s\", {\"names\": get_order_daily})[0][0]\n\n    get_order_thisweek = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"transaction_date\",\"timespan\",thisweek.lower()],[\"docstatus\", \"=\", 1],[\"customer_group\",\"=\",\"Director\"],[\"admin_order\",\"=\",admin]])\n    count_order_thisweek = len(get_order_thisweek)\n    sum_order_thisweek = 0\n    if count_order_thisweek>0:\n        sum_order_thisweek = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Order` where name in %(names)s\", {\"names\": get_order_thisweek})[0][0]\n\n    get_order_thismonth = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"transaction_date\",\"timespan\",thismonth.lower()],[\"docstatus\", \"=\", 1],[\"customer_group\",\"=\",\"Director\"],[\"admin_order\",\"=\",admin]])\n    count_order_thismonth = len(get_order_thismonth)\n    sum_order_thismonth = 0\n    if count_order_thismonth>0:\n        sum_order_thismonth = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Order` where name in %(names)s\", {\"names\": get_order_thismonth})[0][0]\n\n    get_order_thisyear = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"transaction_date\",\"timespan\",thisyear.lower()],[\"docstatus\", \"=\", 1],[\"customer_group\",\"=\",\"Director\"],[\"admin_order\",\"=\",admin]])\n    count_order_thisyear = len(get_order_thisyear)\n    sum_order_thisyear = 0\n    if count_order_thisyear>0:\n        sum_order_thisyear = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Order` where name in %(names)s\", {\"names\": get_order_thisyear})[0][0]\n\n    get_menunggu_detail = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"docstatus\", \"=\", 1],[\"application_status\",\"=\",\"Menunggu Detail Bayar\"],[\"transaction_date\",\"timespan\",thisyear.lower()],[\"admin_order\",\"=\",admin]])\n    count_menunggu_detail = len(get_menunggu_detail)\n    get_belum_bayar = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"docstatus\", \"=\", 1],[\"application_status\",\"=\",\"Belum Bayar\"],[\"transaction_date\",\"timespan\",thisyear.lower()],[\"admin_order\",\"=\",admin]])\n    count_belum_bayar = len(get_belum_bayar)\n    get_dikemas = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"docstatus\", \"=\", 1],[\"application_status\",\"=\",\"Dikemas\"],[\"transaction_date\",\"timespan\",thisyear.lower()],[\"admin_order\",\"=\",admin]])\n    count_dikemas = len(get_dikemas)\n    get_dikirim = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"docstatus\", \"=\", 1],[\"application_status\",\"=\",\"Dikirim\"],[\"transaction_date\",\"timespan\",thisyear.lower()],[\"admin_order\",\"=\",admin]])\n    count_dikirim = len(get_dikirim)\n    get_dibatalkan = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"docstatus\", \"=\", 1],[\"application_status\",\"=\",\"Dibatalkan\"],[\"transaction_date\",\"timespan\",thisyear.lower()],[\"admin_order\",\"=\",admin]])\n    count_dibatalkan = len(get_dibatalkan)\n    get_selesai = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"docstatus\", \"=\", 1],[\"application_status\",\"=\",\"Selesai\"],[\"transaction_date\",\"timespan\",thisyear.lower()],[\"admin_order\",\"=\",admin]])\n    count_selesai = len(get_selesai)\n    \nelse:\n    get_order_daily = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",daily.lower()],[\"docstatus\", \"=\", 1],[\"customer_group\",\"=\",\"Director\"]])\n    count_order_daily = len(get_order_daily)\n    sum_order_daily = 0\n    if count_order_daily>0:\n        sum_order_daily = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": get_order_daily})[0][0]\n\n    get_order_thisweek = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",thisweek.lower()],[\"docstatus\", \"=\", 1],[\"customer_group\",\"=\",\"Director\"]])\n    count_order_thisweek = len(get_order_thisweek)\n    sum_order_thisweek = 0\n    if count_order_thisweek>0:\n        sum_order_thisweek = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": get_order_thisweek})[0][0]\n\n    get_order_thismonth = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",thismonth.lower()],[\"docstatus\", \"=\", 1],[\"customer_group\",\"=\",\"Director\"]])\n    count_order_thismonth = len(get_order_thismonth)\n    sum_order_thismonth = 0\n    if count_order_thismonth>0:\n        sum_order_thismonth = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": get_order_thismonth})[0][0]\n\n    get_order_thisyear = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",thisyear.lower()],[\"docstatus\", \"=\", 1],[\"customer_group\",\"=\",\"Director\"]])\n    count_order_thisyear = len(get_order_thisyear)\n    sum_order_thisyear = 0\n    if count_order_thisyear>0:\n        sum_order_thisyear = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": get_order_thisyear})[0][0]\n\n    get_menunggu_detail = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"docstatus\", \"=\", 1],[\"application_status\",\"=\",\"Menunggu Detail Bayar\"],[\"transaction_date\",\"timespan\",thisyear.lower()]])\n    count_menunggu_detail = len(get_menunggu_detail)\n    get_belum_bayar = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"docstatus\", \"=\", 1],[\"application_status\",\"=\",\"Belum Bayar\"],[\"transaction_date\",\"timespan\",thisyear.lower()]])\n    count_belum_bayar = len(get_belum_bayar)\n    get_dikemas = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"docstatus\", \"=\", 1],[\"application_status\",\"=\",\"Dikemas\"],[\"transaction_date\",\"timespan\",thisyear.lower()]])\n    count_dikemas = len(get_dikemas)\n    get_dikirim = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"docstatus\", \"=\", 1],[\"application_status\",\"=\",\"Dikirim\"],[\"transaction_date\",\"timespan\",thisyear.lower()]])\n    count_dikirim = len(get_dikirim)\n    get_dibatalkan = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"docstatus\", \"=\", 1],[\"application_status\",\"=\",\"Dibatalkan\"],[\"transaction_date\",\"timespan\",thisyear.lower()]])\n    count_dibatalkan = len(get_dibatalkan)\n    get_selesai = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"docstatus\", \"=\", 1],[\"application_status\",\"=\",\"Selesai\"],[\"transaction_date\",\"timespan\",thisyear.lower()]])\n    count_selesai = len(get_selesai)\n\nget_director = frappe.get_all(\"Customer\", pluck=\"name\",filters=[[\"customer_group\",\"=\",\"Director\"]])\ncount_director = len(get_director)\nget_manager = frappe.get_all(\"Customer\", pluck=\"name\",filters=[[\"customer_group\",\"=\",\"Manager\"]])\ncount_manager = len(get_manager)\nget_supervisor = frappe.get_all(\"Customer\", pluck=\"name\",filters=[[\"customer_group\",\"=\",\"Supervisor\"]])\ncount_supervisor = len(get_supervisor)\nget_consultant = frappe.get_all(\"Customer\", pluck=\"name\",filters=[[\"customer_group\",\"=\",\"Consultant\"]])\ncount_consultant = len(get_consultant)\n\ngrafik = {}\ntoday = frappe.utils.today()\nstart_year = str(int(today[0:4])-1)\nstart_date = start_year+'-1-1'\nstart_date = frappe.utils.getdate(start_date)\nsum_order_bymonth = frappe.db.sql(\"select month(posting_date) as month, DATE_FORMAT(posting_date, '%%M') as month_label, sum(if(year(posting_date)=2023,ifnull(grand_total,0),0)) as prev_year,sum(if(year(posting_date)=2024,ifnull(grand_total,0),0)) as current_year from `tabSales Invoice` where posting_date >= %(start_date)s and docstatus = 1 group by month order by month asc\",{\n    \"start_date\": start_date,\n},as_dict=True)\ngrafik = sum_order_bymonth\n\nfrappe.response['data'] = {\n    \"total_order_harian\": sum_order_daily,\n    \"count_order_harian\": count_order_daily,\n    \"total_order_mingguan\": sum_order_thisweek,\n    \"count_order_mingguan\": count_order_thisweek,\n    \"total_order_bulanan\": sum_order_thismonth,\n    \"count_order_bulanan\": count_order_thismonth,\n    \"total_order_tahunan\": sum_order_thisyear,\n    \"count_order_tahunan\": count_order_thisyear,\n    \"count_menunggu_detail\": count_menunggu_detail,\n    \"count_belum_bayar\": count_belum_bayar,\n    \"count_dikemas\":  count_dikemas,\n    \"count_dikirim\": count_dikirim,\n    \"count_dibatalkan\": count_dibatalkan,\n    \"count_selesai\": count_selesai,\n    \"count_director\": count_director,\n    \"count_manager\": count_manager,\n    \"count_supervisor\": count_supervisor,\n    \"count_consultant\": count_consultant,\n    \"grafik\": grafik\n}\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.withdraw.coin",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-11-30 06:32:10.797272",
  "name": "New Apps - Withdraw Coin",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\r\nlimit = frappe.form_dict.limit\r\nstart = frappe.form_dict.start\r\nfields = frappe.form_dict.fields\r\nfilters = frappe.form_dict.filters\r\nname = frappe.form_dict.name\r\ndata = []\r\n\r\nif limit is None: limit = 20\r\nif start is None: start = 0 \r\nif fields is None: fields = [\"*\"]\r\nif filters is None: filters = []\r\nif customer is not None: filters = [[\"customer\",\"=\",customer]]\r\nif name is not None:\r\n    doc = frappe.get_doc(\"Withdraw Coins\", name)\r\n    customer = doc.customer\r\n    fields = [\"name\", \"customer\",\"nama_agent\",\"posting_date\",\"sales_order\",\"kelipatan\",\"total_margin\",\"total_coin\"]\r\n    filters = [[\"is_cashback\",\"=\",0],[\"customer\",\"=\",customer]]\r\n    doccoin = frappe.get_all(\"Agent Coin Log\", fields=fields, filters=filters, order_by=\"modified desc\")\r\n    len_coin = 0\r\n    sum_coin = 0\r\n    for docs in doccoin:\r\n        customer_name = frappe.db.get_value(\"Sales Order\",docs.sales_order,\"customer_name\")\r\n        si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": docs.sales_order}, \"parent\")\r\n        if si is not None:\r\n            sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n            sistatus = frappe.db.get_value(\"Sales Invoice\", si, \"status\")\r\n            bank = frappe.db.get_value(\"Sales Invoice Metode Pembayaran\", {\"parent\": si}, \"nama_bank\")\r\n            docsi = frappe.get_doc(\"Sales Invoice\", si)\r\n            if bank is not None and sistat>0:\r\n                len_coin = len_coin + 1\r\n                sum_coin = sum_coin + docs.total_coin\r\n                data.append({\r\n                    \"name\": docs.name,\r\n                    \"customer\": docs.customer,\r\n                    \"nama_agent\": docs.nama_agent,\r\n                    \"posting_date\": docs.posting_date,\r\n                    \"sales_order\": docs.sales_order,\r\n                    \"sales_order_name\": customer_name,\r\n                    \"kelipatan\": docs.kelipatan,\r\n                    \"total_margin\": docs.total_margin,\r\n                    \"total_coin\": docs.total_coin,\r\n                    \"status\": sistatus,\r\n                    \"bank\": bank\r\n                })\r\nelse:\r\n    doc = frappe.db.get_all(\"Withdraw Coins\", fields=fields, filters=filters, limit_start=start, limit_page_length=limit, order_by=\"posting_date desc\")\r\n\r\nfrappe.response['data'] = doc\r\nfrappe.response['datarek'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.add.withdraw.coin",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:01:05.591785",
  "name": "New Apps - Add Withdraw Coin",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "json_param = frappe.request.data\ndata = json.loads(json_param)\n\nif data.get('name') is None:\n    customer = data['customer']\n    coin_before = frappe.db.get_value(\"Customer\",customer,\"total_coins\")\n    data['coin_before'] = int(coin_before)\n    data['coin_balance'] = int(coin_before)-int(data['total_withdraw'])\n    data['total_amount'] = int(data['total_withdraw'])*1000\n    data['biaya_pajak'] = int(data['total_amount'])*5/100\n    data['biaya_penanganan'] = 0\n    data['grand_total'] = int(data['total_amount'])-int(data['biaya_pajak'])-int(data['biaya_penanganan'])\n    data['doctype'] = \"Withdraw Coins\"\n    doc = frappe.get_doc(data)\n    try:\n        doc.insert(ignore_permissions=True)\n        frappe.db.set_value(\"Customer\",customer,{\n            \"total_coins\": doc.coin_balance\n        })\n        frappe.response['data'] = doc\n    except:\n        frappe.log_error(title=\"Error Withdraw Coin\", message=None)\n        frappe.throw(\"Error\")\nelse:\n    doc = frappe.get_doc(\"Withdraw Coins\", data['name'])\n    doc.update(data)\n    try:\n        doc.save(ignore_permissions=True)\n        frappe.db.set_value(\"Customer\",customer,{\n            \"total_coins\": doc.coin_balance\n        })\n        frappe.response['data'] = doc\n    except:\n        frappe.log_error(title=\"Error Withdraw Coin\", message=None)\n        frappe.throw(\"Error\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.submit.withdraw.coin",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:01:13.256766",
  "name": "New Apps - Submit Withdraw Coin",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n\ndoc = frappe.get_doc(\"Withdraw Coins\", name)\n\ntry:        \n    doc.docstatus = 1\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Withdraw Coin\", message=None)\n    frappe.throw(\"Error\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.del.withdraw.coin",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:00:56.240034",
  "name": "New Apps - Del Withdraw Coin",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n\ndoc = frappe.get_doc(\"Withdraw Coins\", name)\ncustomer = doc.customer\ncoin_before = doc.coin_before\n\ntry:        \n    doc.delete(ignore_permissions=True)\n    frappe.db.set_value(\"Customer\",customer,{\n        \"total_coins\": doc.coin_before\n    })\n    frappe.response['data'] = \"Deleted\"\nexcept:\n    frappe.log_error(title=\"Error Delete Withdraw Coin\", message=None)\n    frappe.throw(\"Error\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.sales.invoice.rekening.delete",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-17 22:26:15.526371",
  "name": "Super Apps - Sales Invoice Rekening Delete",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "si = frappe.form_dict.si\n\ndocs = frappe.db.get_all(\"Sales Invoice Metode Pembayaran\", {\"parent\": si})\n\nif len(docs)>0:\n    for doc in docs:\n        docrek = frappe.get_doc(\"Sales Invoice Metode Pembayaran\", doc)\n        try:\n            docrek.delete(ignore_permissions=True)\n            frappe.response['data'] = \"Deleted\"\n        except:\n            frappe.log_error(title=\"Error Delete Rekening\", message=None)\n            frappe.throw(\"Error\")\nelse:\n    frappe.response['data'] = \"Not found\"",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "event_frequency": "All",
  "modified": "2024-09-18 17:14:45.165287",
  "name": "New Apps - Payment Save",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Payment Entry",
  "script": "if doc.references[0].reference_name != None and doc.references[0].reference_name != \"\":\n    si = doc.references[0].reference_name\n    docsi = frappe.get_doc(\"Sales Invoice\", si)\n    so = docsi.items[0].sales_order\n    frappe.db.set_value(\"Sales Order\", so, {\n        \"application_status\": \"Dikemas\",\n        \"waktu_pembayaran\": frappe.utils.now()\n    })\n    \n    docso = frappe.get_doc(\"Sales Order\", so)\n    cust = docso.customer\n    doccust = frappe.get_doc(\"Customer\", cust)\n    if docso.get(\"coin_type\") is not None:\n        if docso.coin_type == \"Cashback\" and docso.total_coin > 0:\n            sisacoin = int(doccust.total_coin_cashback)-int(docso.total_coin)\n            frappe.db.set_value(\"Customer\", cust, {\n                \"total_coin_cashback\": sisacoin\n            })\n        else:\n            sisacoin = int(doccust.total_coins)-int(docso.total_coin)\n            frappe.db.set_value(\"Customer\", cust, {\n                \"total_coins\": sisacoin\n            })\n    if docso.get(\"get_point\") is not None:\n        if docso.get_point > 0:\n            totalpoint = int(doccust.total_point)+int(docso.get_point)\n            frappe.db.set_value(\"Customer\", cust, {\n                \"total_point\": totalpoint\n            })\n            frappe.call(\"api.v1.add.agent.point.log\",so=so)\n    if docso.get(\"get_cashback\") is not None:\n        if docso.get_cashback > 0:\n            totalcashback = int(doccust.total_coin_cashback)+int(docso.get_cashback)\n            frappe.db.set_value(\"Customer\", cust, {\n                \"total_coin_cashback\": totalcashback\n            })\n            frappe.call(\"api.v1.add.agent.cashback.log\",so=so,coin=totalcashback)",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.add.agent.point.log",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 10:59:21.218450",
  "name": "New Apps - Add Agent Point Log",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "so = frappe.form_dict.so\ncurpoint = int(frappe.form_dict.curpoint)\ngetpoint = int(frappe.form_dict.getpoint)\n\ndate = frappe.utils.today()\nyear = frappe.utils.today().split(\"-\")[0]\nlastyear = year+'-12-31'\n\ncust = frappe.db.get_value(\"Sales Order\", so, \"customer\")\ncust_group = frappe.db.get_value(\"Sales Order\", so, \"customer_group\")\nkelipatan = 0\nif cust_group == \"Director\": kelipatan = 10000\nif cust_group == \"Manager\": kelipatan = 12500\nif cust_group == \"Supervisor\": kelipatan = 15000\n\ntotalpoint = curpoint+getpoint\n\ndata = {}\ndata['doctype'] = \"Agent Point Log\"\ndata['sales_order'] = so\ndata['posting_date'] = date\ndata['expired_date'] = lastyear\ndata['kelipatan'] = kelipatan\ndata['before_point'] = curpoint\ndata['get_point'] = totalpoint\n\ntry:\n    doc = frappe.get_doc(data)\n    doc.insert(ignore_permissions=True)\n    frappe.db.set_value(\"Customer\", cust, {\n        \"total_point\": totalpoint\n    })\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Add Agent Point Log\", message=None)\n    frappe.throw(\"Error\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.add.agent.cashback.log",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 11:00:29.031927",
  "name": "New Apps - Agent Cashback Log",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "so = frappe.form_dict.so\ncoin = int(frappe.form_dict.coin)\n\ndate = frappe.utils.today()\nyear = frappe.utils.today().split(\"-\")[0]\nlastyear = year+'-12-31'\n\nkelipatan = 1000\n\ndata = {}\ndata['doctype'] = \"Agent Cashback Log\"\ndata['sales_order'] = so\ndata['posting_date'] = date\ndata['expired_date'] = lastyear\ndata['kelipatan'] = kelipatan\ndata['total_coin'] = coin\ndata['total_amount'] = coin*kelipatan\n\ntry:\n    doc = frappe.get_doc(data)\n    doc.insert(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Add Agent Cashback Log\", message=None)\n    frappe.throw(\"Error\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.list.history.cashback",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-27 15:32:14.919513",
  "name": "New Apps - List History Cashback New",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\r\nlimit = frappe.form_dict.limit\r\nstart = frappe.form_dict.start\r\n\r\nif limit is None: limit = 20\r\nif start is None: start = 0\r\n\r\nfields = [\"*\"]\r\nfilters = [[\"customer\",\"=\",customer]]\r\n\r\ncb_get = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"get_cashback\",\">\",0],[\"waktu_pembayaran\",\"is\",\"set\"],[\"application_status\",\"!=\",\"Dibatalkan\"],[\"customer\",\"=\",customer]])\r\ndata = []\r\nfor cbget in cb_get:\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": cbget.name}, \"parent\")\r\n    sistat = 0\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n        if sistat > 0:\r\n            data.append({\r\n                \"name\": cbget.name,\r\n                \"customer\": cbget.customer,\r\n                \"nama_agent\": cbget.customer_name,\r\n                \"posting_date\": cbget.waktu_pemesanan,\r\n                \"sales_order\": cbget.name,\r\n                \"sales_order_name\": cbget.customer_name,\r\n                \"coin_type\": cbget.coin_type,\r\n                \"total_coin\": cbget.get_cashback,\r\n                \"is_min\": 0\r\n            })\r\n\r\ncb_min = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"coin_type\",\"=\",\"Cashback\"],[\"total_coin\",\">\",0],[\"application_status\",\"!=\",\"Dibatalkan\"],[\"customer\",\"=\",customer]])\r\nfor cbmin in cb_min:\r\n    data.append({\r\n        \"name\": cbmin.name,\r\n        \"customer\": cbmin.customer,\r\n        \"nama_agent\": cbmin.customer_name,\r\n        \"posting_date\": cbmin.waktu_pemesanan,\r\n        \"sales_order\": cbmin.name,\r\n        \"sales_order_name\": cbmin.customer_name,\r\n        \"coin_type\": cbmin.coin_type,\r\n        \"total_coin\": cbmin.total_coin,\r\n        \"is_min\": 1\r\n    })\r\n\r\n\r\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.list.history.coins",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-28 06:36:51.625066",
  "name": "New Apps - List History Coins",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\r\ncashback = 0\r\nlimit = frappe.form_dict.limit\r\nstart = frappe.form_dict.start\r\n\r\nif limit is None: limit = 20\r\nif start is None: start = 0\r\n\r\ndoc_coin = frappe.get_all(\"Agent Coin Log\", fields=[\"*\"], filters=[[\"is_cashback\",\"=\",0],[\"customer\",\"=\",customer]])\r\nsum_coin = 0\r\nlen_coin = 0\r\ndata = []\r\nfor doccoin in doc_coin:\r\n    customer_name = frappe.db.get_value(\"Sales Order\",doccoin.sales_order,\"customer_name\")\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": doccoin.sales_order}, \"parent\")\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n        sistatus = frappe.db.get_value(\"Sales Invoice\", si, \"status\")\r\n        bank = frappe.db.get_value(\"Sales Invoice Metode Pembayaran\", {\"parent\": si}, \"nama_bank\")\r\n        docsi = frappe.get_doc(\"Sales Invoice\", si)\r\n        if bank is not None and sistat>0: \r\n            sum_coin = sum_coin + doccoin.total_coin\r\n            len_coin = len_coin + 1\r\n            data.append({\r\n                \"name\": doccoin.name,\r\n                \"customer\": doccoin.customer,\r\n                \"nama_agent\": doccoin.nama_agent,\r\n                \"posting_date\": doccoin.posting_date,\r\n                \"sales_order\": doccoin.sales_order,\r\n                \"sales_order_name\": customer_name,\r\n                \"kelipatan\": doccoin.kelipatan,\r\n                \"total_margin\": doccoin.total_margin,\r\n                \"total_coin\": doccoin.total_coin,\r\n                \"is_min\": 0\r\n            })\r\n\r\ncoin_min = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"coin_type\",\"=\",\"Non Cashback\"],[\"total_coin\",\">\",0],[\"application_status\",\"!=\",\"Dibatalkan\"],[\"customer\",\"=\",customer]])\r\nsum_coin_min = 0\r\nfor coinmin in coin_min:\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": coinmin.name}, \"parent\")\r\n    sistat = 0\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n        sum_coin_min = sum_coin_min + coinmin.total_coin\r\n        len_coin = len_coin + 1\r\n        data.append({\r\n            \"name\": coinmin.name,\r\n            \"customer\": coinmin.customer,\r\n            \"nama_agent\": coinmin.customer_name,\r\n            \"posting_date\": coinmin.waktu_pemesanan,\r\n            \"sales_order\": coinmin.name,\r\n            \"sales_order_name\": coinmin.customer_name,\r\n            \"total_coin\": coinmin.total_coin,\r\n            \"is_min\": 1\r\n        })\r\n\r\nwithdraw = frappe.get_all(\"Withdraw Coins\", fields=[\"*\"], filters=[[\"customer\",\"=\",customer]])\r\nsum_with = 0\r\nfor withd in withdraw:\r\n    sum_with = sum_with + withd.total_withdraw\r\n    len_coin = len_coin + 1\r\n    data.append({\r\n        \"name\": withd.name,\r\n        \"customer\": withd.customer,\r\n        \"nama_agent\": withd.customer_name,\r\n        \"posting_date\": withd.posting_date,\r\n        \"total_coin\": coinmin.total_withdraw,\r\n        \"is_min\": 1\r\n    })\r\n\r\nsum_coin_total = sum_coin - sum_coin_min - sum_with\r\ncoin_total = sum_coin_total\r\nif sum_coin_total < 0: coin_total = 0\r\n\r\nfrappe.response['info'] = {\r\n    \"sum_coin_get\": sum_coin,\r\n    \"sum_coin_min\": sum_coin_min,\r\n    \"sum_withdraw\": sum_with,\r\n    \"sum_coin\": sum_coin_total,\r\n    \"len_coin\": len_coin\r\n    }\r\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.check.upline",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-20 15:50:58.012868",
  "name": "Super Apps - Check Upline",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "id_drw = frappe.form_dict.id_drw\n\ndoc = frappe.get_doc(\"Customer\", {\"id_drw\": id_drw})\n\nfrappe.response['data'] = doc",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.signup.user",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-09 19:27:06.599944",
  "name": "Super Apps - Sign Up User",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "upline_id = frappe.form_dict.upline_id\nupline_nama = frappe.form_dict.upline_nama\nfirst_name = frappe.form_dict.first_name\nlast_name = frappe.form_dict.last_name\ntgl_lahir = frappe.form_dict.tgl_lahir\nemail = frappe.form_dict.email\nphone = frappe.form_dict.phone\nterritory = frappe.form_dict.territory\nprovinsi = frappe.form_dict.provinsi\npassword = frappe.form_dict.password\nretype_pwd = frappe.form_dict.retype_pwd\nlevel = frappe.form_dict.level\n\nauth = 0\nif password==retype_pwd: auth = 1\nfull_name = first_name + \" \" + last_name\ncust_group = \"Consultant\"\nif level is not None: cust_group = level\n\nif auth > 0:\n    user_doc = frappe.get_doc({\n        \"doctype\": \"User\",\n        \"email\": email,\n        \"username\": phone,\n        \"new_password\": password,\n        \"first_name\": first_name,\n        \"last_name\": last_name,\n        \"send_welcome_email\": 0,\n        \"role_profile_name\": \"Website User\",\n        \"mobile_no\": phone\n    })\n    doc = frappe.get_doc({\n        \"customer_name\": full_name,\n        \"upline_id\": upline_id,\n        \"upline_nama\": upline_nama,\n        \"email_id\": email,\n        \"provinsi\": provinsi,\n        \"territory\": territory,\n        \"tanggal_lahir\": tgl_lahir,\n        \"customer_group\": cust_group,\n        \"mobile_no\": phone,\n        \"customer_type\": \"Individual\",\n        \"doctype\": \"Customer\"\n    })\n    try:\n        user_doc.insert(ignore_permissions=True)\n        doc.insert(ignore_permissions=True)\n        frappe.response['data'] = doc\n    except:\n        frappe.log_error(title=\"Error Sign Up User\", message=None)\n        frappe.throw(\"Error\")\nelse:\n    frappe.response['data'] = \"Password do not match\"\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.stock.material.transfer",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 06:11:53.490608",
  "name": "Warehouse - Stock Material Transfer",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "batch = frappe.form_dict.batch\nitem = frappe.form_dict.item\ndc = frappe.form_dict.dc\n\nif batch is None and item is None: \n    doc = \"Data tidak ditemukan\"\nelse:\n    dcs = frappe.get_doc(\"Drop Center\", dc)\n    items = frappe.get_doc(\"Item\", item)\n    batchs = frappe.get_doc(\"Batch\", batch)\n    se = {\n        \"doctype\": \"Stock Entry\",\n        \"stock_entry_type\": \"Material Transfer\",\n        \"company\": dcs.company,\n        \"from_warehouse\": dcs.warehouse,\n        \"to_warehouse\": dcs.delivery_warehouse,\n        \"docstatus\": 1,\n        \"items\": [{\n            \"item_code\": items.name,\n            \"qty\": batchs.batch_qty,\n            \"uom\": items.uoms[0].uom,\n            \"conversion_factor\": items.uoms[0].conversion_factor\n        }]\n    }\n    doc = frappe.get_doc(se)\n    try:\n        doc.save(ignore_permissions=True)\n    except:\n        frappe.log_error(title=\"Error Stock Entry Transfer\", message=None)\n        \nfrappe.response['data'] = doc\n\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.sales.order.detail",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-11-06 10:30:33.953991",
  "name": "Super Apps - Sales Order Detail",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n\ndoc = frappe.get_doc(\"Sales Order\", name)\nsi = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\":name}, \"parent\")\ncust = frappe.db.get_value(\"Customer\", doc.customer)\ndoccust = \"\"\nif cust is not None: doccust = frappe.get_doc(\"Customer\", cust)\n\nif si is None:\n    callsi = frappe.call(\"erpnext.selling.doctype.sales_order.sales_order.make_sales_invoice\",source_name=name)\n    docsi = frappe.get_doc(callsi)\n    try:\n        docsi.docstatus = 1\n        docsi.save(ignore_permissions=True)\n    except:\n        frappe.log_error(title=\"Error Create Sales Invoice\", message=None)\n        frappe.throw(\"Error\")\nelse:\n    docsi = frappe.get_doc(\"Sales Invoice\", si)\n    \nfrappe.response['data'] = doc\nfrappe.response['si'] = docsi\nfrappe.response['customer'] = doccust",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v2.list.history.order.point",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-26 05:31:54.164073",
  "name": "Super Apps - List History Order Point Per DC",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "dc = frappe.form_dict.dc\r\nlimit = frappe.form_dict.limit\r\nstart = frappe.form_dict.start\r\nsort = frappe.form_dict.sort\r\n\r\nif limit is None: limit = 20\r\nif start is None: start = 0\r\nif sort is None: sort = \"modified desc\"\r\n\r\nfields = [\"name\",\"drop_center\",\"company\",\"application_status\",\"waktu_pemesanan\",\"waktu_pembayaran\",\"grand_total\",\"get_point\"]\r\nfilters = [[\"drop_center\",\"=\", dc],[\"waktu_pembayaran\",\"is\",\"set\"]]\r\n\r\ndoc = frappe.db.get_all(\"Sales Order\", fields=fields, filters=filters, limit_start=start, limit_page_length=limit, order_by=sort)\r\n\r\nfrappe.response['data'] = doc",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.customer.bygroup",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-27 11:44:09.196808",
  "name": "Super Apps - Get Customer by group",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "group = frappe.form_dict.group\ncustomer = frappe.form_dict.customer\nlimit = frappe.form_dict.limit\nstart = frappe.form_dict.start\nfields = frappe.form_dict.fields\nfilters = frappe.form_dict.filters\nsort = frappe.form_dict.sort\n\nif limit is None: limit = 20\nif start is None: start = 0 \nif fields is None: fields = [\"*\"]\nif filters is None: filters = [[\"customer_group\",\"=\",group],[\"id_drw\",\"is\",\"set\"]]\nif customer is not None: filters = [[\"name\",\"=\",customer],[\"id_drw\",\"is\",\"set\"]]\nif sort is None: sort = \"id_drw asc\"\nor_filters = []\n\ndocs = frappe.get_all(\"Customer\", filters=filters, or_filters=or_filters, fields=fields, limit_start=start, limit_page_length=limit,order_by=sort)\n\ndata = []\nfor doc in docs:\n    getuser = frappe.db.get_value(\"User\", doc.email_id, \"name\")\n    if getuser is not None:\n        docuser = frappe.get_doc(\"User\", doc.email_id)\n        email = docuser.email\n        first_name = docuser.first_name\n        last_name = docuser.last_name\n        username = docuser.username\n        role_profile_name = docuser.role_profile_name\n        mobile_no = doc.mobile_no\n        if mobile_no is None: mobile_no = \"12345\"\n        docuser.new_password = mobile_no\n        if username is None: docuser.username = doc.id_drw\n        if username!=doc.id_drw: docuser.username = doc.id_drw\n        if role_profile_name is None: docuser.role_profile_name = \"Website User\"\n        try:\n            docuser.save(ignore_permissions=True)\n        except:\n            frappe.log_error(title=\"Error edit user\", message=None)\n    else:\n        email = doc.email_id\n        first_name = doc.customer_name\n        username = doc.id_drw\n        password = doc.mobile_no\n        role_profile_name = \"Website User\"\n        getusers = None\n        if email is None or email == \"\":\n            email = doc.name + \"@bc.com\"\n            frappe.db.set_value(\"Customer\", doc.name, {\"email_id\": email})\n            getusers = frappe.db.get_value(\"User\", email, \"email\")\n        if getusers is None: \n            docuser = frappe.get_doc({\n                \"doctype\": \"User\",\n                \"email\": email,\n                \"username\": username,\n                \"new_password\": password,\n                \"first_name\": first_name,\n                \"role_profile_name\": role_profile_name,\n                \"send_welcome_email\": 0\n            })\n            try:\n                docuser.save(ignore_permissions=True)\n            except:\n                frappe.log_error(title=\"Error Create User\", message=None)\n                \n    data.append({\n        \"name\": doc.name,\n        \"id_drw\": doc.id_drw,\n        \"customer_name\": doc.customer_name,\n        \"customer_group\": doc.customer_group,\n        \"mobile_no\": doc.mobile_no,\n        \"email_id\": doc.email_id,\n        \"email\": email,\n        \"first_name\": first_name,\n        \"username\": username,\n        \"role_profile_name\": role_profile_name\n    })\n\nfrappe.response['data'] = data\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.add.customer.point",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-02 12:17:22.349920",
  "name": "Super Apps - Add Customer Point",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "id_drw = frappe.form_dict.id_drw\nbelanja = int(frappe.form_dict.belanja)\npoint = int(frappe.form_dict.point)\n\ndoc = frappe.get_doc(\"Customer\", {\"id_drw\": id_drw})\n\ndoc.total_belanja = belanja\ndoc.total_point = point\ndoc.remaining_point = 0\ndoc.total_coins = 0\ndoc.total_coin_cashback = 0\n\ntry:\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(None, \"Error add customer point\")\n    \n\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.add.purchase.receipt",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-30 14:23:55.757641",
  "name": "Warehouse Apps - Add Purchase Receipt",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "json_param = frappe.request.data\ndata = json.loads(json_param)\n\ndata['doctype'] = \"Purchase Receipt\"\n\ndoc = frappe.get_doc(data)\n\ntry:\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Add Purchase Receipt\", message=None)\n    frappe.throw(\"Error\")\n\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.add.purchase.receipt.item",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-30 14:50:39.417142",
  "name": "Warehouse Apps - Update Purchase Receipt Item",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "json_param = frappe.request.data\ndata = json.loads(json_param)\n\ndata['doctype'] = \"Purchase Receipt Item\"\n\ndoc = frappe.get_doc(data)\n\ntry:\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Update Purchase Receipt Item\", message=None)\n    frappe.throw(\"Error\")\n\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.submit.purchase.receipt",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-09-30 15:21:19.937538",
  "name": "Warehouse Apps - Submit Purchase Receipt",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n\ndoc = frappe.get_doc(\"Purchase Receipt\", name)\ndoc.docstatus = 1\n\ntry:\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Submit Purchase Receipt\", message=None)\n    frappe.throw(\"Error\")",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.tagihan.kasbon",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-01 09:50:48.960475",
  "name": "Super Apps - Get Tagihan Kasbon Detail",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n\ndoc = frappe.get_doc(\"Data Kasbon\", name)\n\nfrappe.response['data'] = doc\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.set.admin.bygroup",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-02 20:45:36.447689",
  "name": "Super Apps - Set Admin by group",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "group = frappe.form_dict.group\ncustomer = frappe.form_dict.customer\nlimit = frappe.form_dict.limit\nstart = frappe.form_dict.start\nfields = frappe.form_dict.fields\nfilters = frappe.form_dict.filters\nsort = frappe.form_dict.sort\n\nif limit is None: limit = 20\nif start is None: start = 0 \nif fields is None: fields = [\"*\"]\nif filters is None: filters = [[\"customer_group\",\"=\",group],[\"id_drw\",\"is\",\"set\"]]\nif customer is not None: filters = [[\"name\",\"=\",customer],[\"id_drw\",\"is\",\"set\"]]\nif sort is None: sort = \"id_drw asc\"\nor_filters = []\n\ndocs = frappe.get_all(\"Customer\", filters=filters, or_filters=or_filters, fields=fields, limit_start=start, limit_page_length=limit,order_by=sort)\n\ndata = []\nnum = 1\nfor doc in docs:\n    num = num + 1\n    if num > 4: num = 1\n    useradmin = \"Admin \" + str(num)\n    try:\n        q = frappe.db.set_value(\"Customer\", doc.name, {\n            \"user_admin\": useradmin\n        })\n        docbc = frappe.db.get_value(\"Customer\", doc.name, \"name\")\n        docadmin = frappe.db.get_value(\"Customer\", doc.name, \"user_admin\")\n        data.append({\n            \"name\": docbc,\n            \"docadmin\": docadmin\n        })\n    except:\n        frappe.log_error(title=\"Error set admin\", message=None)\n\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.stock.item",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 04:35:37.146565",
  "name": "Warehouse Apps - Get Stock All Items",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "warehouse = frappe.form_dict.warehouse\n\nif warehouse is None: \n    doc = \"Data tidak ditemukan\"\nelse:\n    filters = [[\"is_apps\",\"=\",1]]\n    fields = [\"name\"]\n    sort = \"name asc\"\n    items = frappe.db.get_all(\"Item\", filters=filters, fields=fields, order_by=sort)\n    data = []\n    for item in items:\n        stock = frappe.call(\"erpnext.stock.doctype.quick_stock_balance.quick_stock_balance.get_stock_item_details\",warehouse=warehouse,date=frappe.utils.today(),item=item.name)\n        data.append(stock)\n    \nfrappe.response['data'] = data\n\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.dc.warehouse",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-03 05:21:45.828063",
  "name": "Warehouse Apps - Get DC Warehouse",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\ngudang = frappe.form_dict.gudang\n\nif name is None: \n    doc = \"Data tidak ditemukan\"\nelse:\n    dc = frappe.get_doc(\"Drop Center\", name)\n    warehouse = \"\"\n    if gudang==\"utama\": warehouse = dc.warehouse\n    if gudang==\"susun\": warehouse = dc.delivery_warehouse\n    filters = [[\"is_apps\",\"=\",1]]\n    fields = [\"name\"]\n    sort = \"name asc\"\n    items = frappe.db.get_all(\"Item\", filters=filters, fields=fields, order_by=sort)\n    data = []\n    for item in items:\n        stock = frappe.call(\"erpnext.stock.doctype.quick_stock_balance.quick_stock_balance.get_stock_item_details\",warehouse=warehouse,date=frappe.utils.today(),item=item.name)\n        data.append({\n            \"item\": stock['item'],\n            \"qty\": frappe.utils.fmt_money(stock['qty'],0)\n        })\n\nfrappe.response['data'] = data\n\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.set.customer.bygroup",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-04 13:32:55.810271",
  "name": "Super Apps - Set Customer User by group",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "group = frappe.form_dict.group\ncustomer = frappe.form_dict.customer\nlimit = frappe.form_dict.limit\nstart = frappe.form_dict.start\nfields = frappe.form_dict.fields\nfilters = frappe.form_dict.filters\nsort = frappe.form_dict.sort\n\nif limit is None: limit = 20\nif start is None: start = 0 \nif fields is None: fields = [\"*\"]\nif filters is None: filters = [[\"customer_group\",\"=\",group],[\"id_drw\",\"is\",\"set\"]]\nif customer is not None: filters = [[\"name\",\"=\",customer],[\"id_drw\",\"is\",\"set\"]]\nif sort is None: sort = \"id_drw asc\"\nor_filters = []\n\n\ndocs = frappe.get_all(\"Customer\", filters=filters, or_filters=or_filters, fields=fields, limit_start=start, limit_page_length=limit,order_by=sort)\n\ndata = []\nfor doc in docs:\n    new_email = doc.email_id\n    new_email = \"bc\" + new_email[-13:]\n    new_email = new_email.lower()\n    if new_email is None or new_email==\"\":\n        new_email = doc.name + \"@bc.com\"\n        frappe.db.set_value(\"Customer\", doc.name, {\"email_id\": new_email.lower()})\n    new_mobile = doc.mobile_no\n    if new_mobile is None or new_mobile==\"\":\n        new_mobile = 12345\n        frappe.db.set_value(\"Customer\", doc.name, {\"mobile_no\": new_mobile})\n    new_iddrw = doc.id_drw\n    if new_iddrw is None or new_iddrw==\"\":\n        new_iddrw = doc.name\n        frappe.db.set_value(\"Customer\", doc.name, {\"id_drw\": new_iddrw})\n    docuser = frappe.db.get_value(\"User\", {\"username\": doc.id_drw}, \"name\")\n    if docuser is not None:\n        if docuser != doc.email_id:\n            frappe.db.set_value(\"Customer\", doc.name, {\"email_id\": docuser})\n    else:\n        docusers = frappe.get_doc({\n            \"doctype\": \"User\",\n            \"email\": new_email,\n            \"username\": new_iddrw,\n            \"new_password\": new_mobile,\n            \"first_name\": doc.customer_name,\n            \"role_profile_name\": \"Website User\",\n            \"send_welcome_email\": 0\n        })\n        try:\n            docusers.save(ignore_permissions=True)\n        except:\n            docuser = \"Error\"\n    frappe.db.set_value(\"User\", docuser, {\"new_password\": doc.mobile_no})\n    data.append({\n        \"id_drw\": new_iddrw,\n        \"email_id\": new_email,\n        \"mobile_no\": new_mobile,\n        \"user\": docuser\n    })\ntitle = \"Tembak Login Customer [\"+group+\":\"+start+\":\"+limit+\"]\"\nfrappe.log_error(title=title, message=data)\nfrappe.response['data'] = data\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.sales.order.detail.old",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-11-06 13:17:19.584554",
  "name": "Super Apps - Sales Order Detail Old",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n\ndoc = frappe.get_doc(\"Sales Order\", name)\nsi = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\":name}, \"parent\")\n\nif si is not None:\n    docsi = frappe.get_doc(\"Sales Invoice\", si)\ndc = \"DC Purworejo\"\nif doc.drop_center is None or doc.drop_center==\"\":\n    dc = \"DC Purworejo\"\nelse:\n    dc = doc.drop_center\nalamat = \"\"\nif doc.shipping_address is None or doc.shipping_address==\"\":\n    alamat = doc.address_display\nelse:\n     alamat = doc.shipping_address\n\nitems = []\nfor item in doc.items:\n    item_id = frappe.db.get_value(\"Item\", item.item_code, \"id_item_drw\")\n    items.append({\n        \"item_id\": item_id,\n        \"item_code\": item.item_code,\n        \"item_name\": item.item_name,\n        \"price_list_rate\": item.price_list_rate,\n        \"qty\": item.qty\n    })\n\ndata = {\n    \"name\": doc.name,\n    \"customer\": doc.customer,\n    \"customer_name\": doc.customer_name,\n    \"customer_group\": doc.customer_group,\n    \"contact_mobile\": doc.contact_mobile,\n    \"shipping_address\": doc.shipping_address,\n    \"ekspedisi\": doc.nama_kurir,\n    \"drop_center\": dc,\n    \"total\": doc.total,\n    \"total_qty\": doc.total_qty,\n    \"items\": items\n}\n    \nfrappe.response['data'] = data\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.gagal.login",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-05 06:16:35.618285",
  "name": "New Apps - Gagal Login",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "user_id = frappe.form_dict.user_id\n\nis_mail = frappe.db.get_value(\"User\", {\"email\": user_id}, \"name\")\nis_user = frappe.db.get_value(\"User\", {\"username\": user_id}, \"name\")\nis_cust = frappe.db.get_value(\"Customer\", {\"id_drw\": user_id}, \"name\")\n\nuser = \"\"\ncustomer = \"\"\nif is_mail is not None:\n    user = is_mail\n    cust = frappe.db.get_value(\"Customer\", {\"email_id\": user}, \"name\")\n    if cust is not None: customer = cust\nif is_user is not None:\n    user = is_user\n    cust = frappe.db.get_value(\"Customer\", {\"id_drw\": user}, \"name\")\n    if cust is not None: customer = cust\nif is_cust is not None:\n    customer = is_cust\n\ndocuser = \"\"\ndoccust = \"\"\ndatauser = \"\"\ndatacust = \"\"\n\nif user != \"\":\n    docuser = frappe.get_doc(\"User\", user)\n    datauser = {\n        \"name\": docuser.name,\n        \"email\": docuser.email,\n        \"full_name\": docuser.first_name,\n        \"username\": docuser.username,\n        \"role_profile_name\": docuser.role_profile_name\n    }\nif customer != \"\":\n    doccust = frappe.get_doc(\"Customer\", customer)\n    datacust = {\n        \"name\": doccust.name,\n        \"customer_name\": doccust.customer_name,\n        \"id_drw\": doccust.id_drw,\n        \"customer_group\": doccust.customer_group,\n        \"mobile_no\": doccust.mobile_no,\n        \"email_id\": doccust.email_id\n    }\n\nfrappe.response['data'] = {\n    \"user\": datauser,\n    \"customer\": datacust,\n    }",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.reset.gagal.login",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-17 09:01:33.513338",
  "name": "New Apps - Reset Gagal Login",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "email = frappe.form_dict.email\nmobile_no = frappe.form_dict.mobile_no\nnew_password = frappe.form_dict.new_password\n\ncust = frappe.db.get_value(\"Customer\", {\"email_id\": email}, \"name\")\nif cust is not None:\n    id_drw = frappe.db.get_value(\"Customer\", cust, \"id_drw\")\n    full_name = frappe.db.get_value(\"Customer\", cust, \"customer_name\")\n    user = frappe.db.get_value(\"User\", email, \"name\")\n    if user is not None:\n        docuser = frappe.get_doc(\"User\", email)\n        docuser.new_password = new_password\n        try:\n            docuser.save(ignore_permissions=True)\n            frappe.response['data'] = docuser\n        except:\n            frappe.log_error(title=\"Error reset password gagal login\", message=None)\n            frappe.response['error'] = \"Gagal reset password\"\n            frappe.throw(\"Error\")\n    else:\n        docuser = frappe.get_doc({\n            \"doctype\": \"User\",\n            \"email\": email,\n            \"username\": id_drw,\n            \"new_password\": new_password,\n            \"first_name\": full_name,\n            \"role_profile_name\": \"Website User\",\n            \"send_welcome_email\": 0\n        })\n        try:\n            docuser.save(ignore_permissions=True)\n            frappe.response['data'] = docuser\n        except:\n            frappe.log_error(title=\"Error create user gagal login\", message=None)\n            frappe.response['error'] = \"Gagal create user\"\n            frappe.throw(\"Error\")\nelse:\n    frappe.log_error(title=\"Error data customer tidak ada\", message=None)\n    frappe.response['error'] = \"Data customer kosong\"\n    frappe.throw(\"Error\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.get.build.version",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-11-13 10:37:29.762763",
  "name": "New Apps - Get Build Version",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "frappe.response['data'] = \"20241027\"",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.product.detail",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-20 08:30:34.363786",
  "name": "New Apps - Get Product Detail Full Price List",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "warehouse = frappe.form_dict.warehouse\ncustomer_group = frappe.form_dict.customer_group\nitem = frappe.form_dict.item\n\nnow = frappe.utils.today()\n\nif warehouse is None: warehouse = \"Gudang Utama PWR - DRW\"\nif customer_group is None: customer_group = \"Umum\"\n\npricelist = 'b.price_list=\"'+customer_group+'\"'\nif customer_group == \"Consultant\":\n    pricelist = pricelist + ' or b.price_list=\"Umum\"'\nif customer_group == \"Supervisor\":\n    pricelist = pricelist + ' or b.price_list=\"Consultant\" or b.price_list=\"Umum\"'\nif customer_group == \"Manager\":\n    pricelist = pricelist + ' or b.price_list=\"Supervisor\" or b.price_list=\"Consultant\" or b.price_list=\"Umum\"'\nif customer_group == \"Director\":\n    pricelist = pricelist + ' or b.price_list=\"Manager\" or b.price_list=\"Supervisor\" or b.price_list=\"Consultant\" or b.price_list=\"Umum\"'\n\n# Query for the main item\ndoc = frappe.db.sql(\"select * from `tabItem` a left join `tabItem Price` b on a.item_code=b.item_code where a.is_apps=1 and a.disabled=0 and (\"+pricelist+\") and a.item_code=%(item)s order by b.price_list_rate asc\", {\"item\": item}, as_dict=True)\n\n# If doc is empty, query for fromName\nif not doc:\n    fromName = frappe.db.sql(\"select * from `tabItem` a left join `tabItem Price` b on a.item_name=b.item_name where a.is_apps=1 and a.disabled=0 and (\"+pricelist+\") and a.item_name=%(item)s order by b.price_list_rate asc\", {\"item\": item}, as_dict=True)\n    \n    # Process fromName if it is not empty\n    if fromName:\n        doc = fromName  # Use fromName as the new doc\n\n# Get stock details\nget = frappe.call(\"erpnext.stock.doctype.quick_stock_balance.quick_stock_balance.get_stock_item_details\", warehouse=warehouse, date=now, item=doc[0].item_code)\n\nprice = []\nfor prices in doc:\n    if prices.price_list == customer_group:\n        continue\n    price.append({\n        \"price_list\": prices.price_list,\n        \"price_list_rate\": prices.price_list_rate\n    })\n\ndata = []\n\nqty = get['qty']\nif qty < 100:\n    if doc[0].preorder > 0:\n        stock = \"Stok Habis\"\n    else:\n        stock = \"Preorder\"\nelif qty < 1000:\n    stock = \"Stok Limit\"\nelse:\n    stock = \"Stok Tersedia\"\n    \ndata.append({\n    \"item_code\": doc[0].item_code,\n    \"item_name\": doc[0].item_name,\n    \"bpom\": doc[0].bpom,\n    \"image\": doc[0].image,\n    \"description\": doc[0].description,\n    \"uom\": \"Pcs\",\n    \"conversion_factor\": 1.0,\n    \"price_list\": doc[0].price_list,\n    \"price_list_rate\": doc[0].price_list_rate,\n    \"price_list_downline\": price,\n    \"qty\": get['qty'],\n    \"stock\": stock\n})\n\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.get.barcode.sheila",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-07 05:58:29.610163",
  "name": "Super Apps - Get Barcode Sheila",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "nama = frappe.form_dict.nama\nnik = frappe.form_dict.nik\n\nq = frappe.db.get_value(\"Event Sheila\", {\"nama_lengkap\": nama, \"nik\": nik}, \"name\")\n\nif q is not None: \n    docevent = frappe.get_doc(\"Event Sheila\", q)\n    doc = docevent.nama_lengkap + '#' + docevent.nik\nelse: \n    doc = \"Data tidak ditemukan\"\n\nfrappe.response['data'] = doc",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.get.emoji",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-07 08:51:52.513856",
  "name": "New Apps - Get Emoji",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "emoji = {\n    \"&#x1F600;\",\n    \"&#x1F601;\",\n    \"&#x1F602;\",\n    \"&#x1F603;\",\n    \"&#x1F604;\",\n    \"&#x1F605;\",\n    \"&#x1F606;\",\n    \"&#x1F607;\",\n    \"&#x1F608;\",\n    \"&#x1F609;\",\n    \"&#x1F60A;\",\n    \"&#x1F60B;\",\n    \"&#x1F60C;\",\n    \"&#x1F60D;\",\n    \"&#x1F60E;\",\n    \"&#x1F60F;\",\n    \"&#x1F610;\",\n    \"&#x1F611;\",\n    \"&#x1F612;\",\n    \"&#x1F613;\",\n    \"&#x1F614;\",\n    \"&#x1F615;\",\n    \"&#x1F616;\",\n    \"&#x1F617;\",\n    \"&#x1F618;\",\n    \"&#x1F619;\",\n    \"&#x1F61A;\",\n    \"&#x1F61B;\",\n    \"&#x1F61C;\",\n    \"&#x1F61D;\",\n    \"&#x1F61E;\",\n    \"&#x1F61F;\",\n    \"&#x1F620;\",\n    \"&#x1F621;\",\n    \"&#x1F622;\",\n    \"&#x1F623;\",\n    \"&#x1F624;\",\n    \"&#x1F625;\",\n    \"&#x1F626;\",\n    \"&#x1F627;\",\n    \"&#x1F628;\",\n    \"&#x1F629;\",\n    \"&#x1F62A;\",\n    \"&#x1F62B;\",\n    \"&#x1F62C;\",\n    \"&#x1F62D;\",\n    \"&#x1F62E;\",\n    \"&#x1F62F;\",\n    \"&#x1F630;\",\n    \"&#x1F631;\",\n    \"&#x1F632;\",\n    \"&#x1F633;\",\n    \"&#x1F634;\",\n    \"&#x1F635;\",\n    \"&#x1F636;\",\n    \"&#x1F637;\"\n}\nfrappe.response['data'] = emoji",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.get.data.customer.problem",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-08 14:21:53.042381",
  "name": "Super Apps - Get Data Customer Problem",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "limit = frappe.form_dict.limit\nstart = frappe.form_dict.start\nfilters = frappe.form_dict.filters\nfields = frappe.form_dict.fields\nsort = frappe.form_dict.sort\n\nif sort is None: sort = \"name asc\"\nif start is None: start = 0\nif limit is None: limit = 5\nif filters is None: filters = [[\"email_id\", \"is\", \"not set\"], [\"id_drw\", \"is\", \"set\"]]\nif fields is None: fields = [\"name\", \"customer_name\", \"id_drw\", \"mobile_no\", \"email_id\"]\n\ndocs = frappe.get_all(\"Customer\", filters=filters, fields=fields, limit_start=start, limit_page_length=limit, order_by=sort)\ncount = len(docs)\ndata = []\nstatus_user = \"Process\"\nstatus_cust = \"Process\"\n\nfor doc in docs:\n    frappe.flags.in_import=True\n    user = frappe.db.get_value(\"User\", {\"username\": doc.id_drw})\n    if user is None:\n        new_email = doc.name + \"@bc.com\"\n        new_pass = \"drw12345\"\n        docuser = frappe.get_doc({\n            \"doctype\": \"User\",\n            \"email\": new_email,\n            \"username\": doc.id_drw,\n            \"new_password\": new_pass,\n            \"first_name\": doc.customer_name,\n            \"role_profile_name\": \"Website User\",\n            \"send_welcome_email\": 0\n        })\n        try:\n            status_user = \"Success\"\n            docuser.save(ignore_permissions=True)\n        except:\n            status_user = \"Error\"\n    else:\n        frappe.db.set_value(\"Customer\", doc.name, {\"email_id\": user})\n        try:\n            status_cust = \"Success\"\n        except:\n            status_cust = \"Error\"\n            \n    doc_cust = frappe.get_doc(\"Customer\", doc.name)\n    doc_user = frappe.get_doc(\"User\", user)\n    data.append({\n        \"name\": doc_cust.name,\n        \"customer_name\": doc_cust.customer_name,\n        \"id_drw\": doc_cust.id_drw,\n        \"mobile_no\": doc_cust.mobile_no,\n        \"email_id\": doc_cust.email_id,\n        \"username\": doc_user.username,\n        \"status_user\": status_user,\n        \"status_cust\": status_cust\n    })\n\nfrappe.response['data'] = data\nfrappe.response['count'] = count\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.get.tagihan.ongkir",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-08 22:30:16.348558",
  "name": "Super Apps - Get Tagihan Ongkir Detail",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n\ndoc = frappe.get_doc(\"Data Ongkir\", name)\n\nfrappe.response['data'] = doc\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.duplikat.order",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-10 13:18:49.216336",
  "name": "New Apps - Duplikat Order",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "so = frappe.form_dict.so\n\ndoc = frappe.get_doc(\"Sales Order\", so)\n\nitempaket = []\nfor paket in doc.item_paket:\n    itempaket.append({\n        \"item_paket\": paket.item_paket,\n        \"item_name\": paket.item_name,\n        \"image\": paket.image,\n        \"price_list_rate\": paket.price_list_rate,\n        \"qty\": paket.qty\n    })\n\nitem = []\nfor items in doc.items:\n    delivery = frappe.db.get_value(\"Drop Center\", doc.drop_center, \"delivery_warehouse\")\n    item.append({\n        \"item_code\": items.item_code,\n        \"item_name\": items.item_name,\n        \"description\": items.description,\n        \"uom\": items.uom,\n        \"warehouse\": items.warehouse,\n        \"conversion_factor\": items.conversion_factor,\n        \"qty\": items.qty,\n        \"price_list_rate\": items.price_list_rate,\n        \"delivery_warehouse\": delivery,\n        \"preorder\": items.preorder\n    })\n    \n\ndata = {\n    \"doctype\": doc.doctype,\n    \"company\": doc.company,\n    \"customer\": doc.customer,\n    \"transaction_date\": frappe.utils.today(),\n    \"delivery_date\": frappe.utils.today(),\n    \"drop_center\": doc.drop_center,\n    \"set_warehouse\": doc.set_warehouse,\n    \"upline\": doc.upline,\n    \"ekspedisi\": doc.ekspedisi,\n    \"shipping_address_name\": doc.shipping_address_name,\n    \"shipping_address\": doc.shipping_address,\n    \"contact_mobile\": doc.contact_mobile,\n    \"application_status\": \"\",\n    \"item_paket\": itempaket,\n    \"items\": item\n}\n\ndoc = frappe.get_doc(data)\ntry:\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Duplikat Order\", message=None)\n    frappe.throw(\"Error\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.sinkron.data.customer",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-09 19:37:17.317884",
  "name": "Super Apps - Sinkron Data Customer",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "id_drw = frappe.form_dict.id_drw\r\n\r\ncust = frappe.db.get_value(\"Customer\", {\"id_drw\": id_drw}, \"name\")\r\nuser = frappe.db.get_value(\"User\", {\"username\": id_drw}, \"name\")\r\n\r\ndoccust = \"\"\r\ndocuser = \"\"\r\nif cust is not None:\r\n    doccust = frappe.get_doc(\"Customer\", cust)\r\nif user is not None:\r\n    docuser = frappe.get_doc(\"User\", user)\r\n\r\nfrappe.response['data'] = doccust\r\nfrappe.response['user'] = docuser",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.sinkron.add.customer",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-21 13:53:22.493608",
  "name": "Super Apps - Sinkron Add Customer",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "json_param = frappe.request.data\ndata = json.loads(json_param)\n\ncust = frappe.db.get_value(\"Customer\", {\"id_drw\": data['id_drw']})\n\ncontact = {}\ncontact['doctype'] = \"Contact\"\ncontact['first_name'] = data['customer_name']\nemail_ids = []\nemail_ids.append({\n    \"email_id\": data['email_id'],\n    \"is_primary\": 1\n})\nphone_nos = []\nphone_nos.append({\n    \"phone\": data['mobile_no'],\n    \"is_primary_mobile_no\": 1\n})\ncontact['email_ids'] = email_ids\ncontact['phone_nos'] = phone_nos\n\nif data['upline']!=\"\":\n        upline = frappe.db.get_value(\"Customer\", {\"id_drw\": data['upline']})\n        data['upline'] = upline\n\nif cust is not None:\n    doc = frappe.get_doc(\"Customer\", cust)\n    con = frappe.db.get_value(\"Contact\", doc.customer_primary_contact)\n    if con is not None:\n        doc.customer_primary_contact = \"\"\n        doc.save(ignore_permissions=True)\n        doccon = frappe.get_doc(\"Contact\", con)\n        doccon.delete(ignore_permissions=True)\n    try:\n        doccon = frappe.get_doc(contact)\n        doccon.save(ignore_permissions=True)\n        data['customer_primary_contact'] = doccon.name\n        doc.update(data)\n        doc.save(ignore_permissions=True)\n        frappe.response['data'] = doc\n    except:\n        frappe.throw(\"Error\")\nelse:\n    doccon = frappe.get_doc(contact)\n    data['doctype'] = \"Customer\"\n    data['territory'] = \"Indonesia\"\n    data['customer_type'] = \"Individual\"\n    \n    try:\n        doccon.save(ignore_permissions=True)\n        data['customer_primary_contact'] = doccon.name\n        doc = frappe.get_doc(data)\n        doc.save(ignore_permissions=True)\n        frappe.response['data'] = doccon\n    except:\n        frappe.throw(\"Error\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.get.data.customer.problem2",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-09 19:55:58.490295",
  "name": "Super Apps - Get Data Customer Problem 2",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "limit = frappe.form_dict.limit\nstart = frappe.form_dict.start\nfilters = frappe.form_dict.filters\nfields = frappe.form_dict.fields\nsort = frappe.form_dict.sort\n\nif sort is None: sort = \"name asc\"\nif start is None: start = 0\nif limit is None: limit = 5\nif filters is None: filters = [[\"email_id\", \"is\", \"set\"], [\"id_drw\", \"is\", \"set\"]]\nif fields is None: fields = [\"name\", \"customer_name\", \"id_drw\", \"mobile_no\", \"email_id\"]\n\ndocs = frappe.get_all(\"Customer\", filters=filters, fields=fields, limit_start=start, limit_page_length=limit, order_by=sort)\ncount = len(docs)\ndata = []\nstatus_user = \"Process\"\nstatus_cust = \"Process\"\n\nfor doc in docs:\n    frappe.flags.in_import=True\n    user = frappe.db.get_value(\"User\", {\"username\": doc.id_drw})\n    if user is None:\n        new_pass = \"drw12345\"\n        docuser = frappe.get_doc({\n            \"doctype\": \"User\",\n            \"email\": doc.email_id,\n            \"username\": doc.id_drw,\n            \"new_password\": new_pass,\n            \"first_name\": doc.customer_name,\n            \"role_profile_name\": \"Website User\",\n            \"send_welcome_email\": 0\n        })\n        try:\n            status_user = \"Success\"\n            docuser.save(ignore_permissions=True)\n        except:\n            status_user = \"Error\"\n    else:\n        if doc.email_id != user:\n            try:\n                frappe.db.set_value(\"Customer\", doc.name, {\"email_id\": user})\n                status_cust = \"Success\"\n            except:\n                status_cust = \"Error\"\n            \n    doc_cust = frappe.get_doc(\"Customer\", doc.name)\n    doc_user = frappe.get_doc(\"User\", user)\n    data.append({\n        \"name\": doc_cust.name,\n        \"customer_name\": doc_cust.customer_name,\n        \"id_drw\": doc_cust.id_drw,\n        \"mobile_no\": doc_cust.mobile_no,\n        \"email_id\": doc_cust.email_id,\n        \"username\": doc_user.username,\n        \"status_user\": status_user,\n        \"status_cust\": status_cust\n    })\n\nfrappe.response['data'] = data\nfrappe.response['count'] = count\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.delete.sales.order",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-10 10:09:14.885960",
  "name": "New Apps - Delete Sales Order Cart",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n\nif name is None: \n    doc = \"Sales Order tidak ditemukan\"\n    frappe.response['data'] = doc\nelse:\n    doc = frappe.get_doc(\"Sales Order\", name)\n    try:\n        doc.delete(ignore_permissions=True)\n        frappe.response['data'] = doc\n    except:\n        frappe.log_error(title=\"Error Delete Sales Order Cart\", message=None)\n        frappe.throw(\"Error\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v3.delete.item.paket.cart",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-18 16:05:25.419588",
  "name": "New Apps - Delete Item Paket Cart v3",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\r\nparent = frappe.form_dict.parent\r\n\r\nif name is None: \r\n    doc = \"Nama paket tidak ditemukan\"\r\n    frappe.response['data'] = name\r\nelse:\r\n    try:\r\n        frappe.db.begin()\r\n        docs = frappe.get_doc(\"Sales Order\",parent)\r\n        itemlen = len(docs.items)\r\n        paketlen = len(docs.item_paket)\r\n        getpaket = frappe.db.get_value(\"Sales Order Item Paket\",{\"parent\": parent, \"name\": name})\r\n        if getpaket is not None:\r\n            docpaket = frappe.get_doc(\"Sales Order Item Paket\",{\"parent\": parent, \"name\": name})\r\n            docpaket.delete(ignore_permissions=True)\r\n        items = frappe.db.get_all(\"Sales Order Item\",{\"parent\": parent, \"id_item_paket\": name}, \"name\")\r\n        itempaketlen = len(items)\r\n        if itemlen > itempaketlen:\r\n            for item in items:\r\n                docitem = frappe.get_doc(\"Sales Order Item\", item)\r\n                docitem.delete(ignore_permissions=True)\r\n                docs.save(ignore_permissions=True)\r\n                frappe.response['data'] = docs\r\n        else:\r\n            docs.delete(ignore_permissions=True)\r\n            frappe.response['data'] = docs\r\n        frappe.db.commit()\r\n    except Exception as e:\r\n        frappe.db.rollback()\r\n        frappe.log_error(title=\"Error Delete Paket Cart\", message=\"{e}\")",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.get.customer.detail",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-11 13:45:09.081901",
  "name": "New Apps - Get Customer Detail",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\r\n\r\nq = frappe.get_doc(\"Customer\", name)\r\n\r\nfrappe.response['data'] = q",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.update.customer",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-21 13:52:50.584693",
  "name": "New Apps - Update Data Customer",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "json_param = frappe.request.data\ndata = json.loads(json_param)\n\ndoc = frappe.get_doc(\"Customer\", data['name'])\ndoc.update(data)\ndoc.save(ignore_permissions=True)\n\nfrappe.response['data'] = doc\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.tembak.free.item.produk",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-12 12:23:49.764077",
  "name": "Super Apps - Tembak Free Item Produk",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "id_drw = frappe.form_dict.id_drw\nlimit = frappe.form_dict.limit\nstart = frappe.form_dict.start\nfields = frappe.form_dict.fields\nfilters = frappe.form_dict.filters\nsort = frappe.form_dict.sort\n\nif limit is None: limit = 20\nif start is None: start = 0 \nif fields is None: fields = [\"*\"]\nif filters is None: filters = []\nif id_drw is not None: filters = [[\"id_drw\",\"=\",id_drw]]\nif sort is None: sort = \"name asc\"\nor_filters = []\n\ndocs = frappe.get_all(\"Event Sheila\", filters=filters, or_filters=or_filters, fields=fields, limit_start=start, limit_page_length=limit,order_by=sort)\n\ndata = []\nfor doc in docs:\n    cust = frappe.db.get_value(\"Customer\", {\"id_drw\": doc.id_drw}, \"name\")\n    if cust is not None:\n        frappe.db.set_value(\"Customer\", cust, {\n            \"default_sales_partner\": \"DRW 9 Tahun\"\n        })\n    data.append({\n        \"customer\": cust,\n        \"id_drw\": doc.id_drw,\n        \"nama_lengkap\": doc.nama_lengkap,\n        \"telepon\": doc.telepon\n    })\n    \ntitle = \"Tembak free item produk\"\nfrappe.log_error(title=title, message=data)\nfrappe.response['data'] = data\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.hapus.free.item.produk",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-12 12:33:55.565231",
  "name": "Super Apps - Hapus Free Item Produk",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "id_drw = frappe.form_dict.id_drw\nlimit = frappe.form_dict.limit\nstart = frappe.form_dict.start\nfields = frappe.form_dict.fields\nfilters = frappe.form_dict.filters\nsort = frappe.form_dict.sort\n\nif limit is None: limit = 20\nif start is None: start = 0 \nif fields is None: fields = [\"*\"]\nif filters is None: filters = []\nif id_drw is not None: filters = [[\"id_drw\",\"=\",id_drw]]\nif sort is None: sort = \"name asc\"\nor_filters = []\n\ndocs = frappe.get_all(\"Event Sheila\", filters=filters, or_filters=or_filters, fields=fields, limit_start=start, limit_page_length=limit,order_by=sort)\n\ndata = []\nfor doc in docs:\n    cust = frappe.db.get_value(\"Customer\", {\"id_drw\": doc.id_drw}, \"name\")\n    if cust is not None:\n        frappe.db.set_value(\"Customer\", cust, {\n            \"default_sales_partner\": \"\"\n        })\n    data.append({\n        \"customer\": cust,\n        \"id_drw\": doc.id_drw,\n        \"nama_lengkap\": doc.nama_lengkap,\n        \"telepon\": doc.telepon\n    })\n    \ntitle = \"Hapus free item produk\"\nfrappe.log_error(title=title, message=data)\nfrappe.response['data'] = data\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v3.sales.order.submit",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-12 10:19:52.739077",
  "name": "New Apps - Sales Order Submit with approval",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\ndoc = frappe.get_doc(\"Sales Order\", name)\n\ngrand_total = doc.total\n\naturan_cashback = frappe.get_all(\"Aturan Cashback\", pluck=\"name\", filters=[[\"company\", \"=\", \"PT. DRW Estetika Indonesia\"], [\"valid_from\", \"<=\", frappe.utils.today()]], order_by=\"valid_from desc\")\ncashback = 0\n\nif len(aturan_cashback) > 0:\n    doccashback = frappe.get_doc(\"Aturan Cashback\", aturan_cashback[0])\n    percentage = 0\n    min_cashback = 0\n    for aturan in doccashback.details:\n        if min_cashback == 0:\n            min_cashback = aturan.from_total\n        if grand_total >= aturan.from_total and grand_total < aturan.to_total:\n            percentage = aturan.percentage\n    cashback = grand_total * percentage / 100000\n    if percentage == 0 and min_cashback > 0:\n        cashback = 0\n\ncust_group = doc.customer_group\nbagi_point = 0\nif cust_group == \"Director\": bagi_point = 10000\nif cust_group == \"Manager\": bagi_point = 12500\nif cust_group == \"Supervisor\": bagi_point = 15000\nif cust_group == \"Consultant\": bagi_point = 17500\nget_point = 0\nif bagi_point > 0: get_point = int(grand_total)/bagi_point\n\nif doc.drop_center is None or doc.drop_center == \"\":\n    doc.drop_center = \"DC Purworejo\"\nif doc.shipping_address is None or doc.shipping_address == \"\":\n    frappe.throw(\"Error\")\nif doc.ekspedisi is None or doc.ekspedisi == \"\":\n    frappe.throw(\"Error\")\n\napp_status = \"Menunggu Detail Bayar\"\nif doc.drop_center != \"Upline\" and doc.upline != \"\":\n    app_status = \"Menunggu Approval\"\n    \ntry:\n    doc.get_cashback = int(cashback)\n    doc.get_point = int(get_point)\n    doc.application_status = app_status\n    doc.checkout_date = frappe.utils.today()\n    doc.waktu_pemesanan = frappe.utils.now()\n    doc.docstatus = 1\n    doc.save(ignore_permissions=True)\n    frappe.db.set_value(\"Customer\", doc.customer, {\n        \"default_sales_partner\": \"\"\n    })\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(None, \"Submit Order\")\n    frappe.throw(\"Error\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v3.list.history.coins",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-24 10:18:33.700648",
  "name": "Super Apps - List History Coins v3",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\r\ncashback = 0\r\nlimit = frappe.form_dict.limit\r\nstart = frappe.form_dict.start\r\n\r\nif limit is None: limit = 20\r\nif start is None: start = 0\r\n\r\nfields = [\"name\", \"customer\",\"nama_agent\",\"posting_date\",\"sales_order\",\"kelipatan\",\"total_margin\",\"total_coin\"]\r\nfilters = [[\"is_cashback\",\"=\",cashback],[\"customer\",\"=\",customer]]\r\n\r\ndoc = frappe.get_all(\"Agent Coin Log\", fields=fields, filters=filters, order_by=\"modified desc\")\r\n\r\nlen_coin = 0\r\nsum_coin = 0\r\ndata = []\r\nfor docs in doc:\r\n    customer_name = frappe.db.get_value(\"Sales Order\",docs.sales_order,\"customer_name\")\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": docs.sales_order}, \"parent\")\r\n    sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n    sistatus = frappe.db.get_value(\"Sales Invoice\", si, \"status\")\r\n    bank = frappe.db.get_value(\"Sales Invoice Metode Pembayaran\", {\"parent\": si}, \"nama_bank\")\r\n    docsi = frappe.get_doc(\"Sales Invoice\", si)\r\n    if bank is not None and sistat>0:\r\n        len_coin = len_coin + 1\r\n        sum_coin = sum_coin + docs.total_coin\r\n        data.append({\r\n            \"name\": docs.name,\r\n            \"customer\": docs.customer,\r\n            \"nama_agent\": docs.nama_agent,\r\n            \"posting_date\": docs.posting_date,\r\n            \"sales_order\": docs.sales_order,\r\n            \"sales_order_name\": customer_name,\r\n            \"kelipatan\": docs.kelipatan,\r\n            \"total_margin\": docs.total_margin,\r\n            \"total_coin\": docs.total_coin,\r\n            \"status\": sistatus,\r\n            \"bank\": bank\r\n        })\r\n\r\ndoccoin = frappe.db.sql(\"select DISTINCT a.name,a.total_coin,c.nama_bank from `tabAgent Coin Log` a left join `tabSales Invoice Item` b on a.sales_order=b.sales_order left join `tabSales Invoice Metode Pembayaran` c on b.parent=c.parent where a.is_cashback=0 and a.customer=%(customer)s and c.nama_bank is not null order by c.nama_bank ASC\", {\"customer\": customer})\r\n\r\nfrappe.response['info'] = {\r\n    \"sum_coin\": sum_coin,\r\n    \"len_coin\": len_coin\r\n    }\r\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v3.get.agen",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-19 11:01:06.539480",
  "name": "New Apps - Get Agen Detail v3",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "limit = frappe.form_dict.limit\nstart = frappe.form_dict.start\nfilters = frappe.form_dict.filters\nfields = frappe.form_dict.fields\norder_by = frappe.form_dict.order_by\nname = frappe.form_dict.name\n\nif limit is None:\n    limit = 20\n\nif start is None:\n    start = 0\n\nif filters is None:\n    filters = [[\"customer_group\",\"=\",\"Director\"]]\n\nif fields is None:\n    fields = [\"*\"]\n\nif order_by is None:\n    order_by = \"customer_name asc\"\n\nif name is None:\n    q = frappe.get_all(\"Customer\", filters=filters, fields=fields,limit_page_length=limit,limit_start=start,order_by=order_by)\nelse:\n    lastyear = \"Last Year\"\n    thisyear = \"This Year\"\n    thismonth = \"This Month\"\n    get_order_lastyear = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",lastyear.lower()],[\"docstatus\", \"=\", 1],[\"customer\",\"=\",name]])\n    count_order_lastyear = len(get_order_lastyear)\n    sum_order_lastyear = 0\n    if count_order_lastyear>0:\n        sum_order_lastyear = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": get_order_lastyear})[0][0]\n    sum_order_lastmonth = sum_order_lastyear/12\n    get_order = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",thisyear.lower()],[\"docstatus\", \"=\", 1],[\"customer\",\"=\",name]])\n    count_order = len(get_order)\n    sum_order = 0\n    if count_order>0:\n        sum_order = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": get_order})[0][0]\n    get_order_month = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",thismonth.lower()],[\"docstatus\", \"=\", 1],[\"customer\",\"=\",name]])\n    count_order_month = len(get_order_month)\n    sum_order_month = 0\n    if count_order_month>0:\n        sum_order_month = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": get_order_month})[0][0]\n    get_order_downline = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"transaction_date\",\"timespan\",thisyear.lower()],[\"docstatus\", \"=\", 1],[\"upline\",\"=\",name]])\n    count_order_downline = len(get_order_downline)\n    sum_order_downline = 0\n    if count_order_downline>0:\n        sum_order_downline = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Order` where name in %(names)s\", {\"names\": get_order_downline})[0][0]\n    get_downline = frappe.get_all(\"Customer\", pluck=\"name\",filters=[[\"upline\",\"=\",name]])\n    get_downline_thismonth = frappe.get_all(\"Customer\", pluck=\"name\",filters=[[\"upline\",\"=\",name],[\"creation\",\"timespan\",thismonth.lower()]])\n    count_downline = len(get_downline)\n    count_downline_thismonth = len(get_downline_thismonth)\n    target_downline = 10\n    percent_downline = count_downline_thismonth/target_downline*100\n    q = frappe.get_doc(\"Customer\", name)\n    g = frappe.get_doc(\"Customer Group\", q.customer_group)\n    upline_contact = frappe.db.get_value(\"Customer\", q.upline, \"mobile_no\")\n        \n    limit_target = 0\n    for t in g.target:\n        if limit_target == 0:\n            limit_target = t.limit_target\n            max_target = t.max_target\n            nama_target = t.nama_target\n        if sum_order_month >= t.limit_target:\n            limit_target = t.limit_target\n            max_target = t.max_target\n            nama_target = t.nama_target\n    limit_target_percent_thismonth = sum_order_month/max_target*100\n    sum_order_lastmonth_30 = sum_order_lastmonth + (sum_order_lastmonth*(30/100))\n    limit_target_thisyear = 12*limit_target \n    limit_target_percent_thisyear = sum_order/limit_target_thisyear*100\n    sum_order_lastyear_30 = sum_order_lastyear + (sum_order_lastyear*(30/100))\n    if sum_order_lastmonth_30 > 0: limit_target_percent_lastmonth = sum_order_month/sum_order_lastmonth_30*100\n    else: limit_target_percent_lastmonth = 0\n    if sum_order_lastyear_30 > 0: limit_target_percent_lastyear = sum_order/sum_order_lastyear_30*100\n    else: limit_target_percent_lastyear = 0\n    grafik = {}\n    today = frappe.utils.today()\n    start_year = str(int(today[0:4])-1)\n    start_date = start_year+'-1-1'\n    start_date = frappe.utils.getdate(start_date)\n    sum_order_bymonth = frappe.db.sql(\"select month(posting_date) as month, DATE_FORMAT(posting_date, '%%M') as month_label, sum(if(year(posting_date)=2023,ifnull(grand_total,0),0)) as prev_year,sum(if(year(posting_date)=2024,ifnull(grand_total,0),0)) as current_year from `tabSales Invoice` where posting_date >= %(start_date)s and docstatus = 1 and customer = %(customer)s group by month order by month asc\",{\n        \"start_date\": start_date,\n        \"customer\": name\n    },as_dict=True)\n    grafik = sum_order_bymonth\n\nconditions = {}\nconditions[\"customer_group\"] = frappe.form_dict.customer_group\ncount = frappe.db.count(\"Customer\", filters=conditions)\ncustomer = name\nid_drw = q.id_drw\n\ndoc_poin_old = frappe.make_post_request('https://drwgroup.id/com.drw.skincare/1.0.0/userpointjson.php?id_drw='+id_drw)\nsum_poin_old = 0\nif doc_poin_old[0]['point'] is not None:\n    sum_poin_old = float(doc_poin_old[0]['point'])\n\ndoc_poin = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"get_point\",\">\",0],[\"application_status\",\"!=\",\"Dibatalkan\"],[\"customer\",\"=\",customer],[\"waktu_pemesanan\",\">\",\"2024-10-01 00:00:00\"]])\nsum_poin = 0\ndatapoin = []\nfor docpoin in doc_poin:\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": docpoin.name}, \"parent\")\n    if si is not None:\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\n        if sistat > 0: \n            sum_poin = sum_poin + docpoin.get_point\n            datapoin.append({\n                \"sales_order\": docpoin.name,\n                \"customer_name\": docpoin.customer_name,\n                \"application_status\": docpoin.application_status,\n                \"waktu_pemesanan\": docpoin.waktu_pemesanan,\n                \"waktu_pembayaran\": docpoin.waktu_pembayaran,\n                \"total_poin\": docpoin.get_point\n            })\n\npoin_reward = 0\npoin_reward = frappe.db.get_value(\"Point Reward\", {\"id_drw\": id_drw}, \"point\")\nif poin_reward is None: poin_reward = 0\n\ntotal_poin = sum_poin_old + sum_poin + poin_reward\n\ndoc_coin = frappe.get_all(\"Agent Coin Log\", fields=[\"*\"], filters=[[\"is_cashback\",\"=\",0],[\"customer\",\"=\",customer]])\nsum_coin = 0\ndatacoin = []\nfor doccoin in doc_coin:\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": doccoin.sales_order}, \"parent\")\n    if si is not None:\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\n        sistatus = frappe.db.get_value(\"Sales Invoice\", si, \"status\")\n        bank = frappe.db.get_value(\"Sales Invoice Metode Pembayaran\", {\"parent\": si}, \"nama_bank\")\n        docsi = frappe.get_doc(\"Sales Invoice\", si)\n        if bank is not None and sistat>0: \n            sum_coin = sum_coin + doccoin.total_coin\n            datacoin.append({\n                \"name\": doccoin.name,\n                \"customer_name\": doccoin.nama_agent,\n                \"sales_order\": doccoin.sales_order,\n                \"posting_date\": doccoin.posting_date,\n                \"total_coin\": doccoin.total_coin\n            })\n\ncoin_min = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"coin_type\",\"=\",\"Non Cashback\"],[\"total_coin\",\">\",0],[\"customer\",\"=\",customer]])\nsum_coin_min = 0\ndatacoinmin = []\nfor coinmin in coin_min:\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": coinmin.name}, \"parent\")\n    sistat = 0\n    if si is not None:\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\n        if sistat > 0:\n            sum_coin_min = sum_coin_min + coinmin.total_coin\n            datacoinmin.append({\n                \"sales_order\": coinmin.name,\n                \"customer_name\": coinmin.customer_name,\n                \"application_status\": coinmin.application_status,\n                \"waktu_pemesanan\": coinmin.waktu_pemesanan,\n                \"waktu_pembayaran\": coinmin.waktu_pembayaran,\n                \"coin_type\": coinmin.coin_type,\n                \"total_coin\": coinmin.total_coin\n            })\n\nwithdraw = frappe.get_all(\"Withdraw Coins\", fields=[\"*\"], filters=[[\"customer\",\"=\",customer]])\nsum_with = 0\ndatawith = []\nfor withd in withdraw:\n    sum_with = sum_with + withd.total_withdraw\n    datawith.append({\n        \"name\": withd.name,\n        \"customer_name\": withd.customer_name,\n        \"posting_date\": withd.posting_date,\n        \"status\": withd.status,\n        \"total_coin\": withd.total_withdraw\n    })\n\nsum_coin_total = sum_coin - sum_coin_min - sum_with\ncoin_total = sum_coin_total\nif sum_coin_total < 0: coin_total = 0\n\ncur_date = frappe.utils.today()\nlast_date = frappe.utils.add_to_date(cur_date,days=-30)\ncb_get = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"get_cashback\",\">\",0],[\"waktu_pembayaran\",\"is\",\"set\"],[\"application_status\",\"!=\",\"Dibatalkan\"],[\"customer\",\"=\",customer]])\nsum_cb_get = 0 \ndataget = []\nfor cbget in cb_get:\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": cbget.name}, \"parent\")\n    sistat = 0\n    if si is not None:\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\n        if sistat > 0:\n            sum_cb_get = sum_cb_get + cbget.get_cashback\n            dataget.append({\n                \"sales_order\": cbget.name,\n                \"customer_name\": cbget.customer_name,\n                \"sales_invoice\": sistat,\n                \"application_status\": cbget.application_status,\n                \"waktu_pemesanan\": cbget.waktu_pemesanan,\n                \"waktu_pembayaran\": cbget.waktu_pembayaran,\n                \"get_cashback\": cbget.get_cashback\n            })\n\ncb_min = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"coin_type\",\"=\",\"Cashback\"],[\"total_coin\",\">\",0],[\"application_status\",\"!=\",\"Dibatalkan\"],[\"customer\",\"=\",customer]])\nsum_cb_min = 0\ndatamin = []\nfor cbmin in cb_min:\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": cbmin.name}, \"parent\")\n    sistat = 0\n    if si is not None:\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\n    sum_cb_min = sum_cb_min + cbmin.total_coin\n    datamin.append({\n        \"sales_order\": cbmin.name,\n        \"customer_name\": cbmin.customer_name,\n        \"sales_invoice\": sistat,\n        \"application_status\": cbmin.application_status,\n        \"waktu_pemesanan\": cbmin.waktu_pemesanan,\n        \"waktu_pembayaran\": cbmin.waktu_pembayaran,\n        \"coin_type\": cbmin.coin_type,\n        \"total_coin\": cbmin.total_coin\n    })\n\nsum_cb_total = sum_cb_get-sum_cb_min\ncb_total = sum_cb_total\nif sum_cb_total < 0: cb_total = 0\n\nfrappe.response['datapoin'] = {\n    \"id_drw\": id_drw,\n    \"customer_name\": q.customer_name,\n    \"level\": q.customer_group,\n    \"sum_coin_get\": sum_coin,\n    \"sum_coin_min\": sum_coin_min,\n    \"sum_withdraw\": sum_with,\n    \"sum_total_coin\": sum_coin_total,\n    \"coins\": coin_total,\n    \"sum_cb_get\": sum_cb_get,\n    \"sum_cb_min\": sum_cb_min,\n    \"sum_total_cb\": sum_cb_total,\n    \"cashback\": cb_total,\n    \"point\": total_poin\n}\nfrappe.response['data'] = {\n    \"name\": q.name,\n    \"owner\": q.owner,\n    \"creation\": q.creation,\n    \"modified\": q.modified,\n    \"modified_by\": q.modified_by,\n    \"idx\": q.idx,\n    \"docstatus\": q.docstatus,\n    \"naming_series\": q.naming_series,\n    \"customer_name\": q.customer_name,\n    \"nik\": q.nik,\n    \"tanggal_lahir\": q.tanggal_lahir,\n    \"tempat_lahir\": q.tempat_lahir,\n    \"gender\": q.gender,\n    \"customer_type\": q.customer_type,\n    \"id_drw\": q.id_drw,\n    \"photo_profil\": q.photo_profil,\n    \"customer_group\": q.customer_group,\n    \"upline\": q.upline,\n    \"territory_lama\": q.territory_lama,\n    \"territory\": q.territory,\n    \"provinsi\": q.provinsi,\n    \"kabupaten_kota\": q.kabupaten_kota,\n    \"nomor_awalan_pajak\": q.nomor_awalan_pajak,\n    \"so_required\": q.so_required,\n    \"dn_required\": q.dn_required,\n    \"disabled\": q.disabled,\n    \"is_internal_customer\": q.is_internal_customer,\n    \"user_admin\": q.user_admin,\n    \"nama_tim\": q.nama_tim,\n    \"default_price_list\": q.default_price_list,\n    \"customer_primary_contact\": q.customer_primary_contact,\n    \"mobile_no\": q.mobile_no,\n    \"email_id\": q.email_id,\n    \"customer_primary_address\": q.customer_primary_address,\n    \"facebook\": q.facebook,\n    \"instagram\": q.instagram,\n    \"language\": q.language,\n    \"is_frozen\": q.is_frozen,\n    \"total_belanja\": q.total_belanja,\n    \"benlanja_terakhir\": q.benlanja_terakhir,\n    \"total_point\": total_poin,\n    \"remaining_point\": q.remaining_point,\n    \"total_coins\": coin_total,\n    \"total_coin_cashback\": cb_total,\n    \"limit_kasbon\": q.limit_kasbon,\n    \"klaim_kasbon\": q.klaim_kasbon,\n    \"jatuh_tempo\": q.jatuh_tempo,\n    \"percentage_kasbon\": q.percentage_kasbon,\n    \"default_sales_partner\": q.default_sales_partner,\n    \"default_commission_rate\": q.default_commission_rate,\n    \"doctype\": q.doctype,\n    \"companies\": q.companies,\n    \"accounts\": q.accounts,\n    \"credit_limits\": q.credit_limits,\n    \"sales_team\": q.sales_team,\n    \"is_verified\": q.is_verified\n}\nfrappe.response['count'] = count\nfrappe.response['details'] = {\n    \"upline_contact\": upline_contact,\n    \"total_order_thisyear\": sum_order,\n    \"count_order_thisyear\": count_order,\n    \"total_order_lastyear\": sum_order_lastyear_30,\n    \"count_order_lastyear\": count_order_lastyear,\n    \"total_order_lastmonth\": sum_order_lastmonth_30,\n    \"total_order_month\": sum_order_month,\n    \"count_order_month\": count_order_month,\n    \"total_order_downline\": sum_order_downline,\n    \"count_order_downline\": count_order_downline,\n    \"total_downline\": count_downline,\n    \"limit_target\": limit_target,\n    \"max_target\": max_target,\n    \"nama_target\": nama_target,\n    \"limit_target_percent_thismonth\": limit_target_percent_thismonth,\n    \"limit_target_percent_lastmonth\": limit_target_percent_lastmonth,\n    \"limit_target_thisyear\": limit_target_thisyear,\n    \"limit_target_percent_thisyear\": limit_target_percent_thisyear,\n    \"limit_target_percent_lastyear\": limit_target_percent_lastyear,\n    \"count_downline\": count_downline_thismonth,\n    \"target_downline\": target_downline,\n    \"percent_downline\": percent_downline,\n    \"grafik\": grafik\n}\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v3.get.user.profile",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-11-14 15:26:59.266074",
  "name": "New Apps - Get User Profile v3",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\r\n\r\ndoc = frappe.get_doc(\"Customer\", customer)\r\nid_drw = doc.id_drw\r\n\r\ndoc_poin_old = frappe.make_post_request('https://drwgroup.id/com.drw.skincare/1.0.0/userpointjson.php?id_drw='+id_drw)\r\nsum_poin_old = 0\r\nif doc_poin_old[0]['point'] is not None:\r\n    sum_poin_old = float(doc_poin_old[0]['point'])\r\n\r\ndoc_poin = frappe.get_all(\"Sales Order\", fields=[\"name\", \"customer\",\"customer_name\",\"get_point\",\"status\",\"docstatus\",\"application_status\",\"waktu_pembayaran\"], filters=[[\"docstatus\",\"=\",1],[\"get_point\",\">\",0],[\"waktu_pembayaran\",\"is\",\"set\"],[\"customer\",\"=\",customer],[\"waktu_pembayaran\",\">\",\"2024-10-01 00:00:00\"]])\r\nsum_poin = 0\r\ndatapoin = []\r\nfor docpoin in doc_poin:\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": docpoin.name}, \"parent\")\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n        if sistat > 0: \r\n            sum_poin = sum_poin + docpoin.get_point\r\n            datapoin.append({\r\n                \"total_poin\": docpoin.get_point\r\n            })\r\n\r\npoin_reward = 0\r\npoin_reward = frappe.db.get_value(\"Point Reward\", {\"id_drw\": id_drw}, \"point\")\r\nif poin_reward is None: poin_reward = 0\r\n\r\ntotal_poin = sum_poin_old + sum_poin + poin_reward\r\ndatapoinget = {\r\n    \"id_drw\": id_drw,\r\n    \"sum_poin_old\": sum_poin_old,\r\n    \"sum_poin_new\": sum_poin,\r\n    \"sum_poin_reward\": poin_reward,\r\n    \"total_poin\": total_poin\r\n}\r\n\r\ndoc_coin = frappe.get_all(\"Agent Coin Log\", fields=[\"name\", \"customer\",\"sales_order\",\"total_coin\"], filters=[[\"is_cashback\",\"=\",0],[\"customer\",\"=\",customer]])\r\nsum_coin = 0\r\ndatacoin = []\r\nfor doccoin in doc_coin:\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": doccoin.sales_order}, \"parent\")\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n        sistatus = frappe.db.get_value(\"Sales Invoice\", si, \"status\")\r\n        bank = frappe.db.get_value(\"Sales Invoice Metode Pembayaran\", {\"parent\": si}, \"nama_bank\")\r\n        docsi = frappe.get_doc(\"Sales Invoice\", si)\r\n        if bank is not None and sistat>0: \r\n            sum_coin = sum_coin + doccoin.total_coin\r\n            datacoin.append({\r\n                \"total_coin\": doccoin.total_coin\r\n            })\r\n\r\ncoin_min = frappe.get_all(\"Sales Order\", fields=[\"name\", \"customer\",\"coin_type\",\"total_coin\",\"status\",\"docstatus\",\"application_status\",\"waktu_pembayaran\"], filters=[[\"docstatus\",\"=\",1],[\"coin_type\",\"=\",\"Non Cashback\"],[\"total_coin\",\">\",0],[\"customer\",\"=\",customer]])\r\nsum_coin_min = 0\r\ndatacoinmin = []\r\nfor coinmin in coin_min:\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": coinmin.name}, \"parent\")\r\n    sistat = 0\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n        if sistat > 0:\r\n            sum_coin_min = sum_coin_min + coinmin.total_coin\r\n\r\nsum_coin_total = sum_coin - sum_coin_min\r\nif sum_coin_total < 0: sum_coin_total = 0\r\n\r\ncur_date = frappe.utils.today()\r\nlast_date = frappe.utils.add_to_date(cur_date,days=-30)\r\ncb_get = frappe.get_all(\"Sales Order\", fields=[\"name\", \"customer\",\"get_cashback\",\"coin_type\",\"total_coin\",\"status\",\"docstatus\",\"application_status\",\"waktu_pembayaran\"], filters=[[\"docstatus\",\"=\",1],[\"get_cashback\",\">\",0],[\"waktu_pembayaran\",\"is\",\"set\"],[\"customer\",\"=\",customer]])\r\ncb_min = frappe.get_all(\"Sales Order\", fields=[\"name\", \"customer\",\"get_cashback\",\"coin_type\",\"total_coin\",\"status\",\"docstatus\",\"application_status\",\"waktu_pembayaran\"], filters=[[\"docstatus\",\"=\",1],[\"coin_type\",\"=\",\"Cashback\"],[\"total_coin\",\">\",0],[\"customer\",\"=\",customer]])\r\n\r\nsum_cb_get = 0 \r\nsum_cb_min = 0\r\n\r\ndataget = []\r\nfor cbget in cb_get:\r\n    sum_cb_get = sum_cb_get + cbget.get_cashback\r\n    dataget.append({\r\n        \"name\": cbget.name,\r\n        \"customer\": cbget.customer,\r\n        \"get_cashback\": cbget.get_cashback,\r\n        \"coin_type\": cbget.coin_type,\r\n        \"total_coin\": cbget.total_coin,\r\n        \"status\": cbget.status,\r\n        \"docstatus\": cbget.docstatus,\r\n        \"application_status\": cbget.application_status,\r\n        \"waktu_pembayaran\": cbget.waktu_pembayaran\r\n    })\r\n\r\ndatamin = []\r\nfor cbmin in cb_min:\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": cbmin.name}, \"parent\")\r\n    sistat = 0\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n        if sistat > 0:\r\n            sum_cb_min = sum_cb_min + cbmin.total_coin\r\n    datamin.append({\r\n        \"name\": cbmin.name,\r\n        \"customer\": cbmin.customer,\r\n        \"get_cashback\": cbmin.get_cashback,\r\n        \"coin_type\": cbmin.coin_type,\r\n        \"total_coin\": cbmin.total_coin,\r\n        \"status\": cbmin.status,\r\n        \"docstatus\": cbmin.docstatus,\r\n        \"sales_invoice\": sistat,\r\n        \"application_status\": cbmin.application_status,\r\n        \"waktu_pembayaran\": cbmin.waktu_pembayaran\r\n    })\r\n\r\nsum_cb_total = sum_cb_get-sum_cb_min\r\nif sum_cb_total < 0: sum_cb_total = 0\r\n\r\ndatacbget = frappe.call(\"api.v2.calculate.cb.coin\",customer=\"BC-061719\")\r\n\r\nfrappe.response['datacbget'] = datacbget\r\nfrappe.response['datapoinget'] = datapoinget\r\nfrappe.response['datacb'] = {\r\n    \"cur_date\": cur_date,\r\n    \"last_date\": last_date,\r\n    \"sum_cb_get\": sum_cb_get,\r\n    \"sum_cb_min\": sum_cb_min,\r\n    \"sum_cb_total\": sum_cb_total\r\n}\r\nfrappe.response['data'] = {\r\n    \"coins\": sum_coin_total,\r\n    \"cashback\": sum_cb_total,\r\n    \"point\": total_poin\r\n}\r\nfrappe.response['datapoin'] = doc_poin\r\nfrappe.response['datacoin'] = doc_coin\r\nfrappe.response['cbget'] = dataget\r\nfrappe.response['cbmin'] = datamin",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.get.agen.old",
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-26 16:47:48.657895",
  "name": "New Apps - Get Agen Detail Old",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "limit = frappe.form_dict.limit\nstart = frappe.form_dict.start\nfilters = frappe.form_dict.filters\nfields = frappe.form_dict.fields\norder_by = frappe.form_dict.order_by\nname = frappe.form_dict.name\n\nif limit is None:\n    limit = 20\n\nif start is None:\n    start = 0\n\nif filters is None:\n    filters = [[\"customer_group\",\"=\",\"Director\"]]\n\nif fields is None:\n    fields = [\"name\",\"customer_name\",\"id_drw\",\"customer_group\",\"default_price_list\",\"mobile_no\",\"email_id\",\"territory\",\"upline\"]\n\nif order_by is None:\n    order_by = \"customer_name asc\"\n\nif name is None:\n    q = frappe.get_all(\"Customer\", filters=filters, fields=fields,limit_page_length=limit,limit_start=start,order_by=order_by)\nelse:\n    lastyear = \"Last Year\"\n    thisyear = \"This Year\"\n    thismonth = \"This Month\"\n    get_order_lastyear = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",lastyear.lower()],[\"docstatus\", \"=\", 1],[\"customer\",\"=\",name]])\n    count_order_lastyear = len(get_order_lastyear)\n    sum_order_lastyear = 0\n    if count_order_lastyear>0:\n        sum_order_lastyear = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": get_order_lastyear})[0][0]\n    sum_order_lastmonth = sum_order_lastyear/12\n    get_order = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",thisyear.lower()],[\"docstatus\", \"=\", 1],[\"customer\",\"=\",name]])\n    count_order = len(get_order)\n    sum_order = 0\n    if count_order>0:\n        sum_order = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": get_order})[0][0]\n    get_order_month = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",thismonth.lower()],[\"docstatus\", \"=\", 1],[\"customer\",\"=\",name]])\n    count_order_month = len(get_order_month)\n    sum_order_month = 0\n    if count_order_month>0:\n        sum_order_month = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": get_order_month})[0][0]\n    get_order_downline = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"transaction_date\",\"timespan\",thisyear.lower()],[\"docstatus\", \"=\", 1],[\"upline\",\"=\",name]])\n    count_order_downline = len(get_order_downline)\n    sum_order_downline = 0\n    if count_order_downline>0:\n        sum_order_downline = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Order` where name in %(names)s\", {\"names\": get_order_downline})[0][0]\n    get_downline = frappe.get_all(\"Customer\", pluck=\"name\",filters=[[\"upline\",\"=\",name]])\n    get_downline_thismonth = frappe.get_all(\"Customer\", pluck=\"name\",filters=[[\"upline\",\"=\",name],[\"creation\",\"timespan\",thismonth.lower()]])\n    count_downline = len(get_downline)\n    count_downline_thismonth = len(get_downline_thismonth)\n    target_downline = 10\n    percent_downline = count_downline_thismonth/target_downline*100\n    q = frappe.get_doc(\"Customer\", name)\n    g = frappe.get_doc(\"Customer Group\", q.customer_group)\n    upline_contact = frappe.db.get_value(\"Customer\", q.upline, \"mobile_no\")\n        \n    limit_target = 0\n    for t in g.target:\n        if limit_target == 0:\n            limit_target = t.limit_target\n            max_target = t.max_target\n            nama_target = t.nama_target\n        if sum_order_month >= t.limit_target:\n            limit_target = t.limit_target\n            max_target = t.max_target\n            nama_target = t.nama_target\n    limit_target_percent_thismonth = sum_order_month/max_target*100\n    sum_order_lastmonth_30 = sum_order_lastmonth + (sum_order_lastmonth*(30/100))\n    limit_target_thisyear = 12*limit_target \n    limit_target_percent_thisyear = sum_order/limit_target_thisyear*100\n    sum_order_lastyear_30 = sum_order_lastyear + (sum_order_lastyear*(30/100))\n    if sum_order_lastmonth_30 > 0: limit_target_percent_lastmonth = sum_order_month/sum_order_lastmonth_30*100\n    else: limit_target_percent_lastmonth = 0\n    if sum_order_lastyear_30 > 0: limit_target_percent_lastyear = sum_order/sum_order_lastyear_30*100\n    else: limit_target_percent_lastyear = 0\n    grafik = {}\n    today = frappe.utils.today()\n    start_year = str(int(today[0:4])-1)\n    start_date = start_year+'-1-1'\n    start_date = frappe.utils.getdate(start_date)\n    sum_order_bymonth = frappe.db.sql(\"select month(posting_date) as month, DATE_FORMAT(posting_date, '%%M') as month_label, sum(if(year(posting_date)=2023,ifnull(grand_total,0),0)) as prev_year,sum(if(year(posting_date)=2024,ifnull(grand_total,0),0)) as current_year from `tabSales Invoice` where posting_date >= %(start_date)s and docstatus = 1 and customer = %(customer)s group by month order by month asc\",{\n        \"start_date\": start_date,\n        \"customer\": name\n    },as_dict=True)\n    grafik = sum_order_bymonth\n\nconditions = {}\nconditions[\"customer_group\"] = frappe.form_dict.customer_group\ncount = frappe.db.count(\"Customer\", filters=conditions)\n\ndoc_coin = frappe.get_all(\"Agent Coin Log\", fields=[\"name\", \"customer\",\"sales_order\",\"total_coin\"], filters=[[\"is_cashback\",\"=\",0],[\"customer\",\"=\",name]])\nsum_coin = 0\nfor doccoin in doc_coin:\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": doccoin.sales_order}, \"parent\")\n    if si is not None:\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\n        sistatus = frappe.db.get_value(\"Sales Invoice\", si, \"status\")\n        bank = frappe.db.get_value(\"Sales Invoice Metode Pembayaran\", {\"parent\": si}, \"nama_bank\")\n        docsi = frappe.get_doc(\"Sales Invoice\", si)\n        if bank is not None and sistat>0: sum_coin = sum_coin + doccoin.total_coin\n\ncb_get = frappe.get_all(\"Sales Order\", fields=[\"name\", \"customer\",\"get_cashback\",\"coin_type\",\"total_coin\",\"status\",\"docstatus\",\"application_status\",\"waktu_pembayaran\"], filters=[[\"docstatus\",\"=\",1],[\"get_cashback\",\">\",0],[\"waktu_pembayaran\",\"is\",\"set\"],[\"customer\",\"=\",name],[\"waktu_pembayaran\",\"Timespan\",\"this month\"]])\ncb_min = frappe.get_all(\"Sales Order\", fields=[\"name\", \"customer\",\"get_cashback\",\"coin_type\",\"total_coin\",\"status\",\"docstatus\",\"application_status\",\"waktu_pembayaran\"], filters=[[\"docstatus\",\"=\",1],[\"coin_type\",\"=\",\"Cashback\"],[\"total_coin\",\">\",0],[\"waktu_pembayaran\",\"is\",\"set\"],[\"customer\",\"=\",name],[\"waktu_pembayaran\",\"Timespan\",\"this month\"]])\n\nsum_cb_get = 0 \nsum_cb_min = 0\n\ndataget = []\nfor cbget in cb_get:\n    sum_cb_get = sum_cb_get + cbget.get_cashback\n    dataget.append({\n        \"name\": cbget.name,\n        \"customer\": cbget.customer,\n        \"get_cashback\": cbget.get_cashback,\n        \"coin_type\": cbget.coin_type,\n        \"total_coin\": cbget.total_coin,\n        \"status\": cbget.status,\n        \"docstatus\": cbget.docstatus,\n        \"application_status\": cbget.application_status,\n        \"waktu_pembayaran\": cbget.waktu_pembayaran\n    })\n\ndatamin = []\nfor cbmin in cb_min:\n    sum_cb_min = sum_cb_min + cbmin.total_coin\n    datamin.append({\n        \"name\": cbmin.name,\n        \"customer\": cbmin.customer,\n        \"get_cashback\": cbmin.get_cashback,\n        \"coin_type\": cbmin.coin_type,\n        \"total_coin\": cbmin.total_coin,\n        \"status\": cbmin.status,\n        \"docstatus\": cbmin.docstatus,\n        \"application_status\": cbmin.application_status,\n        \"waktu_pembayaran\": cbmin.waktu_pembayaran\n    })\n\nsum_cb_total = sum_cb_get-sum_cb_min\nif sum_cb_total < 0: sum_cb_total = 0\n\nfrappe.response['datacb'] = {\n    \"sum_cb_get\": sum_cb_get,\n    \"sum_cb_min\": sum_cb_min,\n    \"sum_cb_total\": sum_cb_total\n}\n\nfrappe.response['data'] = {\n    \"name\": q.name,\n    \"owner\": q.owner,\n    \"creation\": q.creation,\n    \"modified\": q.modified,\n    \"modified_by\": q.modified_by,\n    \"idx\": q.idx,\n    \"docstatus\": q.docstatus,\n    \"naming_series\": q.naming_series,\n    \"customer_name\": q.customer_name,\n    \"nik\": q.nik,\n    \"tanggal_lahir\": q.tanggal_lahir,\n    \"tempat_lahir\": q.tempat_lahir,\n    \"gender\": q.gender,\n    \"customer_type\": q.customer_type,\n    \"id_drw\": q.id_drw,\n    \"photo_profil\": q.photo_profil,\n    \"customer_group\": q.customer_group,\n    \"upline\": q.upline,\n    \"territory_lama\": q.territory_lama,\n    \"territory\": q.territory,\n    \"provinsi\": q.provinsi,\n    \"kabupaten_kota\": q.kabupaten_kota,\n    \"nomor_awalan_pajak\": q.nomor_awalan_pajak,\n    \"so_required\": q.so_required,\n    \"dn_required\": q.dn_required,\n    \"disabled\": q.disabled,\n    \"is_internal_customer\": q.is_internal_customer,\n    \"user_admin\": q.user_admin,\n    \"nama_tim\": q.nama_tim,\n    \"default_price_list\": q.default_price_list,\n    \"customer_primary_contact\": q.customer_primary_contact,\n    \"mobile_no\": q.mobile_no,\n    \"email_id\": q.email_id,\n    \"customer_primary_address\": q.customer_primary_address,\n    \"facebook\": q.facebook,\n    \"instagram\": q.instagram,\n    \"language\": q.language,\n    \"is_frozen\": q.is_frozen,\n    \"total_belanja\": q.total_belanja,\n    \"benlanja_terakhir\": q.benlanja_terakhir,\n    \"total_point\": q.total_point,\n    \"remaining_point\": q.remaining_point,\n    \"total_coins\": sum_coin,\n    \"total_coin_cashback\": sum_cb_total,\n    \"limit_kasbon\": q.limit_kasbon,\n    \"klaim_kasbon\": q.klaim_kasbon,\n    \"jatuh_tempo\": q.jatuh_tempo,\n    \"percentage_kasbon\": q.percentage_kasbon,\n    \"default_sales_partner\": q.default_sales_partner,\n    \"default_commission_rate\": q.default_commission_rate,\n    \"doctype\": q.doctype,\n    \"companies\": q.companies,\n    \"accounts\": q.accounts,\n    \"credit_limits\": q.credit_limits,\n    \"sales_team\": q.sales_team\n}\nfrappe.response['count'] = count\nfrappe.response['details'] = {\n    \"upline_contact\": upline_contact,\n    \"total_order_thisyear\": sum_order,\n    \"count_order_thisyear\": count_order,\n    \"total_order_lastyear\": sum_order_lastyear_30,\n    \"count_order_lastyear\": count_order_lastyear,\n    \"total_order_lastmonth\": sum_order_lastmonth_30,\n    \"total_order_month\": sum_order_month,\n    \"count_order_month\": count_order_month,\n    \"total_order_downline\": sum_order_downline,\n    \"count_order_downline\": count_order_downline,\n    \"total_downline\": count_downline,\n    \"limit_target\": limit_target,\n    \"max_target\": max_target,\n    \"nama_target\": nama_target,\n    \"limit_target_percent_thismonth\": limit_target_percent_thismonth,\n    \"limit_target_percent_lastmonth\": limit_target_percent_lastmonth,\n    \"limit_target_thisyear\": limit_target_thisyear,\n    \"limit_target_percent_thisyear\": limit_target_percent_thisyear,\n    \"limit_target_percent_lastyear\": limit_target_percent_lastyear,\n    \"count_downline\": count_downline_thismonth,\n    \"target_downline\": target_downline,\n    \"percent_downline\": percent_downline,\n    \"grafik\": grafik\n}\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.get.user.profile.old",
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-25 11:42:26.711321",
  "name": "New Apps - Get User Profile Old",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\r\n\r\ndoc = frappe.get_doc(\"Customer\", customer)\r\nid_drw = doc.id_drw\r\n\r\ndoc_poin_old = frappe.make_post_request('https://drwgroup.id/com.drw.skincare/1.0.0/userpointjson.php?id_drw='+id_drw)\r\nsum_poin_old = 0\r\nif doc_poin_old[0]['point'] is not None:\r\n    sum_poin_old = float(doc_poin_old[0]['point'])\r\n\r\ndoc_poin = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"get_point\",\">\",0],[\"application_status\",\"!=\",\"Dibatalkan\"],[\"customer\",\"=\",customer],[\"waktu_pemesanan\",\">\",\"2024-10-01 00:00:00\"]])\r\nsum_poin = 0\r\ndatapoin = []\r\nfor docpoin in doc_poin:\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": docpoin.name}, \"parent\")\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n        if sistat > 0: \r\n            sum_poin = sum_poin + docpoin.get_point\r\n            datapoin.append({\r\n                \"sales_order\": docpoin.name,\r\n                \"customer_name\": docpoin.customer_name,\r\n                \"application_status\": docpoin.application_status,\r\n                \"waktu_pemesanan\": docpoin.waktu_pemesanan,\r\n                \"waktu_pembayaran\": docpoin.waktu_pembayaran,\r\n                \"total_poin\": docpoin.get_point\r\n            })\r\n\r\npoin_reward = 0\r\npoin_reward = frappe.db.get_value(\"Point Reward\", {\"id_drw\": id_drw}, \"point\")\r\nif poin_reward is None: poin_reward = 0\r\n\r\ntotal_poin = sum_poin_old + sum_poin + poin_reward\r\ndatapoinget = {\r\n    \"id_drw\": id_drw,\r\n    \"customer_name\": doc.customer_name,\r\n    \"level\": doc.customer_group,\r\n    \"sum_poin_old\": sum_poin_old,\r\n    \"sum_poin_new\": sum_poin,\r\n    \"sum_poin_reward\": poin_reward,\r\n    \"total_poin\": total_poin\r\n}\r\n\r\ndoc_coin = frappe.get_all(\"Agent Coin Log\", fields=[\"*\"], filters=[[\"is_cashback\",\"=\",0],[\"customer\",\"=\",customer]])\r\nsum_coin = 0\r\ndatacoin = []\r\nfor doccoin in doc_coin:\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": doccoin.sales_order}, \"parent\")\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n        sistatus = frappe.db.get_value(\"Sales Invoice\", si, \"status\")\r\n        bank = frappe.db.get_value(\"Sales Invoice Metode Pembayaran\", {\"parent\": si}, \"nama_bank\")\r\n        docsi = frappe.get_doc(\"Sales Invoice\", si)\r\n        if bank is not None and sistat>0: \r\n            sum_coin = sum_coin + doccoin.total_coin\r\n            datacoin.append({\r\n                \"name\": doccoin.name,\r\n                \"customer_name\": doccoin.nama_agent,\r\n                \"sales_order\": doccoin.sales_order,\r\n                \"posting_date\": doccoin.posting_date,\r\n                \"total_coin\": doccoin.total_coin\r\n            })\r\n\r\ncoin_min = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"coin_type\",\"=\",\"Non Cashback\"],[\"total_coin\",\">\",0],[\"application_status\",\"!=\",\"Dibatalkan\"],[\"customer\",\"=\",customer]])\r\nsum_coin_min = 0\r\ndatacoinmin = []\r\nfor coinmin in coin_min:\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": coinmin.name}, \"parent\")\r\n    sistat = 0\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n        if sistat > 0:\r\n            sum_coin_min = sum_coin_min + coinmin.total_coin\r\n            datacoinmin.append({\r\n                \"sales_order\": coinmin.name,\r\n                \"customer_name\": coinmin.customer_name,\r\n                \"application_status\": coinmin.application_status,\r\n                \"waktu_pemesanan\": coinmin.waktu_pemesanan,\r\n                \"waktu_pembayaran\": coinmin.waktu_pembayaran,\r\n                \"coin_type\": coinmin.coin_type,\r\n                \"total_coin\": coinmin.total_coin\r\n            })\r\n\r\nwithdraw = frappe.get_all(\"Withdraw Coins\", fields=[\"*\"], filters=[[\"customer\",\"=\",customer]])\r\nsum_with = 0\r\ndatawith = []\r\nfor withd in withdraw:\r\n    sum_with = sum_with + withd.total_withdraw\r\n    datawith.append({\r\n        \"name\": withd.name,\r\n        \"customer_name\": withd.customer_name,\r\n        \"posting_date\": withd.posting_date,\r\n        \"status\": withd.status,\r\n        \"total_coin\": withd.total_withdraw\r\n    })\r\n\r\nsum_coin_total = sum_coin - sum_coin_min - sum_with\r\ncoin_total = sum_coin_total\r\nif sum_coin_total < 0: coin_total = 0\r\n\r\ncur_date = frappe.utils.today()\r\nlast_date = frappe.utils.add_to_date(cur_date,days=-30)\r\ncb_get = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"get_cashback\",\">\",0],[\"waktu_pembayaran\",\"is\",\"set\"],[\"application_status\",\"!=\",\"Dibatalkan\"],[\"customer\",\"=\",customer]])\r\nsum_cb_get = 0 \r\ndataget = []\r\nfor cbget in cb_get:\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": cbget.name}, \"parent\")\r\n    sistat = 0\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n        if sistat > 0:\r\n            sum_cb_get = sum_cb_get + cbget.get_cashback\r\n            dataget.append({\r\n                \"sales_order\": cbget.name,\r\n                \"customer_name\": cbget.customer_name,\r\n                \"sales_invoice\": sistat,\r\n                \"application_status\": cbget.application_status,\r\n                \"waktu_pemesanan\": cbget.waktu_pemesanan,\r\n                \"waktu_pembayaran\": cbget.waktu_pembayaran,\r\n                \"get_cashback\": cbget.get_cashback\r\n            })\r\n\r\ncb_min = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"coin_type\",\"=\",\"Cashback\"],[\"total_coin\",\">\",0],[\"application_status\",\"!=\",\"Dibatalkan\"],[\"customer\",\"=\",customer]])\r\nsum_cb_min = 0\r\ndatamin = []\r\nfor cbmin in cb_min:\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": cbmin.name}, \"parent\")\r\n    sistat = 0\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n    sum_cb_min = sum_cb_min + cbmin.total_coin\r\n    datamin.append({\r\n        \"sales_order\": cbmin.name,\r\n        \"customer_name\": cbmin.customer_name,\r\n        \"sales_invoice\": sistat,\r\n        \"application_status\": cbmin.application_status,\r\n        \"waktu_pemesanan\": cbmin.waktu_pemesanan,\r\n        \"waktu_pembayaran\": cbmin.waktu_pembayaran,\r\n        \"coin_type\": cbmin.coin_type,\r\n        \"total_coin\": cbmin.total_coin\r\n    })\r\n\r\nsum_cb_total = sum_cb_get-sum_cb_min\r\ncb_total = sum_cb_total\r\nif sum_cb_total < 0: cb_total = 0\r\n\r\nfrappe.response['data'] = {\r\n    \"id_drw\": id_drw,\r\n    \"customer_name\": doc.customer_name,\r\n    \"level\": doc.customer_group,\r\n    \"sum_coin_get\": sum_coin,\r\n    \"sum_coin_min\": sum_coin_min,\r\n    \"sum_withdraw\": sum_with,\r\n    \"sum_total_coin\": sum_coin_total,\r\n    \"coins\": coin_total,\r\n    \"sum_cb_get\": sum_cb_get,\r\n    \"sum_cb_min\": sum_cb_min,\r\n    \"sum_total_cb\": sum_cb_total,\r\n    \"cashback\": cb_total,\r\n    \"point\": total_poin\r\n}\r\nfrappe.response['datapoin'] = datapoinget\r\nfrappe.response['poinget'] = datapoin\r\nfrappe.response['coinget'] = datacoin\r\nfrappe.response['coinmin'] = datacoinmin\r\nfrappe.response['withdraw'] = datawith\r\nfrappe.response['cbget'] = dataget\r\nfrappe.response['cbmin'] = datamin\r\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.list.history.coins.old",
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-28 06:11:10.249658",
  "name": "New Apps - List History Coins Old",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\r\ncashback = 0\r\nlimit = frappe.form_dict.limit\r\nstart = frappe.form_dict.start\r\n\r\nif limit is None: limit = 20\r\nif start is None: start = 0\r\n\r\nfields = [\"name\", \"customer\",\"nama_agent\",\"posting_date\",\"sales_order\",\"kelipatan\",\"total_margin\",\"total_coin\"]\r\nfilters = [[\"is_cashback\",\"=\",cashback],[\"customer\",\"=\",customer]]\r\n\r\ndoc = frappe.get_all(\"Agent Coin Log\", fields=fields, filters=filters, order_by=\"modified desc\")\r\n\r\nlen_coin = 0\r\nsum_coin = 0\r\ndata = []\r\nfor docs in doc:\r\n    customer_name = frappe.db.get_value(\"Sales Order\",docs.sales_order,\"customer_name\")\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": docs.sales_order}, \"parent\")\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n        sistatus = frappe.db.get_value(\"Sales Invoice\", si, \"status\")\r\n        bank = frappe.db.get_value(\"Sales Invoice Metode Pembayaran\", {\"parent\": si}, \"nama_bank\")\r\n        docsi = frappe.get_doc(\"Sales Invoice\", si)\r\n        if bank is not None and sistat>0:\r\n            len_coin = len_coin + 1\r\n            sum_coin = sum_coin + docs.total_coin\r\n            data.append({\r\n                \"name\": docs.name,\r\n                \"customer\": docs.customer,\r\n                \"nama_agent\": docs.nama_agent,\r\n                \"posting_date\": docs.posting_date,\r\n                \"sales_order\": docs.sales_order,\r\n                \"sales_order_name\": customer_name,\r\n                \"kelipatan\": docs.kelipatan,\r\n                \"total_margin\": docs.total_margin,\r\n                \"total_coin\": docs.total_coin,\r\n                \"status\": sistatus,\r\n                \"bank\": bank\r\n            })\r\n\r\ndoccoin = frappe.db.sql(\"select DISTINCT a.name,a.total_coin,c.nama_bank from `tabAgent Coin Log` a left join `tabSales Invoice Item` b on a.sales_order=b.sales_order left join `tabSales Invoice Metode Pembayaran` c on b.parent=c.parent where a.is_cashback=0 and a.customer=%(customer)s and c.nama_bank is not null order by c.nama_bank ASC\", {\"customer\": customer})\r\n\r\nfrappe.response['info'] = {\r\n    \"sum_coin\": sum_coin,\r\n    \"len_coin\": len_coin\r\n    }\r\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.calculate.cb.coin",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-28 13:53:22.071784",
  "name": "New Apps - Calculate Cashback Coin",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\r\n\r\ncb_get = frappe.get_all(\"Sales Order\", fields=[\"name\", \"customer\",\"get_cashback\",\"coin_type\",\"total_coin\",\"status\",\"docstatus\",\"application_status\",\"waktu_pembayaran\"], filters=[[\"docstatus\",\"=\",1],[\"get_cashback\",\">\",0],[\"waktu_pembayaran\",\"is\",\"set\"],[\"customer\",\"=\",customer],[\"waktu_pembayaran\",\"Timespan\",\"this month\"]])\r\ncb_min = frappe.get_all(\"Sales Order\", fields=[\"name\", \"customer\",\"get_cashback\",\"coin_type\",\"total_coin\",\"status\",\"docstatus\",\"application_status\",\"waktu_pembayaran\"], filters=[[\"docstatus\",\"=\",1],[\"coin_type\",\"=\",\"Cashback\"],[\"total_coin\",\">\",0],[\"customer\",\"=\",customer]])\r\n\r\nsum_cb_get = 0 \r\nsum_cb_min = 0\r\n\r\ndataget = []\r\nfor cbget in cb_get:\r\n    sum_cb_get = sum_cb_get + cbget.get_cashback\r\n    dataget.append({\r\n        \"name\": cbget.name,\r\n        \"customer\": cbget.customer,\r\n        \"get_cashback\": cbget.get_cashback,\r\n        \"coin_type\": cbget.coin_type,\r\n        \"total_coin\": cbget.total_coin,\r\n        \"status\": cbget.status,\r\n        \"docstatus\": cbget.docstatus,\r\n        \"application_status\": cbget.application_status,\r\n        \"waktu_pembayaran\": cbget.waktu_pembayaran\r\n    })\r\n\r\ndatamin = []\r\nfor cbmin in cb_min:\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": cbmin.name}, \"parent\")\r\n    sistat = 0\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n        if sistat > 0:\r\n            sum_cb_min = sum_cb_min + cbmin.total_coin\r\n    datamin.append({\r\n        \"name\": cbmin.name,\r\n        \"customer\": cbmin.customer,\r\n        \"get_cashback\": cbmin.get_cashback,\r\n        \"coin_type\": cbmin.coin_type,\r\n        \"total_coin\": cbmin.total_coin,\r\n        \"status\": cbmin.status,\r\n        \"docstatus\": cbmin.docstatus,\r\n        \"sales_invoice\": sistat,\r\n        \"application_status\": cbmin.application_status,\r\n        \"waktu_pembayaran\": cbmin.waktu_pembayaran\r\n    })\r\n\r\nsum_cb_total = sum_cb_get-sum_cb_min\r\nif sum_cb_total < 0: sum_cb_total = 0\r\n\r\nfrappe.response['data'] = {\r\n    \"sum_cb_get\": sum_cb_get,\r\n    \"sum_cb_min\": sum_cb_min,\r\n    \"sum_cb_total\": sum_cb_total\r\n}",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.get.user.point",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-10-30 13:27:27.038271",
  "name": "Super Apps - Get User Point",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "id_drw = frappe.form_dict.id_drw\r\n\r\ncustomer = frappe.db.get_value(\"Customer\", {\"id_drw\": id_drw}, \"name\")\r\nfilters = [[\"docstatus\",\"=\",1],[\"grand_total\",\">\",0],[\"customer\",\"=\",customer],[\"drop_center\",\"like\",\"DC%\"],[\"application_status\",\"!=\",\"Dibatalkan\"]]\r\n\r\ndoc_poin = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=filters)\r\nsum_poin = 0\r\ndatapoin = []\r\nfor docpoin in doc_poin:\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": docpoin.name}, \"parent\")\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n        if sistat > 0: \r\n            sum_poin = sum_poin + docpoin.get_point\r\n            datapoin.append({\r\n                \"name\": docpoin.name,\r\n                \"customer\": docpoin.customer,\r\n                \"customer_name\": docpoin.customer_name,\r\n                \"get_point\": docpoin.get_point,\r\n                \"type_coin\": docpoin.type_coin,\r\n                \"docstatus\": docpoin.docstatus,\r\n                \"application_status\": docpoin.application_status,\r\n                \"waktu_pembayaran\": docpoin.waktu_pembayaran,\r\n                \"drop_center\": docpoin.drop_center,\r\n                \"grand_total\": docpoin.grand_total\r\n            })\r\n\r\nfrappe.response['data'] = datapoin",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.sinkron.add.customer",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-11-03 20:03:00.334228",
  "name": "Super Apps - Sinkrod Add Data Customer v2",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "json_param = frappe.request.data\ndata = json.loads(json_param)\n\ndata['doctype'] = \"Customer\"\nif data['upline']!=\"\":\n    upline = frappe.db.get_value(\"Customer\", {\"id_drw\": data['upline']})\n    data['upline'] = upline\ncustexist = frappe.db.get_value(\"Customer\", {\"id_drw\": data['id_drw']})\n\nuser = {\n    \"email\": data['email_id'],\n    \"username\": data['id_drw'],\n    \"new_password\": data['mobile_no'],\n    \"first_name\": data['customer_name'],\n    \"doctype\": \"User\",\n    \"role_profile_name\": \"Website User\",\n    \"send_welcome_email\": 0\n    }\nuserexist = frappe.db.get_value(\"User\", {\"username\": data['id_drw']})\n\ntry:\n    doc = frappe.get_doc(data)\n    if custexist is not None:\n        doc = frappe.get_doc(\"Customer\", custexist)\n        doc.update(data)\n    doc.save(ignore_permissions=True)\n    docuser = frappe.get_doc(user)\n    if userexist is not None:\n        docuser = frappe.get_doc(\"User\", userexist)\n        docuser.update(user)\n    docuser.save(ignore_permissions=True)\n    stat = \"Success Sync: \" + data['id_drw']\n    frappe.response['status'] = stat\n    frappe.response['data'] = doc\n    frappe.response['user'] = docuser\n    frappe.log_error(title=stat,message=data['id_drw'])\nexcept:\n    stat = \"Error Sync: \" + data['id_drw']\n    frappe.response['status'] = stat\n    frappe.log_error(title=stat, message=data['id_drw'])",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.list.all.product.old",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-11-06 15:57:00.298492",
  "name": "New Apps - List All Product Old",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "warehouse = frappe.form_dict.warehouse\r\ncustomer_group = frappe.form_dict.customer_group\r\nlimit = int(frappe.form_dict.limit)\r\noffset = int(frappe.form_dict.offset)\r\nsort_order = frappe.form_dict.sort_order\r\nsort_by = frappe.form_dict.sort_by\r\nkeyword = frappe.form_dict.keyword\r\ncategory = frappe.form_dict.category\r\n\r\nnow = frappe.utils.today()\r\n\r\nif warehouse is None: warehouse = \"Gudang Utama PWR - DRW\"\r\nif customer_group is None: customer_group = \"Umum\"\r\nif limit is None: limit = 20\r\nif offset is None: offset = 0\r\nif sort_order is None: sort_order = \"desc\"\r\nif sort_by is None: sort_by = \"actual_qty\"\r\n\r\nitems = frappe.qb.DocType('Item')\r\nitemprices = frappe.qb.DocType('Item Price')\r\n\r\nif keyword is None:\r\n    if category is None:\r\n        docs = frappe.db.sql(\"select * from `tabItem` a left join `tabItem Price` b on a.item_code=b.item_code where a.is_apps=1 and a.disabled=0 and b.price_list=%(price_list)s order by a.item_name \"+sort_order+\" limit %(limit)s\", {\"price_list\": customer_group, \"limit\": limit}, as_dict=True)\r\n    else:\r\n        docs = frappe.db.sql(\"select * from `tabItem` a left join `tabItem Price` b on a.item_code=b.item_code where a.is_apps=1 and a.disabled=0 and b.price_list=%(price_list)s and a.item_category=%(category)s order by a.item_name \"+sort_order+\" limit %(limit)s\", {\"price_list\": customer_group, \"limit\": limit, \"category\": category}, as_dict=True)\r\nelse:\r\n    keyword = \"%\"+keyword+\"%\"\r\n    docs = frappe.db.sql(\"select * from `tabItem` a left join `tabItem Price` b on a.item_code=b.item_code where a.is_apps=1 and a.disabled=0 and b.price_list=%(price_list)s and a.item_name like %(keyword)s order by a.item_name \"+sort_order+\" limit %(limit)s\", {\"price_list\": customer_group, \"limit\": limit, \"keyword\": keyword}, as_dict=True)\r\n    \r\ndata = []\r\nfor doc in docs:\r\n    get = frappe.call(\"erpnext.stock.doctype.quick_stock_balance.quick_stock_balance.get_stock_item_details\", warehouse=warehouse, date=now, item=doc.item_code)\r\n    qty = get['qty']\r\n    if qty < 100:\r\n        if doc.preorder > 0:\r\n            stock = \"Stok Habis\"\r\n        else:\r\n            stock = \"Preorder\"\r\n    elif qty < 1000:\r\n        stock = \"Stok Limit\"\r\n    else:\r\n        stock = \"Stok Tersedia\"\r\n    data.append({\r\n        \"item_code\": doc.item_code,\r\n        \"item_name\": doc.item_name,\r\n        \"item_category\": doc.item_category,\r\n        \"bpom\": doc.bpom,\r\n        \"image\": doc.image,\r\n        \"description\": doc.description,\r\n        \"uom\": \"Pcs\",\r\n        \"conversion_factor\": 1.0,\r\n        \"price_list\": doc.price_list,\r\n        \"price_list_rate\": doc.price_list_rate,\r\n        \"qty\": get['qty'],\r\n        \"stock\": stock\r\n    })\r\n\r\nfrappe.response['data'] = data\r\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v3.list.all.product",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-11-06 16:01:28.776091",
  "name": "New Apps - List All Product Full Pricelist",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "warehouse = frappe.form_dict.warehouse\r\ncustomer_group = frappe.form_dict.customer_group\r\nlimit = int(frappe.form_dict.limit)\r\noffset = int(frappe.form_dict.offset)\r\nsort_order = frappe.form_dict.sort_order\r\nsort_by = frappe.form_dict.sort_by\r\nkeyword = frappe.form_dict.keyword\r\ncategory = frappe.form_dict.category\r\n\r\nnow = frappe.utils.today()\r\n\r\nif warehouse is None: warehouse = \"Gudang Utama PWR - DRW\"\r\nif customer_group is None: customer_group = \"Umum\"\r\nif limit is None: limit = 20\r\nif offset is None: offset = 0\r\nif sort_order is None: sort_order = \"desc\"\r\nif sort_by is None: sort_by = \"actual_qty\"\r\n\r\nitems = frappe.qb.DocType('Item')\r\nitemprices = frappe.qb.DocType('Item Price')\r\n\r\nif keyword is None:\r\n    if category is None:\r\n        docs = frappe.db.sql(\"select * from `tabItem` a left join `tabItem Price` b on a.item_code=b.item_code where a.is_apps=1 and a.disabled=0 and b.price_list=%(price_list)s order by a.item_name \"+sort_order+\" limit %(limit)s\", {\"price_list\": customer_group, \"limit\": limit}, as_dict=True)\r\n    else:\r\n        docs = frappe.db.sql(\"select * from `tabItem` a left join `tabItem Price` b on a.item_code=b.item_code where a.is_apps=1 and a.disabled=0 and b.price_list=%(price_list)s and a.item_category=%(category)s order by a.item_name \"+sort_order+\" limit %(limit)s\", {\"price_list\": customer_group, \"limit\": limit, \"category\": category}, as_dict=True)\r\nelse:\r\n    keyword = \"%\"+keyword+\"%\"\r\n    docs = frappe.db.sql(\"select * from `tabItem` a left join `tabItem Price` b on a.item_code=b.item_code where a.is_apps=1 and a.disabled=0 and b.price_list=%(price_list)s and a.item_name like %(keyword)s order by a.item_name \"+sort_order+\" limit %(limit)s\", {\"price_list\": customer_group, \"limit\": limit, \"keyword\": keyword}, as_dict=True)\r\n    \r\ndata = []\r\nfor doc in docs:\r\n    get = frappe.call(\"erpnext.stock.doctype.quick_stock_balance.quick_stock_balance.get_stock_item_details\", warehouse=warehouse, date=now, item=doc.item_code)\r\n    qty = get['qty']\r\n    if qty < 100:\r\n        if doc.preorder > 0:\r\n            stock = \"Stok Habis\"\r\n        else:\r\n            stock = \"Preorder\"\r\n    elif qty < 1000:\r\n        stock = \"Stok Limit\"\r\n    else:\r\n        stock = \"Stok Tersedia\"\r\n    data.append({\r\n        \"item_code\": doc.item_code,\r\n        \"item_name\": doc.item_name,\r\n        \"item_category\": doc.item_category,\r\n        \"bpom\": doc.bpom,\r\n        \"image\": doc.image,\r\n        \"description\": doc.description,\r\n        \"uom\": \"Pcs\",\r\n        \"conversion_factor\": 1.0,\r\n        \"price_list\": doc.price_list,\r\n        \"price_list_rate\": doc.price_list_rate,\r\n        \"qty\": get['qty'],\r\n        \"stock\": stock\r\n    })\r\n\r\nfrappe.response['data'] = data\r\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.sum.sales.order",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-11-14 07:48:58.742092",
  "name": "Super Apps - Get Sum Sales Order",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\r\nbulan = frappe.form_dict.bulan\r\n\r\ndoc = frappe.get_doc(\"Customer\", customer)\r\nid_drw = doc.id_drw\r\n\r\ndoc_poin = frappe.get_all(\"Sales Order\", fields=[\"name\", \"customer\",\"customer_name\",\"get_point\",\"status\",\"docstatus\",\"application_status\",\"waktu_pembayaran\",\"total\",\"grand_total\"], filters=[[\"docstatus\",\"=\",1],[\"total\",\">\",0],[\"waktu_pembayaran\",\"is\",\"set\"],[\"customer\",\"=\",customer],[\"waktu_pembayaran\",\"like\",\"%\"+bulan+\"%\"],])\r\nsum_poin = 0\r\ndatapoin = []\r\nfor docpoin in doc_poin:\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": docpoin.name}, \"parent\")\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n        if sistat > 0: \r\n            sum_poin = sum_poin + docpoin.grand_total\r\n            datapoin.append({\r\n                \"customer\": docpoin.customer,\r\n                \"customer_name\": docpoin.customer_name,\r\n                \"belanja\": docpoin.grand_total,\r\n                \"waktu_pembayaran\": docpoin.waktu_pembayaran\r\n            })\r\n\r\nfrappe.response['sum'] = sum_poin\r\nfrappe.response['data'] = datapoin",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "login.v3",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-11-25 16:27:11.595333",
  "name": "New Apps - Login v3",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "json_param = frappe.request.data\ndata = json.loads(json_param)\n\nusr = data['usr']\npwd = data['pwd']\n\nstatus = \"Failed\"\ndescription = \"Login v3: Failed\"\ndoc_cust = \"\"\npwd_hash = str(hash(pwd))\n\nget_usr = frappe.db.get_value(\"Customer\", {\"id_drw\": usr})\nif get_usr is not None:\n    get_pwd = frappe.db.get_value(\"Customer\", get_usr, \"passkey\")\n    if get_pwd is not None and get_pwd != \"\":\n        if get_pwd == pwd_hash:\n            try:\n                doc_cust = frappe.get_doc(\"Customer\", get_usr)\n                status = \"Success\"\n                description = \"Login v3: Success\"\n                frappe.log_error(title=description, message=doc_cust)\n            except:\n                description = \"Login v3: Failed get cust\"\n                frappe.log_error(title=description, message=get_usr)\n        else:\n            description = \"Login v3: Failed pwd not match\"\n            frappe.log_error(title=description, message=data)\n    else:\n        get_mob = frappe.db.get_value(\"Customer\", get_usr, \"mobile_no\")\n        if get_mob is not None and get_mob == pwd:\n            try:\n                doc_cust = frappe.get_doc(\"Customer\", get_usr)\n                status = \"Success\"\n                description = \"Login v3: Success\"\n                frappe.log_error(title=description, message=doc_cust)\n            except:\n                description = \"Login v3: Failed get cust\"\n                frappe.log_error(title=description, message=get_usr)\n        else:\n            description = \"Login v3: Failed mob not match\"\n            frappe.log_error(title=description, message=data)\nelse:\n    description = \"Login v3: Failed cust not found\"\n    frappe.log_error(title=description, message=usr)\n\nfrappe.response['status'] = status\nfrappe.response['description'] = description\nfrappe.response['data'] = doc_cust\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v3.reset.password",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-11-25 15:22:21.608548",
  "name": "New Apps - Reset Password v3",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\nnew_password = frappe.form_dict.new_password\n\nget_cust = frappe.db.get_value(\"Customer\", customer)\npwd_hash = str(hash(new_password))\n\nif get_cust is not None:\n    doc = frappe.get_doc(\"Customer\", get_cust)\n    try:\n        doc.passkey = pwd_hash\n        doc.save(ignore_permissions=True)\n        status = \"Success\"\n        description = \"Reset v3: Success\"\n        frappe.log_error(title=description, message=doc)\n    except:\n        status = \"Failed\"\n        description = \"Reset v3: Failed\"\n        frappe.log_error(title=description, message=doc)\n\nfrappe.response['status'] = status\nfrappe.response['description'] = description\nfrappe.response['data'] = doc\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.lupa.password.old",
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-11-22 10:44:39.295594",
  "name": "New Apps - Lupa Password Old",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "user_id = frappe.form_dict.user_id\n\nis_mail = frappe.db.get_value(\"User\", {\"email\": user_id}, \"name\")\nis_user = frappe.db.get_value(\"User\", {\"username\": user_id}, \"name\")\n\nif is_mail is not None: user = is_mail\nif is_user is not None: user = is_user\n\nis_customer = frappe.db.get_value(\"Customer\", {\"email_id\": user}, \"mobile_no\")\nis_employee = frappe.db.get_value(\"Employee\", {\"user_id\": user}, \"cell_number\")\n\nif is_customer is not None: mobile_no = is_customer\nif is_employee is not None: mobile_no = is_employee\n\nreset_password_key = frappe.db.get_value(\"User\", user, \"reset_password_key\")\n\nfrappe.response['data'] = {\n    \"user_id\": user,\n    \"mobile_no\": mobile_no,\n    \"reset_password_key\": reset_password_key\n    }",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.get.sales.with.si.nonpaid",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-11-22 17:04:11.693462",
  "name": "Super Apps - Get Sales with SI Non Paid",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "status = frappe.form_dict.status\r\n\r\ncur_date = frappe.utils.today()\r\nlast_date = frappe.utils.add_to_date(cur_date,days=-60)\r\ncb_min = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"drop_center\",\"like\",\"DC%\"],[\"application_status\",\"=\",status],[\"waktu_pemesanan\",\">\",last_date]])\r\n\r\ndatamin = []\r\nsummin = 0\r\nfor cbmin in cb_min:\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": cbmin.name}, \"parent\")\r\n    sistat = 0\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n    if sistat == 0:\r\n        summin = summin + 1\r\n        datamin.append({\r\n            \"name\": cbmin.name,\r\n            \"customer\": cbmin.customer,\r\n            \"customer_name\": cbmin.customer_name,\r\n            \"customer_group\": cbmin.customer_group,\r\n            \"drop_center\": cbmin.drop_center,\r\n            \"get_cashback\": cbmin.get_cashback,\r\n            \"coin_type\": cbmin.coin_type,\r\n            \"total_coin\": cbmin.total_coin,\r\n            \"status\": cbmin.status,\r\n            \"docstatus\": cbmin.docstatus,\r\n            \"sales_invoice\": sistat,\r\n            \"application_status\": cbmin.application_status,\r\n            \"waktu_pemesanan\": cbmin.waktu_pemesanan,\r\n            \"waktu_pembayaran\": cbmin.waktu_pembayaran\r\n        })\r\n\r\nfrappe.response['datasum'] = summin\r\nfrappe.response['data'] = datamin\r\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "stag.v1.get.all.customer",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-11-26 11:44:03.254185",
  "name": "Staging - Get All Customer with Id DRW",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "limit = frappe.form_dict.limit\r\nstart = frappe.form_dict.start\r\nlevel = frappe.form_dict.level\r\nsort = frappe.form_dict.sort\r\n\r\nif sort is None: sort = \"id_drw ASC\"\r\nif limit is None: limit = 20\r\nif start is None: start = 0\r\nfilters = [[\"id_drw\",\"is\",\"set\"],[\"id_drw\",\"!=\",\"\"],[\"id_drw\",\"like\",\"288-%\"]]\r\nif level is not None: filters = [[\"id_drw\",\"is\",\"set\"],[\"id_drw\",\"!=\",\"\"],[\"id_drw\",\"like\",\"288-%\"],[\"customer_group\",\"=\",level]]\r\n\r\nfields = [\"name\", \"customer_name\", \"id_drw\",\"customer_group\"]\r\n\r\ndatacount = frappe.get_all(\"Customer\", pluck=\"name\", filters=filters)\r\ncount = len(datacount)\r\n\r\ndata = frappe.get_all(\"Customer\", fields=fields, filters=filters, limit_start=start, limit_page_length=limit, order_by=sort)\r\n\r\nfrappe.response['count'] = count\r\nfrappe.response['data'] = data\r\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "stag.v1.calculate.coin",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-02 10:59:55.651986",
  "name": "Staging - Calculate Data Coin",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\r\n\r\ndoc = frappe.get_doc(\"Customer\", customer)\r\nid_drw = doc.id_drw\r\n\r\ndoc_coin = frappe.get_all(\"Agent Coin Log\", fields=[\"*\"], filters=[[\"is_cashback\",\"=\",0],[\"customer\",\"=\",customer]])\r\nsum_coin = 0\r\ndatacoin = []\r\nfor doccoin in doc_coin:\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": doccoin.sales_order}, \"parent\")\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n        sistatus = frappe.db.get_value(\"Sales Invoice\", si, \"status\")\r\n        bank = frappe.db.get_value(\"Sales Invoice Metode Pembayaran\", {\"parent\": si}, \"nama_bank\")\r\n        docsi = frappe.get_doc(\"Sales Invoice\", si)\r\n        if bank is not None and sistat>0: \r\n            sum_coin = sum_coin + doccoin.total_coin\r\n            datacoin.append({\r\n                \"name\": doccoin.name,\r\n                \"customer_name\": doccoin.nama_agent,\r\n                \"sales_order\": doccoin.sales_order,\r\n                \"posting_date\": doccoin.posting_date,\r\n                \"total_coin\": doccoin.total_coin\r\n            })\r\n\r\ncoin_min = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"coin_type\",\"=\",\"Non Cashback\"],[\"total_coin\",\">\",0],[\"application_status\",\"!=\",\"Dibatalkan\"],[\"customer\",\"=\",customer]])\r\nsum_coin_min = 0\r\ndatacoinmin = []\r\nfor coinmin in coin_min:\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": coinmin.name}, \"parent\")\r\n    sistat = 0\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n        if sistat > 0:\r\n            sum_coin_min = sum_coin_min + coinmin.total_coin\r\n            datacoinmin.append({\r\n                \"sales_order\": coinmin.name,\r\n                \"customer_name\": coinmin.customer_name,\r\n                \"application_status\": coinmin.application_status,\r\n                \"waktu_pemesanan\": coinmin.waktu_pemesanan,\r\n                \"waktu_pembayaran\": coinmin.waktu_pembayaran,\r\n                \"coin_type\": coinmin.coin_type,\r\n                \"total_coin\": coinmin.total_coin\r\n            })\r\n\r\nwithdraw = frappe.get_all(\"Withdraw Coins\", fields=[\"*\"], filters=[[\"customer\",\"=\",customer]])\r\nsum_with = 0\r\ndatawith = []\r\nfor withd in withdraw:\r\n    sum_with = sum_with + withd.total_withdraw\r\n    datawith.append({\r\n        \"name\": withd.name,\r\n        \"customer_name\": withd.customer_name,\r\n        \"posting_date\": withd.posting_date,\r\n        \"status\": withd.status,\r\n        \"total_coin\": withd.total_withdraw\r\n    })\r\n\r\nsum_coin_total = sum_coin - sum_coin_min - sum_with\r\ncoin_total = sum_coin_total\r\nif sum_coin_total < 0: coin_total = 0\r\n\r\nfrappe.response['data'] = {\r\n    \"id_drw\": id_drw,\r\n    \"customer_name\": doc.customer_name,\r\n    \"level\": doc.customer_group,\r\n    \"sum_coin_get\": sum_coin,\r\n    \"sum_coin_min\": sum_coin_min,\r\n    \"sum_withdraw\": sum_with,\r\n    \"sum_total_coin\": sum_coin_total,\r\n    \"total_coin\": coin_total\r\n}\r\nfrappe.response['coinget'] = datacoin\r\nfrappe.response['coinmin'] = datacoinmin\r\nfrappe.response['withdraw'] = datawith\r\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "stag.v1.calculate.cashback",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-11-26 15:27:11.339631",
  "name": "Staging - Calculate Data Cashback",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\r\n\r\ndoc = frappe.get_doc(\"Customer\", customer)\r\nid_drw = doc.id_drw\r\n\r\ncb_get = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"get_cashback\",\">\",0],[\"waktu_pembayaran\",\"is\",\"set\"],[\"application_status\",\"!=\",\"Dibatalkan\"],[\"customer\",\"=\",customer]])\r\nsum_cb_get = 0 \r\ndataget = []\r\nfor cbget in cb_get:\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": cbget.name}, \"parent\")\r\n    sistat = 0\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n        if sistat > 0:\r\n            sum_cb_get = sum_cb_get + cbget.get_cashback\r\n            dataget.append({\r\n                \"sales_order\": cbget.name,\r\n                \"customer_name\": cbget.customer_name,\r\n                \"sales_invoice\": sistat,\r\n                \"application_status\": cbget.application_status,\r\n                \"waktu_pemesanan\": cbget.waktu_pemesanan,\r\n                \"waktu_pembayaran\": cbget.waktu_pembayaran,\r\n                \"get_cashback\": cbget.get_cashback\r\n            })\r\n\r\ncb_min = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"coin_type\",\"=\",\"Cashback\"],[\"total_coin\",\">\",0],[\"application_status\",\"!=\",\"Dibatalkan\"],[\"customer\",\"=\",customer]])\r\nsum_cb_min = 0\r\ndatamin = []\r\nfor cbmin in cb_min:\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": cbget.name}, \"parent\")\r\n    sistat = 0\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n    sum_cb_min = sum_cb_min + cbmin.total_coin\r\n    datamin.append({\r\n        \"sales_order\": cbmin.name,\r\n        \"customer_name\": cbmin.customer_name,\r\n        \"sales_invoice\": sistat,\r\n        \"application_status\": cbmin.application_status,\r\n        \"waktu_pemesanan\": cbmin.waktu_pemesanan,\r\n        \"waktu_pembayaran\": cbmin.waktu_pembayaran,\r\n        \"coin_type\": cbmin.coin_type,\r\n        \"total_coin\": cbmin.total_coin\r\n    })\r\n\r\nsum_cb_total = sum_cb_get-sum_cb_min\r\ncb_total = sum_cb_total\r\nif sum_cb_total < 0: cb_total = 0\r\n\r\nfrappe.response['data'] = {\r\n    \"id_drw\": id_drw,\r\n    \"customer_name\": doc.customer_name,\r\n    \"level\": doc.customer_group,\r\n    \"sum_cb_get\": sum_cb_get,\r\n    \"sum_cb_min\": sum_cb_min,\r\n    \"sum_total_cb\": sum_cb_total,\r\n    \"total_cb\": cb_total\r\n}\r\nfrappe.response['cbget'] = dataget\r\nfrappe.response['cbmin'] = datamin\r\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "stag.v1.calculate.poin",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-11-29 09:30:43.127313",
  "name": "Staging - Calculate Data Poin",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\r\n\r\ndoc = frappe.get_doc(\"Customer\", customer)\r\nid_drw = doc.id_drw\r\n\r\ndoc_poin_old = frappe.make_post_request('https://drwgroup.id/com.drw.skincare/1.0.0/userpointjson.php?id_drw='+id_drw)\r\nsum_poin_old = 0\r\nif doc_poin_old[0]['point'] is not None:\r\n    sum_poin_old = float(doc_poin_old[0]['point'])\r\n\r\ndoc_poin = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"get_point\",\">\",0],[\"application_status\",\"!=\",\"Dibatalkan\"],[\"customer\",\"=\",customer],[\"waktu_pemesanan\",\">\",\"2024-10-01 00:00:00\"]])\r\nsum_poin = 0\r\ngetpoin = []\r\nfor docpoin in doc_poin:\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": docpoin.name}, \"parent\")\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n        if sistat > 0: \r\n            sum_poin = sum_poin + docpoin.get_point\r\n            getpoin.append({\r\n                \"sales_order\": docpoin.name,\r\n                \"customer_name\": docpoin.customer_name,\r\n                \"application_status\": docpoin.application_status,\r\n                \"waktu_pemesanan\": docpoin.waktu_pemesanan,\r\n                \"waktu_pembayaran\": docpoin.waktu_pembayaran,\r\n                \"total_poin\": docpoin.get_point\r\n            })\r\n\r\npoin_reward = 0\r\npoin_reward = frappe.db.get_value(\"Point Reward\", {\"id_drw\": id_drw}, \"point\")\r\nif poin_reward is None: poin_reward = 0\r\n\r\ntotal_poin = sum_poin_old + sum_poin + poin_reward\r\ndatapoin = {\r\n    \"id_drw\": id_drw,\r\n    \"customer_name\": doc.customer_name,\r\n    \"level\": doc.customer_group,\r\n    \"sum_poin_old\": sum_poin_old,\r\n    \"sum_poin_new\": sum_poin,\r\n    \"sum_poin_reward\": poin_reward,\r\n    \"total_poin\": total_poin\r\n}\r\nfrappe.response['data'] = datapoin\r\nfrappe.response['getpoin'] = getpoin\r\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.get.sales.bulanan.bc",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-11-29 10:10:09.345387",
  "name": "Warehouse Apps - Get Sales Bulanan per BC",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\r\nbulan = frappe.form_dict.bulan\r\n\r\ndoc = frappe.db.sql('SELECT customer_name,customer_group,sum(if(coin_type=\"Cashback\",grand_total,total)) as belanja FROM `tabSales Order` WHERE docstatus=1 and application_status!=\"Dibatalkan\" and customer=\"'+customer+'\" and DATE_FORMAT(waktu_pemesanan,\"%m-%Y\")=\"'+bulan+'\"', dict=true)\r\ndata = {\r\n    \"customer_name\": doc[0][0]\r\n}\r\n\r\nfrappe.response['data'] = data\r\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "apis.v1.user.get.old.verlsion",
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-11-30 06:10:04.676450",
  "name": "Apps - Get User Old Version",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "user = frappe.form_dict.user\n\nif user is None:\n    user = frappe.session.user\n\ncustomer = frappe.db.get_value(\"Customer\", {\"email_id\": user}, \"name\")\nq = frappe.get_doc(\"Customer\", customer)\n\nid_drw = q.id_drw\n\ndoc_poin_old = frappe.make_get_request('https://drwgroup.id/com.drw.skincare/1.0.0/userpointjson.php?id_drw='+id_drw)\nsum_poin_old = 0\nif doc_poin_old[0]['point'] is not None:\n    sum_poin_old = float(doc_poin_old[0]['point'])\n\ndoc_poin = frappe.get_all(\"Sales Order\", fields=[\"name\", \"customer\",\"customer_name\",\"get_point\",\"status\",\"docstatus\",\"application_status\",\"waktu_pembayaran\"], filters=[[\"docstatus\",\"=\",1],[\"get_point\",\">\",0],[\"waktu_pembayaran\",\"is\",\"set\"],[\"customer\",\"=\",customer],[\"waktu_pembayaran\",\">\",\"2024-10-01 00:00:00\"]])\nsum_poin = 0\ndatapoin = []\nfor docpoin in doc_poin:\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": docpoin.name}, \"parent\")\n    if si is not None:\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\n        if sistat > 0: \n            sum_poin = sum_poin + docpoin.get_point\n            datapoin.append({\n                \"total_poin\": docpoin.get_point\n            })\n\npoin_reward = 0\npoin_reward = frappe.db.get_value(\"Point Reward\", {\"id_drw\": id_drw}, \"point\")\nif poin_reward is None: poin_reward = 0\n\ntotal_poin = sum_poin_old + sum_poin + poin_reward\ndatapoinget = {\n    \"id_drw\": id_drw,\n    \"sum_poin_old\": sum_poin_old,\n    \"sum_poin_new\": sum_poin,\n    \"sum_poin_reward\": poin_reward,\n    \"total_poin\": total_poin\n}\n\ndoc_coin = frappe.get_all(\"Agent Coin Log\", fields=[\"name\", \"customer\",\"sales_order\",\"total_coin\"], filters=[[\"is_cashback\",\"=\",0],[\"customer\",\"=\",customer]])\nsum_coin = 0\nfor doccoin in doc_coin:\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": doccoin.sales_order}, \"parent\")\n    if si is not None:\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\n        sistatus = frappe.db.get_value(\"Sales Invoice\", si, \"status\")\n        bank = frappe.db.get_value(\"Sales Invoice Metode Pembayaran\", {\"parent\": si}, \"nama_bank\")\n        docsi = frappe.get_doc(\"Sales Invoice\", si)\n        if bank is not None and sistat>0: sum_coin = sum_coin + doccoin.total_coin\n\ncoin_min = frappe.get_all(\"Sales Order\", fields=[\"name\", \"customer\",\"coin_type\",\"total_coin\",\"status\",\"docstatus\",\"application_status\",\"waktu_pembayaran\"], filters=[[\"docstatus\",\"=\",1],[\"coin_type\",\"=\",\"Non Cashback\"],[\"total_coin\",\">\",0],[\"customer\",\"=\",customer]])\nsum_coin_min = 0\ndatacoinmin = []\nfor coinmin in coin_min:\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": coinmin.name}, \"parent\")\n    sistat = 0\n    if si is not None:\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\n        if sistat > 0:\n            sum_coin_min = sum_coin_min + coinmin.total_coin\n\nsum_coin_total = sum_coin - sum_coin_min\nif sum_coin_total < 0: sum_coin_total = 0\n\ncur_date = frappe.utils.today()\nlast_date = frappe.utils.add_to_date(cur_date,days=-30)\ncb_get = frappe.get_all(\"Sales Order\", fields=[\"name\", \"customer\",\"get_cashback\",\"coin_type\",\"total_coin\",\"status\",\"docstatus\",\"application_status\",\"waktu_pembayaran\"], filters=[[\"docstatus\",\"=\",1],[\"get_cashback\",\">\",0],[\"waktu_pembayaran\",\"is\",\"set\"],[\"customer\",\"=\",customer]])\ncb_min = frappe.get_all(\"Sales Order\", fields=[\"name\", \"customer\",\"get_cashback\",\"coin_type\",\"total_coin\",\"status\",\"docstatus\",\"application_status\",\"waktu_pembayaran\"], filters=[[\"docstatus\",\"=\",1],[\"coin_type\",\"=\",\"Cashback\"],[\"total_coin\",\">\",0],[\"customer\",\"=\",customer]])\n\nsum_cb_get = 0 \nsum_cb_min = 0\n\ndataget = []\nfor cbget in cb_get:\n    sum_cb_get = sum_cb_get + cbget.get_cashback\n    dataget.append({\n        \"name\": cbget.name,\n        \"customer\": cbget.customer,\n        \"get_cashback\": cbget.get_cashback,\n        \"coin_type\": cbget.coin_type,\n        \"total_coin\": cbget.total_coin,\n        \"status\": cbget.status,\n        \"docstatus\": cbget.docstatus,\n        \"application_status\": cbget.application_status,\n        \"waktu_pembayaran\": cbget.waktu_pembayaran\n    })\n\ndatamin = []\nfor cbmin in cb_min:\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": cbmin.name}, \"parent\")\n    sistat = 0\n    if si is not None:\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\n        if sistat > 0:\n            sum_cb_min = sum_cb_min + cbmin.total_coin\n    datamin.append({\n        \"name\": cbmin.name,\n        \"customer\": cbmin.customer,\n        \"get_cashback\": cbmin.get_cashback,\n        \"coin_type\": cbmin.coin_type,\n        \"total_coin\": cbmin.total_coin,\n        \"status\": cbmin.status,\n        \"docstatus\": cbmin.docstatus,\n        \"application_status\": cbmin.application_status,\n        \"waktu_pembayaran\": cbmin.waktu_pembayaran\n    })\n\nsum_cb_total = sum_cb_get-sum_cb_min\nif sum_cb_total < 0: sum_cb_total = 0\n\nfrappe.response['datapoin'] = datapoinget\nfrappe.response['datacb'] = {\n    \"sum_cb_get\": sum_cb_get,\n    \"sum_cb_min\": sum_cb_min,\n    \"sum_cb_total\": sum_cb_total\n}\n\ndoccust = {\n    \"name\": q.name,\n    \"owner\": q.owner,\n    \"creation\": q.creation,\n    \"modified\": q.modified,\n    \"modified_by\": q.modified_by,\n    \"idx\": q.idx,\n    \"docstatus\": q.docstatus,\n    \"naming_series\": q.naming_series,\n    \"customer_name\": q.customer_name,\n    \"nik\": q.nik,\n    \"tanggal_lahir\": q.tanggal_lahir,\n    \"tempat_lahir\": q.tempat_lahir,\n    \"gender\": q.gender,\n    \"customer_type\": q.customer_type,\n    \"id_drw\": q.id_drw,\n    \"photo_profil\": q.photo_profil,\n    \"customer_group\": q.customer_group,\n    \"upline\": q.upline,\n    \"territory_lama\": q.territory_lama,\n    \"territory\": q.territory,\n    \"provinsi\": q.provinsi,\n    \"kabupaten_kota\": q.kabupaten_kota,\n    \"nomor_awalan_pajak\": q.nomor_awalan_pajak,\n    \"so_required\": q.so_required,\n    \"dn_required\": q.dn_required,\n    \"disabled\": q.disabled,\n    \"is_internal_customer\": q.is_internal_customer,\n    \"user_admin\": q.user_admin,\n    \"nama_tim\": q.nama_tim,\n    \"default_price_list\": q.default_price_list,\n    \"customer_primary_contact\": q.customer_primary_contact,\n    \"mobile_no\": q.mobile_no,\n    \"email_id\": q.email_id,\n    \"customer_primary_address\": q.customer_primary_address,\n    \"facebook\": q.facebook,\n    \"instagram\": q.instagram,\n    \"language\": q.language,\n    \"is_frozen\": q.is_frozen,\n    \"total_belanja\": q.total_belanja,\n    \"benlanja_terakhir\": q.benlanja_terakhir,\n    \"total_point\": total_poin,\n    \"remaining_point\": q.remaining_point,\n    \"total_coins\": sum_coin_total,\n    \"total_coin_cashback\": sum_cb_total,\n    \"limit_kasbon\": q.limit_kasbon,\n    \"klaim_kasbon\": q.klaim_kasbon,\n    \"jatuh_tempo\": q.jatuh_tempo,\n    \"percentage_kasbon\": q.percentage_kasbon,\n    \"default_sales_partner\": q.default_sales_partner,\n    \"default_commission_rate\": q.default_commission_rate,\n    \"doctype\": q.doctype,\n    \"companies\": q.companies,\n    \"accounts\": q.accounts,\n    \"credit_limits\": q.credit_limits,\n    \"sales_team\": q.sales_team\n}\n\nupline_mobile = frappe.db.get_value(\"Customer\", customer.upline, \"mobile_no\")\n\nuser = frappe.get_doc(\"User\", user)\n\nfrappe.response['message'] = {\n    \"user\": user,\n    \"customer\": doccust,\n    \"upline_id\": customer.upline,\n    \"upline_mobile\": upline_mobile\n}",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.get.agen.old.version",
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-11-30 06:19:28.628241",
  "name": "New Apps - Get Agen Detail Old Version",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "limit = frappe.form_dict.limit\nstart = frappe.form_dict.start\nfilters = frappe.form_dict.filters\nfields = frappe.form_dict.fields\norder_by = frappe.form_dict.order_by\nname = frappe.form_dict.name\n\nif limit is None:\n    limit = 20\n\nif start is None:\n    start = 0\n\nif filters is None:\n    filters = [[\"customer_group\",\"=\",\"Director\"]]\n\nif fields is None:\n    fields = [\"name\",\"customer_name\",\"id_drw\",\"customer_group\",\"default_price_list\",\"mobile_no\",\"email_id\",\"territory\",\"upline\"]\n\nif order_by is None:\n    order_by = \"customer_name asc\"\n\nif name is None:\n    q = frappe.get_all(\"Customer\", filters=filters, fields=fields,limit_page_length=limit,limit_start=start,order_by=order_by)\nelse:\n    lastyear = \"Last Year\"\n    thisyear = \"This Year\"\n    thismonth = \"This Month\"\n    get_order_lastyear = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",lastyear.lower()],[\"docstatus\", \"=\", 1],[\"customer\",\"=\",name]])\n    count_order_lastyear = len(get_order_lastyear)\n    sum_order_lastyear = 0\n    if count_order_lastyear>0:\n        sum_order_lastyear = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": get_order_lastyear})[0][0]\n    sum_order_lastmonth = sum_order_lastyear/12\n    get_order = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",thisyear.lower()],[\"docstatus\", \"=\", 1],[\"customer\",\"=\",name]])\n    count_order = len(get_order)\n    sum_order = 0\n    if count_order>0:\n        sum_order = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": get_order})[0][0]\n    get_order_month = frappe.get_all(\"Sales Invoice\", pluck=\"name\",filters=[[\"posting_date\",\"timespan\",thismonth.lower()],[\"docstatus\", \"=\", 1],[\"customer\",\"=\",name]])\n    count_order_month = len(get_order_month)\n    sum_order_month = 0\n    if count_order_month>0:\n        sum_order_month = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Invoice` where name in %(names)s\", {\"names\": get_order_month})[0][0]\n    get_order_downline = frappe.get_all(\"Sales Order\", pluck=\"name\",filters=[[\"transaction_date\",\"timespan\",thisyear.lower()],[\"docstatus\", \"=\", 1],[\"upline\",\"=\",name]])\n    count_order_downline = len(get_order_downline)\n    sum_order_downline = 0\n    if count_order_downline>0:\n        sum_order_downline = frappe.db.sql(\"select sum(ifnull(grand_total,0)) from `tabSales Order` where name in %(names)s\", {\"names\": get_order_downline})[0][0]\n    get_downline = frappe.get_all(\"Customer\", pluck=\"name\",filters=[[\"upline\",\"=\",name]])\n    get_downline_thismonth = frappe.get_all(\"Customer\", pluck=\"name\",filters=[[\"upline\",\"=\",name],[\"creation\",\"timespan\",thismonth.lower()]])\n    count_downline = len(get_downline)\n    count_downline_thismonth = len(get_downline_thismonth)\n    target_downline = 10\n    percent_downline = count_downline_thismonth/target_downline*100\n    q = frappe.get_doc(\"Customer\", name)\n    g = frappe.get_doc(\"Customer Group\", q.customer_group)\n    upline_contact = frappe.db.get_value(\"Customer\", q.upline, \"mobile_no\")\n        \n    limit_target = 0\n    for t in g.target:\n        if limit_target == 0:\n            limit_target = t.limit_target\n            max_target = t.max_target\n            nama_target = t.nama_target\n        if sum_order_month >= t.limit_target:\n            limit_target = t.limit_target\n            max_target = t.max_target\n            nama_target = t.nama_target\n    limit_target_percent_thismonth = sum_order_month/max_target*100\n    sum_order_lastmonth_30 = sum_order_lastmonth + (sum_order_lastmonth*(30/100))\n    limit_target_thisyear = 12*limit_target \n    limit_target_percent_thisyear = sum_order/limit_target_thisyear*100\n    sum_order_lastyear_30 = sum_order_lastyear + (sum_order_lastyear*(30/100))\n    if sum_order_lastmonth_30 > 0: limit_target_percent_lastmonth = sum_order_month/sum_order_lastmonth_30*100\n    else: limit_target_percent_lastmonth = 0\n    if sum_order_lastyear_30 > 0: limit_target_percent_lastyear = sum_order/sum_order_lastyear_30*100\n    else: limit_target_percent_lastyear = 0\n    grafik = {}\n    today = frappe.utils.today()\n    start_year = str(int(today[0:4])-1)\n    start_date = start_year+'-1-1'\n    start_date = frappe.utils.getdate(start_date)\n    sum_order_bymonth = frappe.db.sql(\"select month(posting_date) as month, DATE_FORMAT(posting_date, '%%M') as month_label, sum(if(year(posting_date)=2023,ifnull(grand_total,0),0)) as prev_year,sum(if(year(posting_date)=2024,ifnull(grand_total,0),0)) as current_year from `tabSales Invoice` where posting_date >= %(start_date)s and docstatus = 1 and customer = %(customer)s group by month order by month asc\",{\n        \"start_date\": start_date,\n        \"customer\": name\n    },as_dict=True)\n    grafik = sum_order_bymonth\n\nconditions = {}\nconditions[\"customer_group\"] = frappe.form_dict.customer_group\ncount = frappe.db.count(\"Customer\", filters=conditions)\n\nid_drw = q.id_drw\n\ndoc_poin_old = frappe.make_get_request('https://drwgroup.id/com.drw.skincare/1.0.0/userpointjson.php?id_drw='+id_drw)\nsum_poin_old = 0\nif doc_poin_old[0]['point'] is not None:\n    sum_poin_old = float(doc_poin_old[0]['point'])\n\ndoc_poin = frappe.get_all(\"Sales Order\", fields=[\"name\", \"customer\",\"customer_name\",\"get_point\",\"status\",\"docstatus\",\"application_status\",\"waktu_pembayaran\"], filters=[[\"docstatus\",\"=\",1],[\"get_point\",\">\",0],[\"waktu_pembayaran\",\"is\",\"set\"],[\"customer\",\"=\",name],[\"waktu_pembayaran\",\">\",\"2024-10-01 00:00:00\"]])\nsum_poin = 0\ndatapoin = []\nfor docpoin in doc_poin:\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": docpoin.name}, \"parent\")\n    if si is not None:\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\n        if sistat > 0: \n            sum_poin = sum_poin + docpoin.get_point\n            datapoin.append({\n                \"total_poin\": docpoin.get_point\n            })\n\npoin_reward = 0\npoin_reward = frappe.db.get_value(\"Point Reward\", {\"id_drw\": id_drw}, \"point\")\nif poin_reward is None: poin_reward = 0\n\ntotal_poin = sum_poin_old + sum_poin + poin_reward\ndatapoinget = {\n    \"id_drw\": id_drw,\n    \"sum_poin_old\": sum_poin_old,\n    \"sum_poin_new\": sum_poin,\n    \"sum_poin_reward\": poin_reward,\n    \"total_poin\": total_poin\n}\n\ndoc_coin = frappe.get_all(\"Agent Coin Log\", fields=[\"name\", \"customer\",\"sales_order\",\"total_coin\"], filters=[[\"is_cashback\",\"=\",0],[\"customer\",\"=\",name]])\nsum_coin = 0\nfor doccoin in doc_coin:\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": doccoin.sales_order}, \"parent\")\n    if si is not None:\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\n        sistatus = frappe.db.get_value(\"Sales Invoice\", si, \"status\")\n        bank = frappe.db.get_value(\"Sales Invoice Metode Pembayaran\", {\"parent\": si}, \"nama_bank\")\n        docsi = frappe.get_doc(\"Sales Invoice\", si)\n        if bank is not None and sistat>0: sum_coin = sum_coin + doccoin.total_coin\n\ncustomer = name\ncoin_min = frappe.get_all(\"Sales Order\", fields=[\"name\", \"customer\",\"coin_type\",\"total_coin\",\"status\",\"docstatus\",\"application_status\",\"waktu_pembayaran\"], filters=[[\"docstatus\",\"=\",1],[\"coin_type\",\"=\",\"Non Cashback\"],[\"total_coin\",\">\",0],[\"customer\",\"=\",customer]])\nsum_coin_min = 0\ndatacoinmin = []\nfor coinmin in coin_min:\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": coinmin.name}, \"parent\")\n    sistat = 0\n    if si is not None:\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\n        if sistat > 0:\n            sum_coin_min = sum_coin_min + coinmin.total_coin\n\nsum_coin_total = sum_coin - sum_coin_min\nif sum_coin_total < 0: sum_coin_total = 0\n\ncur_date = frappe.utils.today()\nlast_date = frappe.utils.add_to_date(cur_date,days=-30)\ncb_get = frappe.get_all(\"Sales Order\", fields=[\"name\", \"customer\",\"get_cashback\",\"coin_type\",\"total_coin\",\"status\",\"docstatus\",\"application_status\",\"waktu_pembayaran\"], filters=[[\"docstatus\",\"=\",1],[\"get_cashback\",\">\",0],[\"waktu_pembayaran\",\"is\",\"set\"],[\"customer\",\"=\",customer]])\ncb_min = frappe.get_all(\"Sales Order\", fields=[\"name\", \"customer\",\"get_cashback\",\"coin_type\",\"total_coin\",\"status\",\"docstatus\",\"application_status\",\"waktu_pembayaran\"], filters=[[\"docstatus\",\"=\",1],[\"coin_type\",\"=\",\"Cashback\"],[\"total_coin\",\">\",0],[\"customer\",\"=\",customer]])\n\nsum_cb_get = 0 \nsum_cb_min = 0\n\ndataget = []\nfor cbget in cb_get:\n    sum_cb_get = sum_cb_get + cbget.get_cashback\n    dataget.append({\n        \"name\": cbget.name,\n        \"customer\": cbget.customer,\n        \"get_cashback\": cbget.get_cashback,\n        \"coin_type\": cbget.coin_type,\n        \"total_coin\": cbget.total_coin,\n        \"status\": cbget.status,\n        \"docstatus\": cbget.docstatus,\n        \"application_status\": cbget.application_status,\n        \"waktu_pembayaran\": cbget.waktu_pembayaran\n    })\n\ndatamin = []\nfor cbmin in cb_min:\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": cbmin.name}, \"parent\")\n    sistat = 0\n    if si is not None:\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\n        if sistat > 0:\n            sum_cb_min = sum_cb_min + cbmin.total_coin\n    datamin.append({\n        \"name\": cbmin.name,\n        \"customer\": cbmin.customer,\n        \"get_cashback\": cbmin.get_cashback,\n        \"coin_type\": cbmin.coin_type,\n        \"total_coin\": cbmin.total_coin,\n        \"status\": cbmin.status,\n        \"docstatus\": cbmin.docstatus,\n        \"application_status\": cbmin.application_status,\n        \"waktu_pembayaran\": cbmin.waktu_pembayaran\n    })\n\nsum_cb_total = sum_cb_get-sum_cb_min\nif sum_cb_total < 0: sum_cb_total = 0\n\nfrappe.response['datapoin'] = datapoinget\nfrappe.response['datacoin'] = {\n    \"sum_coin_get\": sum_coin,\n    \"sum_coin_min\": sum_coin_min,\n    \"coins\": sum_coin_total\n}\nfrappe.response['datacb'] = {\n    \"sum_cb_get\": sum_cb_get,\n    \"sum_cb_min\": sum_cb_min,\n    \"sum_cb_total\": sum_cb_total\n}\nfrappe.response['data'] = {\n    \"name\": q.name,\n    \"owner\": q.owner,\n    \"creation\": q.creation,\n    \"modified\": q.modified,\n    \"modified_by\": q.modified_by,\n    \"idx\": q.idx,\n    \"docstatus\": q.docstatus,\n    \"naming_series\": q.naming_series,\n    \"customer_name\": q.customer_name,\n    \"nik\": q.nik,\n    \"tanggal_lahir\": q.tanggal_lahir,\n    \"tempat_lahir\": q.tempat_lahir,\n    \"gender\": q.gender,\n    \"customer_type\": q.customer_type,\n    \"id_drw\": q.id_drw,\n    \"photo_profil\": q.photo_profil,\n    \"customer_group\": q.customer_group,\n    \"upline\": q.upline,\n    \"territory_lama\": q.territory_lama,\n    \"territory\": q.territory,\n    \"provinsi\": q.provinsi,\n    \"kabupaten_kota\": q.kabupaten_kota,\n    \"nomor_awalan_pajak\": q.nomor_awalan_pajak,\n    \"so_required\": q.so_required,\n    \"dn_required\": q.dn_required,\n    \"disabled\": q.disabled,\n    \"is_internal_customer\": q.is_internal_customer,\n    \"user_admin\": q.user_admin,\n    \"nama_tim\": q.nama_tim,\n    \"default_price_list\": q.default_price_list,\n    \"customer_primary_contact\": q.customer_primary_contact,\n    \"mobile_no\": q.mobile_no,\n    \"email_id\": q.email_id,\n    \"customer_primary_address\": q.customer_primary_address,\n    \"facebook\": q.facebook,\n    \"instagram\": q.instagram,\n    \"language\": q.language,\n    \"is_frozen\": q.is_frozen,\n    \"total_belanja\": q.total_belanja,\n    \"benlanja_terakhir\": q.benlanja_terakhir,\n    \"total_point\": total_poin,\n    \"remaining_point\": q.remaining_point,\n    \"total_coins\": sum_coin_total,\n    \"total_coin_cashback\": sum_cb_total,\n    \"limit_kasbon\": q.limit_kasbon,\n    \"klaim_kasbon\": q.klaim_kasbon,\n    \"jatuh_tempo\": q.jatuh_tempo,\n    \"percentage_kasbon\": q.percentage_kasbon,\n    \"default_sales_partner\": q.default_sales_partner,\n    \"default_commission_rate\": q.default_commission_rate,\n    \"doctype\": q.doctype,\n    \"companies\": q.companies,\n    \"accounts\": q.accounts,\n    \"credit_limits\": q.credit_limits,\n    \"sales_team\": q.sales_team\n}\nfrappe.response['count'] = count\nfrappe.response['details'] = {\n    \"upline_contact\": upline_contact,\n    \"total_order_thisyear\": sum_order,\n    \"count_order_thisyear\": count_order,\n    \"total_order_lastyear\": sum_order_lastyear_30,\n    \"count_order_lastyear\": count_order_lastyear,\n    \"total_order_lastmonth\": sum_order_lastmonth_30,\n    \"total_order_month\": sum_order_month,\n    \"count_order_month\": count_order_month,\n    \"total_order_downline\": sum_order_downline,\n    \"count_order_downline\": count_order_downline,\n    \"total_downline\": count_downline,\n    \"limit_target\": limit_target,\n    \"max_target\": max_target,\n    \"nama_target\": nama_target,\n    \"limit_target_percent_thismonth\": limit_target_percent_thismonth,\n    \"limit_target_percent_lastmonth\": limit_target_percent_lastmonth,\n    \"limit_target_thisyear\": limit_target_thisyear,\n    \"limit_target_percent_thisyear\": limit_target_percent_thisyear,\n    \"limit_target_percent_lastyear\": limit_target_percent_lastyear,\n    \"count_downline\": count_downline_thismonth,\n    \"target_downline\": target_downline,\n    \"percent_downline\": percent_downline,\n    \"grafik\": grafik\n}\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.add.proof.payment.withdraw",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-02 12:58:03.273470",
  "name": "Super Apps - Add Proof Payment Withdraw",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "withdraw_id = frappe.form_dict.withdraw_id\n\ndata = {}\ndata['withdraw_id'] = withdraw_id\ndata['doctype'] = \"Data Withdraw Proof Payment\"\ndoc = frappe.get_doc(data)\n\ntry:\n    doc.insert(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Create Withdraw Proof Payment\", message=None)\n    frappe.throw(\"Error\")",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.update.proof.payment.withdraw",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-02 13:10:57.159739",
  "name": "Super Apps - Update Proof Payment Withdraw",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\nfile_url = frappe.form_dict.file_url\n\ndoc = frappe.get_doc(\"Data Withdraw Proof Payment\", name)\ndoc.image = file_url\n\ntry:\n    doc.save(ignore_permissions=True)\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(title=\"Error Update Proof Payment Withdraw\", message=None)\n    frappe.throw(\"Error\")",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v1.get.proof.payment.withdraw",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-02 13:18:15.033130",
  "name": "Super Apps - Get Proof Payment Withdraw",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "withdraw_id = frappe.form_dict.withdraw_id\n\ndata = frappe.get_all(\"Data Withdraw Proof Payment\", filters=[[\"withdraw_id\", \"=\", withdraw_id],[\"image\",\"is\",\"set\"]], fields=[\"name\",\"withdraw_id\",\"image\"], order_by=\"modified asc\")\n\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.invoice.proof.payment.image",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-03 16:04:14.804977",
  "name": "Super Apps - Proof Payment Image v2",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n\ndatas = frappe.get_all(\"Sales Invoice Proof of Payment\", filters=[[\"sales_invoice\", \"=\", name]], order_by=\"creation asc\", fields=[\"*\"])\n\ndatadoc = []\nfor data in datas:\n    doc = frappe.get_all(\"File\",filters=[[\"attached_to_doctype\",\"=\",\"Sales Invoice Proof of Payment\"],[\"attached_to_name\",\"=\",data.name]], fields=[\"*\"])\n    if len(doc)>0:\n        datadoc.append(doc[0])\n\nfrappe.response['data'] = datas\nfrappe.response['attachment'] = datadoc\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v1.get.sales.by.id",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-30 13:16:43.701407",
  "name": "Super Apps - Get Sales Order by Id DRW",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "id_drw = frappe.form_dict.id_drw\r\n\r\ncust = frappe.db.get_value(\"Customer\", {\"id_drw\": id_drw})\r\n\r\ndocs = frappe.get_all(\"Sales Order\", fields=[\"*\"], filters=[[\"docstatus\",\"=\",1],[\"id_drw_order\",\"=\",\"\"],[\"application_status\",\"!=\",\"Dibatalkan\"],[\"customer\",\"=\",cust],[\"waktu_pemesanan\",\">\",\"2024-10-01 00:00:00\"]], order_by=\"waktu_pemesanan DESC\")\r\ntotal = 0\r\ndata = []\r\nfor doc in docs:\r\n    si = frappe.db.get_value(\"Sales Invoice Item\", {\"sales_order\": doc.name}, \"parent\")\r\n    if si is not None:\r\n        sistat = frappe.db.get_value(\"Sales Invoice\", si, \"docstatus\")\r\n        if sistat > 0: \r\n            total = total + doc.total\r\n            data.append({\r\n                \"buyid\": doc.name,\r\n                \"uid\": doc.customer,\r\n                \"nama\": doc.customer_name,\r\n                \"level\": doc.customer_group,\r\n                \"total\": doc.total,\r\n                \"tanggal\": doc.waktu_pemesanan,\r\n                \"dc\": doc.drop_center,\r\n                \"status\": doc.application_status\r\n            })\r\n\r\nfrappe.response['data'] = data\r\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v4.sales.order.submit",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-12 13:59:27.534810",
  "name": "New Apps - Sales Order Submit v4",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\nnosave = frappe.form_dict.nosave\n\ndoc = frappe.get_doc(\"Sales Order\", name)\ngrand_total = doc.total\ngrand_total = 3000000\n\naturan_cashback = frappe.get_all(\"Aturan Cashback\", pluck=\"name\", filters=[[\"company\", \"=\", \"PT. DRW Estetika Indonesia\"], [\"valid_from\", \"<=\", frappe.utils.today()]], order_by=\"valid_from desc\")\ncashback = 0\nif aturan_cashback:\n    doccashback = frappe.get_doc(\"Aturan Cashback\", aturan_cashback[0])\n    percentage = 0\n    min_cashback = 0\n    for aturan in doccashback.details:\n        if min_cashback == 0:\n            min_cashback = aturan.from_total\n        if grand_total >= aturan.from_total and grand_total < aturan.to_total:\n            percentage = aturan.percentage\n    cashback = grand_total * percentage / 100000\n    if percentage == 0 and min_cashback > 0:\n        cashback = 0\n\ncust_group = doc.customer_group\nbagi_point = 0\naturan_poin = frappe.db.get_value(\"Aturan Poin\", {\"customer_group\": cust_group}, \"nilai_bagi\")\nif aturan_poin: bagi_point = aturan_poin\nget_point = 0\nif bagi_point > 0: get_point = int(grand_total)/bagi_point\n\nif doc.drop_center is None or doc.drop_center == \"\":\n    doc.drop_center = \"DC Purworejo\"\nif doc.shipping_address is None or doc.shipping_address == \"\":\n    frappe.throw(\"Error\")\nif doc.ekspedisi is None or doc.ekspedisi == \"\":\n    frappe.throw(\"Error\")\n\napp_status = \"Menunggu Detail Bayar\"\nif doc.drop_center != \"Upline\" and doc.upline != \"\":\n    app_status = \"Menunggu Approval\"\n    \ntry:\n    doc.get_cashback = int(cashback)\n    doc.get_point = int(get_point)\n    doc.application_status = app_status\n    doc.checkout_date = frappe.utils.today()\n    doc.waktu_pemesanan = frappe.utils.now()\n    doc.docstatus = 1\n    if nosave is None:\n        doc.save(ignore_permissions=True)\n        frappe.db.set_value(\"Customer\", doc.customer, {\n            \"default_sales_partner\": \"\"\n        })\n    frappe.response['data'] = doc\nexcept:\n    frappe.log_error(None, \"Submit Order\")\n    frappe.throw(\"Error\")\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v2.product.detail.price",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-13 15:51:35.461217",
  "name": "get item price only",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "warehouse = frappe.form_dict.warehouse\ncustomer_group = frappe.form_dict.customer_group\nitem = frappe.form_dict.item\n\nnow = frappe.utils.today()\n\nif warehouse is None: warehouse = \"Gudang Utama PWR - DRW\"\nif customer_group is None: customer_group = \"Umum\"\n\npricelist = 'b.price_list=\"'+customer_group+'\"'\nif customer_group == \"Consultant\":\n    pricelist = pricelist + ' or b.price_list=\"Umum\"'\nif customer_group == \"Supervisor\":\n    pricelist = pricelist + ' or b.price_list=\"Consultant\" or b.price_list=\"Umum\"'\nif customer_group == \"Manager\":\n    pricelist = pricelist + ' or b.price_list=\"Supervisor\" or b.price_list=\"Consultant\" or b.price_list=\"Umum\"'\nif customer_group == \"Director\":\n    pricelist = pricelist + ' or b.price_list=\"Manager\" or b.price_list=\"Supervisor\" or b.price_list=\"Consultant\" or b.price_list=\"Umum\"'\n\n# Query for the main item\ndoc = frappe.db.sql(\"select * from `tabItem` a left join `tabItem Price` b on a.item_code=b.item_code where a.is_apps=1 and a.disabled=0 and (\"+pricelist+\") and a.item_code=%(item)s order by b.price_list_rate asc\", {\"item\": item}, as_dict=True)\n\n# If doc is empty, query for fromName\nif not doc:\n    fromName = frappe.db.sql(\"select * from `tabItem` a left join `tabItem Price` b on a.item_name=b.item_name where a.is_apps=1 and a.disabled=0 and (\"+pricelist+\") and a.item_name=%(item)s order by b.price_list_rate asc\", {\"item\": item}, as_dict=True)\n    \n    # Process fromName if it is not empty\n    if fromName:\n        doc = fromName  # Use fromName as the new doc\n\n# Get stock details\nget = frappe.call(\"erpnext.stock.doctype.quick_stock_balance.quick_stock_balance.get_stock_item_details\", warehouse=warehouse, date=now, item=doc[0].item_code)\n\nprice = []\nfor prices in doc:\n    if prices.price_list == customer_group:\n        continue\n    price.append({\n        \"price_list\": prices.price_list,\n        \"price_list_rate\": prices.price_list_rate\n    })\n\ndata = []\n\nqty = get['qty']\nif qty < 100:\n    if doc[0].preorder > 0:\n        stock = \"Stok Habis\"\n    else:\n        stock = \"Preorder\"\nelif qty < 1000:\n    stock = \"Stok Limit\"\nelse:\n    stock = \"Stok Tersedia\"\n    \ndata.append({\n    \"item_code\": doc[0].item_code,\n    \"item_name\": doc[0].item_name,\n    \"bpom\": doc[0].bpom,\n    \"image\": doc[0].image,\n    \"description\": doc[0].description,\n    \"uom\": \"Pcs\",\n    \"conversion_factor\": 1.0,\n    \"price_list\": doc[0].price_list,\n    \"price_list_rate\": doc[0].price_list_rate,\n    \"price_list_downline\": price,\n    \"qty\": get['qty'],\n    \"stock\": stock\n})\n\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.product.detail.old",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-13 14:28:35.652042",
  "name": "New Apps - Get Product Detail Full Price List Old",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "warehouse = frappe.form_dict.warehouse\r\ncustomer_group = frappe.form_dict.customer_group\r\nitem = frappe.form_dict.item\r\n\r\nnow = frappe.utils.today()\r\n\r\nif warehouse is None: warehouse = \"Gudang Utama PWR - DRW\"\r\nif customer_group is None: customer_group = \"Umum\"\r\n\r\npricelist = 'b.price_list=\"'+customer_group+'\"'\r\nif customer_group == \"Consultant\":\r\n    pricelist = pricelist + ' or b.price_list=\"Umum\"'\r\nif customer_group == \"Supervisor\":\r\n    pricelist = pricelist + ' or b.price_list=\"Consultant\" or b.price_list=\"Umum\"'\r\nif customer_group == \"Manager\":\r\n    pricelist = pricelist + ' or b.price_list=\"Supervisor\" or b.price_list=\"Consultant\" or b.price_list=\"Umum\"'\r\nif customer_group == \"Director\":\r\n    pricelist = pricelist + ' or b.price_list=\"Manager\" or b.price_list=\"Supervisor\" or b.price_list=\"Consultant\" or b.price_list=\"Umum\"'\r\n\r\ndoc = frappe.db.sql(\"select * from `tabItem` a left join `tabItem Price` b on a.item_code=b.item_code where a.is_apps=1 and a.disabled=0 and (\"+pricelist+\") and a.item_code=%(item)s order by b.price_list_rate asc\", {\"item\": item}, as_dict=True)\r\n\r\nfromName = frappe.db.sql(\"select * from `tabItem` a left join `tabItem Price` b on a.item_name=b.item_name where a.is_apps=1 and a.disabled=0 and (\"+pricelist+\") and a.item_name=%(item)s order by b.price_list_rate asc\", {\"item\": item}, as_dict=True)\r\n\r\nget = frappe.call(\"erpnext.stock.doctype.quick_stock_balance.quick_stock_balance.get_stock_item_details\", warehouse=warehouse, date=now, item=doc[0].item_code)\r\n\r\nprice = []\r\nfor prices in doc:\r\n    if prices.price_list==customer_group:\r\n        continue\r\n    price.append({\r\n        \"price_list\": prices.price_list,\r\n        \"price_list_rate\": prices.price_list_rate\r\n    })\r\n\r\ndata = []\r\n\r\nqty = get['qty']\r\nif qty < 100:\r\n    if doc.preorder > 0:\r\n        stock = \"Stok Habis\"\r\n    else:\r\n        stock = \"Preorder\"\r\nelif qty < 1000:\r\n    stock = \"Stok Limit\"\r\nelse:\r\n    stock = \"Stok Tersedia\"\r\n    \r\ndata.append({\r\n    \"item_code\": doc[0].item_code,\r\n    \"item_name\": doc[0].item_name,\r\n    \"bpom\": doc[0].bpom,\r\n    \"image\": doc[0].image,\r\n    \"description\": doc[0].description,\r\n    \"uom\": \"Pcs\",\r\n    \"conversion_factor\": 1.0,\r\n    \"price_list\": doc[0].price_list,\r\n    \"price_list_rate\": doc[0].price_list_rate,\r\n    \"price_list_downline\": price,\r\n    \"qty\": get['qty'],\r\n    \"stock\": stock\r\n})\r\n\r\nfrappe.response['data'] = data\r\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "api.v2.get.batch.id",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-17 15:45:01.547303",
  "name": "DRW - Get Batch Id v2",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\n        \nq = frappe.get_doc(\"Batch\", {\"batch_id\":name})\npo = frappe.db.get_value(\"Purchase Receipt Item\", {\"batch_no\": name}, \"purchase_order\")\npo_no = frappe.db.get_value(\"Purchase Order\", po, \"nomor\")\ndata = {\n    \"name\": q.name,\n    \"owner\": q.owner,\n    \"creation\": q.creation,\n    \"modified\": q.modified,\n    \"modified_by\": q.modified_by,\n    \"batch_id\": q.batch_id,\n    \"item\": q.item,\n    \"item_name\": q.item_name,\n    \"manufacturing_date\": q.manufacturing_date,\n    \"batch_qty\": q.batch_qty,\n    \"stock_uom\": q.stock_uom,\n    \"expiry_date\": q.expiry_date,\n    \"qty_to_produce\": q.qty_to_produce,\n    \"produced_qty\": q.produced_qty,\n    \"batch_nomor\": q.batch_nomor,\n    \"qty\": q.qty,\n    \"warehouse\": q.warehouse,\n    \"company\": q.company,\n    \"dc\": q.dc,\n    \"so_date\": q.so_date,\n    \"po\": po_no\n}\n\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "event_frequency": "All",
  "modified": "2024-12-27 14:53:36.104595",
  "name": "Payment Submit",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Payment Entry",
  "script": "if doc.references[0].reference_doctype==\"Sales Invoice\" and doc.references[0].reference_name != None and doc.references[0].reference_name != \"\":\n    si = doc.references[0].reference_name\n    docsi = frappe.get_doc(\"Sales Invoice\", si)\n    so = docsi.items[0].sales_order\n    frappe.db.set_value(\"Sales Order\", so, {\n        \"application_status\": \"Dikemas\",\n        \"waktu_pembayaran\": frappe.utils.now()\n    })\n    \n    docso = frappe.get_doc(\"Sales Order\", so)\n    cust = docso.customer\n    doccust = frappe.get_doc(\"Customer\", cust)\n    if docso.get(\"coin_type\") is not None:\n        if docso.coin_type == \"Cashback\" and docso.total_coin > 0:\n            sisacoin = int(doccust.total_coin_cashback)-int(docso.total_coin)\n            frappe.db.set_value(\"Customer\", cust, {\n                \"total_coin_cashback\": sisacoin\n            })\n        else:\n            sisacoin = int(doccust.total_coins)-int(docso.total_coin)\n            frappe.db.set_value(\"Customer\", cust, {\n                \"total_coins\": sisacoin\n            })\n    if docso.get(\"get_point\") is not None:\n        if docso.get_point > 0:\n            curpoint = doccust.total_point\n            getpoint = docso.get_point\n            frappe.call(\"api.v1.add.agent.point.log\",so=so,curpoint=curpoint,getpoint=getpoint)\n    if docso.get(\"get_cashback\") is not None:\n        if docso.get_cashback > 0:\n            totalcashback = int(docso.get_cashback)\n            frappe.db.set_value(\"Customer\", cust, {\n                \"total_coin_cashback\": totalcashback\n            })\n            frappe.call(\"api.v1.add.agent.cashback.log\",so=so,coin=totalcashback)\n    if docso.get(\"klaim_kasbon\") is not None:\n        if docso.klaim_kasbon > 0:\n            klaimkasbon = docso.klaim_kasbon\n            frappe.db.set_value(\"Customer\", cust, {\n                \"klaim_kasbon\": klaimkasbon\n            })",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.list.history.cashback.old",
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-27 15:09:35.700102",
  "name": "New Apps - History Cashback Old",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\r\nlimit = frappe.form_dict.limit\r\nstart = frappe.form_dict.start\r\n\r\nif limit is None: limit = 20\r\nif start is None: start = 0\r\n\r\nfields = [\"*\"]\r\nfilters = [[\"customer\",\"=\",customer]]\r\n\r\ndoc = frappe.db.get_all(\"Agent Cashback Log\", fields=fields, filters=filters, limit_start=start, limit_page_length=limit, order_by=\"posting_date desc\")\r\n\r\ndata = []\r\nfor docs in doc:\r\n    customer_name = frappe.db.get_value(\"Sales Order\",docs.sales_order,\"customer_name\")\r\n    data.append({\r\n        \"name\": docs.name,\r\n        \"customer\": docs.customer,\r\n        \"nama_agent\": docs.nama_agent,\r\n        \"posting_date\": docs.posting_date,\r\n        \"sales_order\": docs.sales_order,\r\n        \"sales_order_name\": customer_name,\r\n        \"kelipatan\": docs.kelipatan,\r\n        \"total_margin\": docs.total_margin,\r\n        \"total_coin\": docs.total_coin\r\n    })\r\n\r\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.list.history.point.log",
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2024-12-28 06:40:12.377233",
  "name": "New Apps - History Poin Log",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "customer = frappe.form_dict.customer\r\nlimit = frappe.form_dict.limit\r\nstart = frappe.form_dict.start\r\n\r\nif limit is None: limit = 20\r\nif start is None: start = 0\r\n\r\nfields = [\"*\"]\r\nfilters = [[\"customer\",\"=\",customer]]\r\n\r\ndoc = frappe.db.get_all(\"Agent Point Log\", fields=fields, filters=filters, limit_start=start, limit_page_length=limit, order_by=\"modified desc\")\r\n\r\nfrappe.response['data'] = doc",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "api.v2.change.status.order.old",
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2025-01-02 15:01:53.923987",
  "name": "New Apps - Change Status Order Old",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "name = frappe.form_dict.name\nstatus = frappe.form_dict.status\n\nif status is not None:\n    frappe.db.set_value(\"Sales Order\", name, {\n        \"application_status\": status\n    })\n    doc = frappe.get_doc(\"Sales Order\", name)\n    cust = doc.customer\n    doccust = frappe.get_doc(\"Customer\", cust)\n    if doc.drop_center==\"Upline\":\n        if doc.get(\"get_point\") is not None:\n            if doc.get_point > 0:\n                curpoint = doccust.total_point\n                getpoint = doc.get_point\n                frappe.call(\"addons.v1.agent_point_log.add_new\", sales_order=name)\n        if doc.get(\"get_cashback\") is not None:\n            if doc.get_cashback > 0:\n                totalcashback = int(doccust.total_coin_cashback)+int(doc.get_cashback)\n                frappe.db.set_value(\"Customer\", cust, {\n                    \"total_coin_cashback\": totalcashback\n                })\n                frappe.call(\"api.v1.add.agent.cashback.log\",so=name,coin=totalcashback)\nelse:\n    doc = frappe.get_doc(\"Sales Order\", name)\n\nfrappe.response['data'] = {\n    \"name\": name,\n    \"drop_center\": doc.drop_center,\n    \"application_status\": doc.application_status\n}",
  "script_type": "API"
 }
]